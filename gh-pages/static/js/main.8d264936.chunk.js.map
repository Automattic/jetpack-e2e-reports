{"version":3,"sources":["components/ReportsTable.js","components/Reports.js","utils/fetch.js","utils/sort.js","components/BaseComponent.js","components/Tests.js","components/Charts.js","components/Failures.js","components/Performance.js","App.js","index.js"],"names":["ReportsTable","state","reports","props","sort","by","isAsc","this","sortTable","setState","sortByName","sortByDate","sortByStatus","isSortAsc","r1","r2","Date","parse","lastUpdate","name","statistic","failed","broken","sortButtons","reportCount","head","klass","options","Object","keys","map","key","index","Button","variant","onClick","toUpperCase","className","length","colSpan","report","id","metadata","isFailed","total","passed","skipped","getReportLinkCell","getTestResultsCell","getMetadataCell","totalTests","linkUrl","configData","dataSourceURL","reportKey","reportTitle","pr_title","prNumber","pr_number","branchUrl","branch","prUrl","statusIcon","faQuestion","statusClassName","faTimes","faCheck","icon","href","target","rel","ReactGA","pageview","faCodeBranch","counts","label","count","Badge","runUrl","run_id","moment","fromNow","Table","hover","responsive","size","getTableHeader","getReportRow","React","Component","Reports","pinnedReports","docsSize","undefined","reportsCount","isDataFetched","fetch","headers","Accept","then","response","json","jsonData","prReports","permanent","includes","push","catch","console","log","fetchJsonData","url","a","ok","error","status","sortArray","data","sortKey","desc","sorted","b","reverse","BaseComponent","sortOptions","currentSortStateBy","currentSortStateIsAsc","cssClass","sortData","filters","isMasterOnly","faCheckSquare","faSquare","prevState","dateFormat","getValidDate","controlId","fallbackValue","element","document","getElementById","value","InputGroup","e","setDatePickersValues","subtract","format","startDate","endDate","FormControl","type","max","onChange","endDateElement","minDate","setAttribute","start","end","Tests","rawData","testsData","dailyData","tests","list","distinctTests","totalTestResults","failedResults","failedRate","days","isDataReady","setTestsData","setDailyStatsData","prevProps","JSON","stringify","forEach","t","results","filter","r","time","isBetween","masterRuns","test","toFixed","d","date","day","grid","left","right","dataZoom","tooltip","trigger","axisPointer","legend","textStyle","color","xAxis","yAxis","splitLine","lineStyle","min","axisLabel","formatter","series","yAxisIndex","symbol","symbolSize","stack","emphasis","focus","badges","classHide","rate","isNaN","slice","result","classHasSource","source","replace","window","open","getTotalsBadges","getResultsLine","getFilterByDateFields","option","chartOptions","getMasterOnlyFilterButton","getSortButtons","getTestContent","Charts","weeklyData","monthlyData","weeks","months","config","filterData","entries","title","text","top","fontSize","borderColor","fillerColor","startValue","params","dailyChartOptions","weeklyChartOptions","monthlyChartOptions","Failures","errorsData","errors","totalErrors","distinctErrors","setErrorsData","setWeeklyStatsData","times","newest","Math","oldest","testsNames","Set","testName","resultsForTest","allErrors","flat","week","badge","details","trace","getListOfTests","getListOfFailures","show","recent","common","getErrorContent","Performance","selected","metrics","base","comp","round","baseAvg","obj","metric","toISOString","split","jetpack","jetpackAvg","out","entry","reduce","acc","byDate","chartData","prettyTitle","style","height","width","last","prev","diffPercent","calcPercent","Row","justifyContent","display","at","Container","onSelect","renderTypeInfo","fluid","Col","sm","renderContainer","loaded","inserterOpen","inserterHover","inserterSearch","prepareChartData","renderButtons","renderChart","initialize","App","basename","Navbar","expand","Brand","Toggle","aria-controls","Collapse","Nav","activeKey","location","pathname","Link","exact","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8d264936.chunk.js","sourcesContent":["import { Table, Badge, Button } from 'react-bootstrap';\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n\tfaCheck,\n\tfaCodeBranch,\n\tfaQuestion,\n\tfaTimes,\n} from '@fortawesome/free-solid-svg-icons';\nimport ReactGA from 'react-ga';\nimport moment from 'moment';\nimport configData from '../config.json';\n\nexport default class ReportsTable extends React.Component {\n\tstate = {\n\t\treports: this.props.reports,\n\t\tsort: { by: 'lastUpdate', isAsc: false },\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.sortTable( this.state.sort.by, this.state.sort.isAsc );\n\t}\n\n\tsortTable( by, isAsc ) {\n\t\tthis.setState( { sort: { by, isAsc } } );\n\n\t\tswitch ( by ) {\n\t\t\tcase 'name':\n\t\t\t\treturn this.sortByName( isAsc );\n\t\t\tcase 'lastUpdate':\n\t\t\t\treturn this.sortByDate( isAsc );\n\t\t\tcase 'statistic':\n\t\t\t\treturn this.sortByStatus( isAsc );\n\t\t}\n\t}\n\n\tsortByDate( isSortAsc ) {\n\t\treturn this.state.reports.sort( ( r1, r2 ) => {\n\t\t\tif ( isSortAsc ) {\n\t\t\t\treturn (\n\t\t\t\t\tDate.parse( r1.lastUpdate ) - Date.parse( r2.lastUpdate )\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn Date.parse( r2.lastUpdate ) - Date.parse( r1.lastUpdate );\n\t\t} );\n\t}\n\n\tsortByName( isSortAsc ) {\n\t\treturn this.state.reports.sort( ( r1, r2 ) =>\n\t\t\tisSortAsc ? r1.name - r2.name : r2.name - r1.name\n\t\t);\n\t}\n\n\tsortByStatus( isSortAsc ) {\n\t\treturn this.state.reports.sort( ( r1, r2 ) => {\n\t\t\tif ( isSortAsc ) {\n\t\t\t\treturn (\n\t\t\t\t\tr1.statistic.failed +\n\t\t\t\t\tr1.statistic.broken -\n\t\t\t\t\t( r2.statistic.failed + r2.statistic.broken )\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn (\n\t\t\t\tr2.statistic.failed +\n\t\t\t\tr2.statistic.broken -\n\t\t\t\t( r1.statistic.failed + r1.statistic.broken )\n\t\t\t);\n\t\t} );\n\t}\n\n\tgetTableHeader() {\n\t\tconst head = {\n\t\t\tname: 'report id',\n\t\t\tstatistic: 'no of failures',\n\t\t\tlastUpdate: 'most recent',\n\t\t};\n\n\t\tconst klass = this.state.sort.isAsc ? 'sort-by-asc' : 'sort-by-desc';\n\t\tlet sortButtons;\n\n\t\tif ( this.props.options.sortButtons ) {\n\t\t\tsortButtons = Object.keys( head ).map( ( key, index ) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"dark\"\n\t\t\t\t\t\tkey={ index }\n\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\tthis.sortTable( key, ! this.state.sort.isAsc );\n\t\t\t\t\t\t} }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ head[ key ].toUpperCase() }\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\tthis.state.sort.by === key ? klass : ''\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Button>\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\tlet reportCount;\n\t\tif ( this.props.reportCount ) {\n\t\t\treportCount = `${ this.state.reports.length } reports`;\n\t\t}\n\n\t\treturn (\n\t\t\t<thead>\n\t\t\t\t<tr className={ 'headerRow' }>\n\t\t\t\t\t<td colSpan=\"3\" className={ 'sort-buttons' }>\n\t\t\t\t\t\t<div className={ 'd-flex justify-content-between' }>\n\t\t\t\t\t\t\t<div>{ reportCount }</div>\n\t\t\t\t\t\t\t<div>{ sortButtons }</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t);\n\t}\n\n\tgetReportRow( report, id ) {\n\t\tconst { statistic, metadata } = report; //destructuring\n\t\tconst isFailed =\n\t\t\tstatistic.total !== statistic.passed + statistic.skipped;\n\t\treturn (\n\t\t\t<tr key={ id }>\n\t\t\t\t<td className={ 'reportNameCell' }>\n\t\t\t\t\t{ this.getReportLinkCell(\n\t\t\t\t\t\treport,\n\t\t\t\t\t\tmetadata,\n\t\t\t\t\t\tisFailed,\n\t\t\t\t\t\tstatistic.total\n\t\t\t\t\t) }\n\t\t\t\t</td>\n\t\t\t\t<td>{ this.getTestResultsCell( statistic ) }</td>\n\t\t\t\t<td>{ this.getMetadataCell( report ) }</td>\n\t\t\t</tr>\n\t\t);\n\t}\n\n\tgetReportLinkCell( report, metadata, isFailed, totalTests ) {\n\t\tconst linkUrl = `${ configData.dataSourceURL }/reports/${ report.name }/report/index.html`;\n\n\t\tconst reportKey = report.name;\n\t\tlet reportTitle = report.name;\n\n\t\tif ( metadata.pr_title ) {\n\t\t\tconst prNumber = `(#${ metadata.pr_number })`;\n\t\t\treportTitle = `${ metadata.pr_title } ${ prNumber }`;\n\t\t}\n\n\t\tconst branchUrl = `https://github.com/Automattic/jetpack/tree/${ metadata.branch }`;\n\t\tconst prUrl = `https://github.com/Automattic/jetpack/pull/${ metadata.pr_number }`;\n\n\t\tlet statusIcon = faQuestion;\n\t\tlet statusClassName = 'warning';\n\t\tif ( totalTests > 0 ) {\n\t\t\tstatusIcon = isFailed ? faTimes : faCheck;\n\t\t\tstatusClassName = isFailed ? 'failed' : 'passed';\n\t\t}\n\n\t\treturn (\n\t\t\t<ul className={ 'list-unstyled' }>\n\t\t\t\t<li>\n\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\tclassName={ statusClassName }\n\t\t\t\t\t\ticon={ statusIcon }\n\t\t\t\t\t/>\n\t\t\t\t\t&nbsp;\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={ linkUrl }\n\t\t\t\t\t\tclassName=\"report-link\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\tonClick={ () => ReactGA.pageview( '/' + report.name ) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ reportTitle }\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<small>\n\t\t\t\t\t\t#{ reportKey } { ' • ' }\n\t\t\t\t\t\t<FontAwesomeIcon icon={ faCodeBranch } />{ ' ' }\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={ branchUrl }\n\t\t\t\t\t\t\ttarget={ '_blank' }\n\t\t\t\t\t\t\tclassName={ 'report-link' }\n\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ metadata.branch }\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t{ metadata.pr_number ? ' • ' : '' }\n\t\t\t\t\t\t{ metadata.pr_number && (\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref={ prUrl }\n\t\t\t\t\t\t\t\ttarget={ '_blank' }\n\t\t\t\t\t\t\t\tclassName={ 'report-link' }\n\t\t\t\t\t\t\t\trel={ 'noreferrer' }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tPR { metadata.pr_number }\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</small>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t}\n\n\tgetTestResultsCell( statistic ) {\n\t\tconst counts = [ 'failed', 'passed', 'total' ].map( ( label, id ) => {\n\t\t\tconst count =\n\t\t\t\tlabel === 'failed'\n\t\t\t\t\t? statistic[ label ] + statistic.broken\n\t\t\t\t\t: statistic[ label ];\n\t\t\treturn (\n\t\t\t\t<Badge key={ id } className={ `label label-status-${ label }` }>\n\t\t\t\t\t{ label } { count }\n\t\t\t\t</Badge>\n\t\t\t);\n\t\t} );\n\n\t\treturn <div>{ counts }</div>;\n\t}\n\n\tgetMetadataCell( report ) {\n\t\tconst runUrl = `https://github.com/Automattic/jetpack/actions/runs/${ report.metadata.run_id }`;\n\t\treturn (\n\t\t\t<ul className={ 'list-unstyled' }>\n\t\t\t\t<li>\n\t\t\t\t\t<small>\n\t\t\t\t\t\tlast update: { moment( report.lastUpdate ).fromNow() }\n\t\t\t\t\t</small>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<small>\n\t\t\t\t\t\tlast run id:{ ' ' }\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={ runUrl }\n\t\t\t\t\t\t\ttarget={ '_blank' }\n\t\t\t\t\t\t\tclassName={ 'report-link' }\n\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ report.metadata.run_id }\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</small>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Table\n\t\t\t\thover\n\t\t\t\tresponsive=\"sm\"\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"dark\"\n\t\t\t\tclassName=\"reportsTable\"\n\t\t\t>\n\t\t\t\t{ this.getTableHeader() }\n\t\t\t\t<tbody>\n\t\t\t\t\t{ this.state.reports.map( ( report, id ) =>\n\t\t\t\t\t\tthis.getReportRow( report, id )\n\t\t\t\t\t) }\n\t\t\t\t</tbody>\n\t\t\t\t<tfoot>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colSpan={ 3 } />\n\t\t\t\t\t</tr>\n\t\t\t\t</tfoot>\n\t\t\t</Table>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport ReactGA from 'react-ga';\nimport configData from '../config.json';\nimport ReportsTable from './ReportsTable';\n\nexport default class Reports extends React.Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.state = {\n\t\t\treports: [],\n\t\t\tpinnedReports: [],\n\t\t\tdocsSize: undefined,\n\t\t\treportsCount: undefined,\n\t\t\tisDataFetched: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch( `${ configData.dataSourceURL }/data/reports.json`, {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAccept: 'application/json',\n\t\t\t},\n\t\t} )\n\t\t\t.then( ( response ) => response.json() )\n\t\t\t.then( ( jsonData ) => {\n\t\t\t\tconst prReports = { reports: [] };\n\t\t\t\tconst pinnedReports = { reports: [] };\n\n\t\t\t\tfor ( const report of jsonData.reports ) {\n\t\t\t\t\tif ( configData.permanent.includes( report.name ) ) {\n\t\t\t\t\t\tpinnedReports.reports.push( report );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprReports.reports.push( report );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.setState( {\n\t\t\t\t\treports: prReports.reports,\n\t\t\t\t\tpinnedReports: pinnedReports.reports,\n\t\t\t\t\tdocsSize: jsonData.docsSize,\n\t\t\t\t\treportsCount: jsonData.reportsCount,\n\t\t\t\t\tisDataFetched: true,\n\t\t\t\t} );\n\t\t\t} )\n\t\t\t.catch( console.log );\n\t\tReactGA.pageview( '/reports' );\n\t}\n\n\trender() {\n\t\tif ( ! this.state.isDataFetched ) {\n\t\t\treturn null;\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className={ 'reports-header' }>\n\t\t\t\t\t{ this.state.reportsCount } reports\n\t\t\t\t</div>\n\t\t\t\t<ReportsTable\n\t\t\t\t\treports={ this.state.pinnedReports }\n\t\t\t\t\toptions={ {\n\t\t\t\t\t\treportCount: false,\n\t\t\t\t\t\tsortButtons: false,\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t\t<ReportsTable\n\t\t\t\t\treports={ this.state.reports }\n\t\t\t\t\toptions={ {\n\t\t\t\t\t\treportCount: false,\n\t\t\t\t\t\tsortButtons: true,\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","export async function fetchJsonData( url ) {\n\tconst response = await fetch( url );\n\tif ( ! response.ok ) {\n\t\tconsole.error(\n\t\t\t`Error fetching data from ${ url } ${ response.status }`\n\t\t);\n\t}\n\treturn await response.json();\n}\n","export function sortArray( data, sortKey, desc = false ) {\n\tconst sorted = data.sort( ( a, b ) =>\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\ta[ sortKey ] > b[ sortKey ] ? 1 : b[ sortKey ] > a[ sortKey ] ? -1 : 0\n\t);\n\n\tif ( desc ) {\n\t\treturn sorted.reverse();\n\t}\n\n\treturn sorted;\n}\n","import React from 'react';\nimport { Button, FormControl, InputGroup } from 'react-bootstrap';\nimport { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport moment from 'moment';\n\nexport default class BaseComponent extends React.Component {\n\tgetSortButtons( sortOptions, currentSortStateBy, currentSortStateIsAsc ) {\n\t\tconst cssClass = currentSortStateIsAsc ? 'sort-by-asc' : 'sort-by-desc';\n\n\t\treturn Object.keys( sortOptions ).map( ( key, index ) => {\n\t\t\treturn (\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"dark\"\n\t\t\t\t\tkey={ index }\n\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\tthis.sortData( key, ! currentSortStateIsAsc );\n\t\t\t\t\t} }\n\t\t\t\t>\n\t\t\t\t\t{ sortOptions[ key ].toUpperCase() }\n\t\t\t\t\t{\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\tcurrentSortStateBy === key ? cssClass : ''\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t</Button>\n\t\t\t);\n\t\t} );\n\t}\n\n\tgetMasterOnlyFilterButton() {\n\t\tconst icon = this.state.filters.isMasterOnly ? faCheckSquare : faSquare;\n\n\t\treturn (\n\t\t\t<Button\n\t\t\t\tvariant=\"dark\"\n\t\t\t\tclassName=\"filter-btn\"\n\t\t\t\tonClick={ () => {\n\t\t\t\t\tthis.setState( prevState => ( {\n\t\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\t...prevState.filters,\n\t\t\t\t\t\t\tisMasterOnly: ! this.state.filters.isMasterOnly,\n\t\t\t\t\t\t},\n\t\t\t\t\t} ) );\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t<FontAwesomeIcon icon={ icon } /> master only\n\t\t\t</Button>\n\t\t);\n\t}\n\n\tgetFilterByDateFields() {\n\t\tconst dateFormat = 'YYYY-MM-DD';\n\n\t\tfunction getValidDate( controlId, fallbackValue ) {\n\t\t\tconst element = document.getElementById( controlId );\n\t\t\treturn element.value ? element.value : fallbackValue;\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"col filters\">\n\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t{ [ [ 'today', 0 ], [ 'last 7 days', 7 ], [ 'last 14 days', 14 ] ].map( ( e, index ) =>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tkey={ index }\n\t\t\t\t\t\t\t\tvariant=\"dark\"\n\t\t\t\t\t\t\t\tclassName=\"filter-btn\"\n\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\tthis.setDatePickersValues( moment().subtract( e[ 1 ], 'd' ).format( dateFormat ), moment().format( dateFormat ) );\n\t\t\t\t\t\t\t\t\tthis.setState( prevState => ( {\n\t\t\t\t\t\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\t\t\t\t\t...prevState.filters,\n\t\t\t\t\t\t\t\t\t\t\tstartDate: getValidDate( 'startDate', '1970-01-01' ),\n\t\t\t\t\t\t\t\t\t\t\tendDate: getValidDate( 'endDate', moment().format( dateFormat ) ),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t} ) );\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t>{ e[ 0 ] }</Button>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t<FormControl type=\"date\" id=\"startDate\"\n\t\t\t\t\t\t\tmax={ moment().format( dateFormat ) }\n\t\t\t\t\t\t\tonChange={ () => {\n\t\t\t\t\t\t\t\tconst endDateElement = document.getElementById( 'endDate' );\n\t\t\t\t\t\t\t\tconst minDate = getValidDate( 'startDate', '2021-10-01' );\n\t\t\t\t\t\t\t\tendDateElement.setAttribute( 'min', minDate );\n\t\t\t\t\t\t\t\tif ( moment( endDateElement.value ).format( dateFormat ) < moment( minDate ).format( dateFormat ) ) {\n\t\t\t\t\t\t\t\t\tendDateElement.value = minDate;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormControl type=\"date\" id=\"endDate\"\n\t\t\t\t\t\t\tmax={ moment().format( 'YYYY-MM-DD' ) } />\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"dark\"\n\t\t\t\t\t\t\tclassName=\"filter-btn\"\n\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\tthis.setState( prevState => ( {\n\t\t\t\t\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\t\t\t\t...prevState.filters,\n\t\t\t\t\t\t\t\t\t\tstartDate: getValidDate( 'startDate', '1970-01-01' ),\n\t\t\t\t\t\t\t\t\t\tendDate: getValidDate( 'endDate', moment().format( dateFormat ) ),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t} ) );\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t>Apply</Button>\n\t\t\t\t\t</InputGroup>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tsetDatePickersValues( start, end ) {\n\t\tconst startDate = document.getElementById( 'startDate' );\n\t\tconst endDate = document.getElementById( 'endDate' );\n\t\tstartDate.value = start;\n\t\tendDate.value = end;\n\t}\n}\n","import React from 'react';\nimport { Badge } from 'react-bootstrap';\nimport ReactGA from 'react-ga';\nimport ReactEcharts from 'echarts-for-react';\nimport moment from 'moment';\nimport { fetchJsonData } from '../utils/fetch';\nimport { sortArray } from '../utils/sort';\nimport { masterRuns, dataSourceURL } from '../config.json';\nimport BaseComponent from './BaseComponent';\n\nexport default class Tests extends BaseComponent {\n\tstate = {\n\t\trawData: {\n\t\t\ttestsData: {},\n\t\t\tdailyData: [],\n\t\t},\n\t\ttests: {\n\t\t\tlist: [],\n\t\t\tdistinctTests: 0,\n\t\t\ttotalTestResults: 0,\n\t\t\tfailedResults: 0,\n\t\t\tfailedRate: 0,\n\t\t},\n\t\tdays: [],\n\t\tfilters: { isMasterOnly: false, startDate: moment().subtract( 14, 'd' ).format( 'YYYY-MM-DD' ), endDate: moment().format( 'YYYY-MM-DD' ) },\n\t\tsort: { by: 'failedRate', isAsc: false },\n\t\tisDataReady: false,\n\t};\n\n\tasync componentDidMount() {\n\t\tthis.setState( {\n\t\t\trawData: {\n\t\t\t\ttestsData: await fetchJsonData( `${ dataSourceURL }/data/tests.json` ),\n\t\t\t\tdailyData: await fetchJsonData( `${ dataSourceURL }/data/_daily.json` ),\n\t\t\t},\n\t\t} );\n\n\t\tthis.setTestsData();\n\t\tthis.setDailyStatsData();\n\n\t\tthis.setState( {\n\t\t\tisDataReady: true,\n\t\t} );\n\n\t\tthis.setDatePickersValues( this.state.filters.startDate, this.state.filters.endDate );\n\t\tReactGA.pageview( '/tests' );\n\t}\n\n\tcomponentDidUpdate( prevProps, prevState ) {\n\t\tif ( this.state.filters !== prevState.filters ) {\n\t\t\tconsole.log( this.state.filters );\n\t\t\tthis.setTestsData();\n\t\t\tthis.setDailyStatsData();\n\t\t}\n\n\t\tif ( this.state.tests.list !== prevState.tests.list ) {\n\t\t\tthis.sortData( this.state.sort.by, this.state.sort.isAsc );\n\t\t}\n\t}\n\n\tsetTestsData() {\n\t\t// make a copy of raw data object to process\n\t\t// wwe don't modify the original data\n\t\tlet tests = JSON.parse(\n\t\t\tJSON.stringify( this.state.rawData.testsData.tests )\n\t\t);\n\n\t\tif ( this.state.filters.startDate && this.state.filters.endDate ) {\n\t\t\ttests.forEach( ( t ) => {\n\t\t\t\tt.results = t.results.filter( ( r ) =>\n\t\t\t\t\tmoment( r.time ).isBetween( moment( this.state.filters.startDate, 'YYYY-MM-DD' ), moment( this.state.filters.endDate, 'YYYY-MM-DD' ), 'd', '[]' )\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\tif ( this.state.filters.isMasterOnly ) {\n\t\t\ttests.forEach( ( t ) => {\n\t\t\t\tt.results = t.results.filter( ( r ) =>\n\t\t\t\t\tmasterRuns.includes( r.report )\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\t// filter out tests with 0 results\n\t\ttests = tests.filter( ( e ) => e.results.length > 0 );\n\n\t\tfor ( const test of tests ) {\n\t\t\ttest.total = 0;\n\t\t\tfor ( const status of [ 'passed', 'failed', 'skipped' ] ) {\n\t\t\t\ttest[ status ] = test.results.filter(\n\t\t\t\t\t( t ) => t.status === status\n\t\t\t\t).length;\n\t\t\t\ttest.total += test[ status ];\n\t\t\t}\n\t\t\ttest.failedRate = ( test.failed / test.total * 100 ).toFixed( 2 );\n\n\t\t\ttest.results.sort( ( a, b ) => {\n\t\t\t\treturn a.time - b.time;\n\t\t\t} );\n\t\t}\n\n\t\tlet totalTestResults = 0;\n\t\tlet failedResults = 0;\n\t\ttests.forEach( ( t ) => {\n\t\t\ttotalTestResults += t.total;\n\t\t\tfailedResults += t.failed;\n\t\t} );\n\t\tconst failedRate = ( failedResults / totalTestResults * 100 ).toFixed( 2 );\n\n\t\tthis.setState( {\n\t\t\ttests: {\n\t\t\t\tlist: tests,\n\t\t\t\tdistinctTests: tests.length,\n\t\t\t\ttotalTestResults,\n\t\t\t\tfailedResults,\n\t\t\t\tfailedRate,\n\t\t\t},\n\t\t} );\n\t}\n\n\tsortData( by, isAsc ) {\n\t\tthis.state.tests.list.sort( ( a, b ) =>\n\t\t\tisAsc ? a[ by ] - b[ by ] : b[ by ] - a[ by ]\n\t\t);\n\n\t\tthis.setState( {\n\t\t\tsort: { by, isAsc },\n\t\t} );\n\t}\n\n\tsetDailyStatsData() {\n\t\t// make a copy of raw data object\n\t\t// we don't modify the original data\n\t\tlet days = JSON.parse(\n\t\t\tJSON.stringify( this.state.rawData.dailyData )\n\t\t);\n\n\t\tif ( this.state.filters.startDate && this.state.filters.endDate ) {\n\t\t\tdays = days.filter( ( d ) =>\n\t\t\t\tmoment( d.date ).isBetween( moment( this.state.filters.startDate, 'YYYY-MM-DD' ), moment( this.state.filters.endDate, 'YYYY-MM-DD' ), 'd', '[]' )\n\t\t\t);\n\t\t}\n\n\t\tdays.forEach( ( day ) => {\n\t\t\tday.failedRate = ( day.failed / day.total * 100 ).toFixed( 2 );\n\t\t} );\n\n\t\tsortArray( days, 'date', false );\n\n\t\tthis.setState( { days } );\n\t}\n\n\tchartOptions() {\n\t\t// chart options\n\t\treturn {\n\t\t\tgrid: {\n\t\t\t\tleft: 50,\n\t\t\t\tright: 50,\n\t\t\t},\n\t\t\tdataZoom: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'slider',\n\t\t\t\t},\n\t\t\t],\n\t\t\ttooltip: {\n\t\t\t\ttrigger: 'axis',\n\t\t\t\taxisPointer: {\n\t\t\t\t\ttype: 'cross',\n\t\t\t\t},\n\t\t\t},\n\t\t\tlegend: {\n\t\t\t\ttextStyle: {\n\t\t\t\t\tcolor: '#6b6d76',\n\t\t\t\t},\n\t\t\t},\n\t\t\txAxis: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'category',\n\t\t\t\t\tdata: this.state.days.map( function( e ) {\n\t\t\t\t\t\treturn e.date;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t],\n\t\t\tyAxis: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\ttype: 'dotted',\n\t\t\t\t\t\t\tcolor: '#6b6d76',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\ttype: 'dashed',\n\t\t\t\t\t\t\tcolor: 'rgba(107,109,118,0.47)',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmin: 0,\n\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\tformatter: '{value} %',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\tseries: [\n\t\t\t\t{\n\t\t\t\t\tname: 'failure rate',\n\t\t\t\t\ttype: 'line',\n\t\t\t\t\tyAxisIndex: 1,\n\t\t\t\t\tcolor: '#e38474',\n\t\t\t\t\tsymbol: 'roundRect',\n\t\t\t\t\tsymbolSize: 7,\n\t\t\t\t\tdata: this.state.days.map( function( e ) {\n\t\t\t\t\t\treturn e.failedRate;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'passed tests',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\tstack: '1',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgba(115, 151, 75, 0.73)',\n\t\t\t\t\tdata: this.state.days.map( function( e ) {\n\t\t\t\t\t\treturn e.passed;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'failed tests',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\tstack: '1',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgba(253, 90, 62, 0.71)',\n\t\t\t\t\tdata: this.state.days.map( function( e ) {\n\t\t\t\t\t\treturn e.failed;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'skipped tests',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\tstack: '1',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgba(170, 170, 170, 0.73)',\n\t\t\t\t\tdata: this.state.days.map( function( e ) {\n\t\t\t\t\t\treturn e.skipped;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t}\n\n\tgetTotalsBadges( test ) {\n\t\tconst badges = [ 'failed', 'passed', 'skipped', 'total' ].map(\n\t\t\t( label, id ) => {\n\t\t\t\tconst count = test[ label ];\n\n\t\t\t\t// hide statuses with no results\n\t\t\t\tconst classHide = count === 0 ? 'hide' : '';\n\n\t\t\t\tlet rate = (\n\t\t\t\t\t( count /\n\t\t\t\t\t\t( test.total -\n\t\t\t\t\t\t\t( label === 'skipped' ? 0 : test.skipped ) ) ) *\n\t\t\t\t\t100\n\t\t\t\t).toFixed( 1 );\n\n\t\t\t\tif ( label === 'total' ) {\n\t\t\t\t\trate = '';\n\t\t\t\t} else {\n\t\t\t\t\trate = isNaN( rate ) ? '' : `${ rate }%`;\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<li key={ id }>\n\t\t\t\t\t\t<Badge\n\t\t\t\t\t\t\tkey={ id }\n\t\t\t\t\t\t\tclassName={ `label label-fill label-status-${ label } ${ classHide }` }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ count } { label }\n\t\t\t\t\t\t\t<Badge className={ `badge-pill stat-pill` }>\n\t\t\t\t\t\t\t\t{ rate }\n\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t</Badge>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\n\t\treturn <ul className=\"list-unstyled\">{ badges }</ul>;\n\t}\n\n\tgetResultsLine( test ) {\n\t\tconst badges = test.results.slice( -150 ).map( ( result, id ) => {\n\t\t\tlet classHasSource = 'no-source';\n\t\t\tlet url;\n\n\t\t\tif ( result.source ) {\n\t\t\t\tclassHasSource = '';\n\t\t\t\turl = `${\n\t\t\t\t\tresult.report\n\t\t\t\t}/report/#testresult/${ result.source.replace( /.json/, '' ) }`;\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<Badge\n\t\t\t\t\tkey={ id }\n\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\tif ( url ) {\n\t\t\t\t\t\t\twindow.open( url, '_blank' );\n\t\t\t\t\t\t}\n\t\t\t\t\t} }\n\t\t\t\t\tclassName={ `has-tooltip label label-small label-status-${ result.status } ${ classHasSource }` }\n\t\t\t\t>\n\t\t\t\t\t&nbsp;\n\t\t\t\t\t<span className=\"tooltip-content\">\n\t\t\t\t\t\t{ moment( result.time ).format( 'MMM Do, h:mm a' ) }\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t{ result.source }\n\t\t\t\t\t</span>\n\t\t\t\t</Badge>\n\t\t\t);\n\t\t} );\n\t\treturn <div>{ badges }</div>;\n\t}\n\n\tgetTestContent( test, id ) {\n\t\treturn (\n\t\t\t<div key={ id } className=\"test-container\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-sm-auto\">\n\t\t\t\t\t\t<h1>{ test.name }</h1>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-sm-auto\">\n\t\t\t\t\t\t{ this.getTotalsBadges( test ) }\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col\">{ this.getResultsLine( test ) }</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\tif ( ! this.state.isDataReady ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn <div>\n\t\t\t<div className=\"row\">\n\t\t\t\t{ this.getFilterByDateFields() }\n\t\t\t</div>\n\t\t\t<ReactEcharts option={ this.chartOptions() } />\n\t\t\t<hr />\n\t\t\t<div className=\"row text-center\">\n\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t<div className=\"stat-box\">\n\t\t\t\t\t\t<span className=\"stat-number\">\n\t\t\t\t\t\t\t{ this.state.tests.distinctTests }\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<span className=\"stat-description\">tests</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t<div className=\"stat-box\">\n\t\t\t\t\t\t<span className=\"stat-number\">\n\t\t\t\t\t\t\t{ this.state.tests.totalTestResults }\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<span className=\"stat-description\">results</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t<div className=\"stat-box\">\n\t\t\t\t\t\t<span className=\"stat-number\">\n\t\t\t\t\t\t\t{ this.state.tests.failedResults }\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<span className=\"stat-description\">failures</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t<div className=\"stat-box\">\n\t\t\t\t\t\t<span className=\"stat-number\">\n\t\t\t\t\t\t\t{ this.state.tests.failedRate }%\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<span className=\"stat-description\">\n\t\t\t\t\t\t\tfailure rate\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<hr />\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-sm filters\">\n\t\t\t\t\t{ this.getMasterOnlyFilterButton() }\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-md sort-buttons\">\n\t\t\t\t\t{ this.getSortButtons(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttotal: 'runs',\n\t\t\t\t\t\t\tfailedRate: 'failure rate',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tthis.state.sort.by,\n\t\t\t\t\t\tthis.state.sort.isAsc\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<hr />\n\t\t\t<div>\n\t\t\t\t{ this.state.tests.list.map( ( test, id ) =>\n\t\t\t\t\tthis.getTestContent( test, id )\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</div>;\n\t}\n}\n","import React from 'react';\nimport ReactGA from 'react-ga';\nimport ReactEcharts from 'echarts-for-react';\nimport { fetchJsonData } from '../utils/fetch';\nimport { sortArray } from '../utils/sort';\nimport BaseComponent from './BaseComponent';\nimport config from '../config.json';\nimport moment from 'moment';\n\nexport default class Charts extends BaseComponent {\n\tstate = {\n\t\trawData: {\n\t\t\tdailyData: [],\n\t\t\tweeklyData: [],\n\t\t\tmonthlyData: [],\n\t\t},\n\t\tdays: [],\n\t\tweeks: [],\n\t\tmonths: [],\n\t\tfilters: { isMasterOnly: false },\n\t\tisDataReady: false,\n\t};\n\n\tasync componentDidMount() {\n\t\tthis.setState( {\n\t\t\trawData: {\n\t\t\t\tdailyData: await fetchJsonData( `${ config.dataSourceURL }/data/_daily.json` ),\n\t\t\t\tweeklyData: await fetchJsonData( `${ config.dataSourceURL }/data/_weekly.json` ),\n\t\t\t\tmonthlyData: await fetchJsonData( `${ config.dataSourceURL }/data/_monthly.json` ),\n\t\t\t},\n\t\t} );\n\n\t\tthis.setState( { days: this.filterData( this.state.rawData.dailyData ) } );\n\t\tthis.setState( { weeks: this.filterData( this.state.rawData.weeklyData ) } );\n\t\tthis.setState( { months: this.filterData( this.state.rawData.monthlyData ) } );\n\n\t\tthis.setState( {\n\t\t\tisDataReady: true,\n\t\t} );\n\n\t\tReactGA.pageview( '/charts' );\n\t}\n\n\tcomponentDidUpdate( prevProps, prevState ) {\n\t\tif ( this.state.filters !== prevState.filters ) {\n\t\t\tthis.setState( { days: this.filterData( this.state.rawData.dailyData ) } );\n\t\t\tthis.setState( { weeks: this.filterData( this.state.rawData.weeklyData ) } );\n\t\t\tthis.setState( { months: this.filterData( this.state.rawData.monthlyData ) } );\n\t\t}\n\t}\n\n\tfilterData( rawData ) {\n\t\t// make a copy of raw data object\n\t\t// we don't modify the original data\n\t\tconst entries = JSON.parse(\n\t\t\tJSON.stringify( rawData )\n\t\t);\n\n\t\t//todo filter by master only\n\n\t\tentries.forEach( ( day ) => {\n\t\t\tday.failedRate = ( day.failed / day.total * 100 ).toFixed( 2 );\n\t\t} );\n\n\t\tsortArray( entries, 'date', false );\n\n\t\treturn entries;\n\t}\n\n\tchartOptions( data ) {\n\t\treturn {\n\t\t\ttitle: {\n\t\t\t\ttext: '',\n\t\t\t\tleft: 'left',\n\t\t\t\ttop: 'top',\n\t\t\t\ttextStyle: {\n\t\t\t\t\tfontSize: 20,\n\t\t\t\t\tcolor: '#ccc',\n\t\t\t\t},\n\t\t\t},\n\t\t\tgrid: {\n\t\t\t\tleft: 50,\n\t\t\t\tright: 50,\n\t\t\t},\n\t\t\tdataZoom: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'slider',\n\t\t\t\t\tborderColor: '#343a40',\n\t\t\t\t\tfillerColor: 'rgba(244,244,244,0.18)',\n\t\t\t\t},\n\t\t\t],\n\t\t\ttooltip: {\n\t\t\t\ttrigger: 'axis',\n\t\t\t\taxisPointer: {\n\t\t\t\t\ttype: 'cross',\n\t\t\t\t},\n\t\t\t},\n\t\t\tlegend: {\n\t\t\t\ttextStyle: {\n\t\t\t\t\tcolor: '#ccc',\n\t\t\t\t},\n\t\t\t\tleft: 'right',\n\t\t\t},\n\t\t\txAxis: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'category',\n\t\t\t\t\tdata: data.map( function( e ) {\n\t\t\t\t\t\treturn e.date;\n\t\t\t\t\t} ),\n\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\tformatter: '{value}',\n\t\t\t\t\t},\n\t\t\t\t\taxisPointer: {\n\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\tformatter: '{value}',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\tyAxis: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\ttype: 'dotted',\n\t\t\t\t\t\t\tcolor: '#6b6d76',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\ttype: 'dashed',\n\t\t\t\t\t\t\tcolor: 'rgba(107,109,118,0.47)',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmin: 0,\n\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\tformatter: '{value} %',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\tseries: [\n\t\t\t\t{\n\t\t\t\t\tname: 'failure rate',\n\t\t\t\t\ttype: 'line',\n\t\t\t\t\tyAxisIndex: 1,\n\t\t\t\t\tcolor: '#e38474',\n\t\t\t\t\tsymbol: 'roundRect',\n\t\t\t\t\tsymbolSize: 4,\n\t\t\t\t\tdata: data.map( function( e ) {\n\t\t\t\t\t\treturn e.failedRate;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'passed tests',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\tstack: '1',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgba(115, 151, 75, 0.73)',\n\t\t\t\t\tdata: data.map( function( e ) {\n\t\t\t\t\t\treturn e.passed;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'failed tests',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\tstack: '1',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgba(253, 90, 62, 0.71)',\n\t\t\t\t\tdata: data.map( function( e ) {\n\t\t\t\t\t\treturn e.failed;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'skipped tests',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\tstack: '1',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgba(170, 170, 170, 0.73)',\n\t\t\t\t\tdata: data.map( function( e ) {\n\t\t\t\t\t\treturn e.skipped;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t}\n\n\tdailyChartOptions() {\n\t\tconst options = this.chartOptions( this.state.days );\n\t\toptions.title.text = 'Daily';\n\t\toptions.dataZoom[ 0 ].startValue = moment().subtract( 6, 'weeks' ).format( 'YYYY-MM-DD' );\n\t\toptions.xAxis[ 0 ].axisLabel.formatter = ( value ) => {\n\t\t\treturn moment( value ).format( 'MMM D, YYYY' );\n\t\t};\n\t\toptions.xAxis[ 0 ].axisPointer.label.formatter = ( params ) => {\n\t\t\treturn moment( params.value ).format( 'MMM D, YYYY' );\n\t\t};\n\n\t\treturn options;\n\t}\n\n\tweeklyChartOptions() {\n\t\tconst options = this.chartOptions( this.state.weeks );\n\t\toptions.title.text = 'Weekly';\n\t\treturn options;\n\t}\n\n\tmonthlyChartOptions() {\n\t\tconst options = this.chartOptions( this.state.months );\n\t\toptions.title.text = 'Monthly';\n\t\toptions.xAxis[ 0 ].axisLabel.formatter = ( value ) => {\n\t\t\treturn moment( value ).format( 'MMM YYYY' );\n\t\t};\n\t\toptions.xAxis[ 0 ].axisPointer.label.formatter = ( params ) => {\n\t\t\treturn moment( params.value ).format( 'MMM YYYY' );\n\t\t};\n\n\t\treturn options;\n\t}\n\n\trender() {\n\t\tif ( ! this.state.isDataReady ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn <div>\n\t\t\t<div className=\"row text-center\">\n\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t<div className=\"stat-box\">\n\t\t\t\t\t\t<span className=\"stat-number\">\n\t\t\t\t\t\t\t0.00 %\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<span className=\"stat-description\">24h failure rate</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t<div className=\"stat-box\">\n\t\t\t\t\t\t<span className=\"stat-number\">\n\t\t\t\t\t\t\t0.00 %\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<span className=\"stat-description\">7d failure rate</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t<div className=\"stat-box\">\n\t\t\t\t\t\t<span className=\"stat-number\">\n\t\t\t\t\t\t\t0.00 %\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<span className=\"stat-description\">30d failure rate</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<hr />\n\t\t\t<ReactEcharts option={ this.dailyChartOptions() } />\n\t\t\t<hr />\n\t\t\t<ReactEcharts option={ this.weeklyChartOptions() } />\n\t\t\t<hr />\n\t\t\t<ReactEcharts option={ this.monthlyChartOptions() } />\n\t\t\t<hr />\n\t\t</div>;\n\t}\n}\n","import React from 'react';\nimport ReactGA from 'react-ga';\nimport moment from 'moment';\nimport ReactEcharts from 'echarts-for-react';\nimport { Badge } from 'react-bootstrap';\nimport { fetchJsonData } from '../utils/fetch';\nimport { sortArray } from '../utils/sort';\nimport { masterRuns, dataSourceURL } from '../config.json';\nimport BaseComponent from './BaseComponent';\n\nexport default class Failures extends BaseComponent {\n\tstate = {\n\t\trawData: {\n\t\t\terrorsData: {},\n\t\t\tweeklyData: [],\n\t\t},\n\t\terrors: {\n\t\t\tlist: [],\n\t\t\ttotalErrors: 0,\n\t\t\tdistinctErrors: 0,\n\t\t},\n\t\tweeks: [],\n\t\tfilters: { isMasterOnly: false, startDate: moment().subtract( 14, 'd' ).format( 'YYYY-MM-DD' ), endDate: moment().format( 'YYYY-MM-DD' ) },\n\t\tsort: { by: 'common', isAsc: false },\n\t\tisDataReady: false,\n\t};\n\n\tasync componentDidMount() {\n\t\tthis.setState( {\n\t\t\trawData: {\n\t\t\t\terrorsData: await fetchJsonData( `${ dataSourceURL }/data/errors.json` ),\n\t\t\t\tweeklyData: await fetchJsonData( `${ dataSourceURL }/data/_weekly.json` ),\n\t\t\t},\n\t\t} );\n\n\t\tthis.setErrorsData();\n\t\tthis.setWeeklyStatsData();\n\n\t\tthis.setState( {\n\t\t\tisDataReady: true,\n\t\t} );\n\t\tthis.setDatePickersValues( this.state.filters.startDate, this.state.filters.endDate );\n\t\tReactGA.pageview( '/failures' );\n\t}\n\n\tcomponentDidUpdate( prevProps, prevState ) {\n\t\tif ( this.state.filters !== prevState.filters ) {\n\t\t\tthis.setErrorsData();\n\t\t}\n\n\t\tif ( this.state.errors.list !== prevState.errors.list ) {\n\t\t\tthis.sortData( this.state.sort.by, this.state.sort.isAsc );\n\t\t}\n\t}\n\n\tsetErrorsData() {\n\t\t// make a copy of raw data errors object to process\n\t\t// wwe don't modify the original data\n\t\tlet errors = JSON.parse(\n\t\t\tJSON.stringify( this.state.rawData.errorsData.errors )\n\t\t);\n\n\t\tif ( this.state.filters.startDate && this.state.filters.endDate ) {\n\t\t\terrors.forEach( ( e ) => {\n\t\t\t\te.results = e.results.filter( ( r ) =>\n\t\t\t\t\tmoment( r.time ).isBetween( moment( this.state.filters.startDate, 'YYYY-MM-DD' ), moment( this.state.filters.endDate, 'YYYY-MM-DD' ), 'd', '[]' )\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\tif ( this.state.filters.isMasterOnly ) {\n\t\t\terrors.forEach( ( e ) => {\n\t\t\t\te.results = e.results.filter( ( r ) =>\n\t\t\t\t\tmasterRuns.includes( r.report )\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\t// filter out errors with 0 occurrences\n\t\terrors = errors.filter( ( e ) => e.results.length > 0 );\n\n\t\t// calculate some stats for each error\n\t\tfor ( const error of errors ) {\n\t\t\terror.total = error.results.length;\n\t\t\tconst times = error.results.map( ( r ) => r.time );\n\t\t\terror.newest = Math.max( ...times );\n\t\t\terror.oldest = Math.min( ...times );\n\n\t\t\tconst testsNames = [\n\t\t\t\t...new Set( error.results.map( ( r ) => r.test ) ),\n\t\t\t];\n\n\t\t\terror.tests = [];\n\n\t\t\tfor ( const testName of testsNames ) {\n\t\t\t\tconst resultsForTest = error.results.filter(\n\t\t\t\t\t( r ) => r.test === testName\n\t\t\t\t);\n\n\t\t\t\terror.tests.push( {\n\t\t\t\t\tname: testName,\n\t\t\t\t\ttimes: resultsForTest.map( ( r ) => r.time ),\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\tconst allErrors = errors.map( ( e ) => e.results ).flat();\n\n\t\tthis.setState( {\n\t\t\terrors: {\n\t\t\t\tlist: errors,\n\t\t\t\tdistinctErrors: errors.length,\n\t\t\t\ttotalErrors: allErrors.length,\n\t\t\t},\n\t\t} );\n\t}\n\n\tsortData( by, isAsc ) {\n\t\tswitch ( by ) {\n\t\t\tcase 'recent':\n\t\t\t\tthis.state.errors.list.sort( ( a, b ) =>\n\t\t\t\t\tisAsc ? a.newest - b.newest : b.newest - a.newest\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'common':\n\t\t\t\tthis.state.errors.list.sort( ( a, b ) =>\n\t\t\t\t\tisAsc\n\t\t\t\t\t\t? a.results.length - b.results.length\n\t\t\t\t\t\t: b.results.length - a.results.length\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.setState( {\n\t\t\tsort: { by, isAsc },\n\t\t} );\n\t}\n\n\tsetWeeklyStatsData() {\n\t\t// make a copy of raw data object\n\t\t// we don't modify the original data\n\t\tconst weeks = JSON.parse(\n\t\t\tJSON.stringify( this.state.rawData.weeklyData )\n\t\t);\n\n\t\tweeks.forEach( ( week ) => {\n\t\t\tweek.failedRate = ( week.failed / week.total * 100 ).toFixed( 2 );\n\t\t} );\n\n\t\tsortArray( weeks, 'date' );\n\n\t\tthis.setState( { weeks } );\n\t}\n\n\tgetListOfTests( tests ) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{ tests.map( ( test, id ) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Badge\n\t\t\t\t\t\t\tkey={ id }\n\t\t\t\t\t\t\tclassName=\"label label-status-skipped\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ test.name }{ ' ' }\n\t\t\t\t\t\t\t<Badge className={ `badge-pill stat-pill` }>\n\t\t\t\t\t\t\t\t{ test.times.length }\n\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t</Badge>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\t\t\t</div>\n\t\t);\n\t}\n\n\tgetListOfFailures( results ) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{ results.map( ( result, id ) => {\n\t\t\t\t\tlet badge = moment( result.time ).format(\n\t\t\t\t\t\t'MMM Do, h:mm a'\n\t\t\t\t\t);\n\n\t\t\t\t\tlet className = 'no-source';\n\n\t\t\t\t\tif ( result.source ) {\n\t\t\t\t\t\tconst url = `${\n\t\t\t\t\t\t\tresult.report\n\t\t\t\t\t\t}/report/#testresult/${ result.source.replace(\n\t\t\t\t\t\t\t/.json/,\n\t\t\t\t\t\t\t''\n\t\t\t\t\t\t) }`;\n\t\t\t\t\t\tbadge = (\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref={ url }\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\tclassName=\"report-link\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ badge }\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tclassName = '';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// don't display results with no source,\n\t\t\t\t\t\t// because it looks bad for some common errors that have a lot of results\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tkey={ id }\n\t\t\t\t\t\t\tclassName={ `failure-link ${ className }` }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ badge }\n\t\t\t\t\t\t</span>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\t\t\t</div>\n\t\t);\n\t}\n\n\tgetErrorContent( error, id ) {\n\t\tlet details = `${ error.total } times, since ${ moment(\n\t\t\terror.oldest\n\t\t).fromNow() }. Last failed ${ moment( error.newest ).fromNow() }`;\n\n\t\tif ( error.total === 1 ) {\n\t\t\tdetails = `once, ${ moment( error.oldest ).fromNow() }`;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"error-container\" key={ id }>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<pre className=\"error-container-trace\">{ error.trace }</pre>\n\t\t\t\t\t<div>{ details }</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t{ this.getListOfTests( error.tests ) }\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t{ this.getListOfFailures( error.results ) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tchartOptions() {\n\t\treturn {\n\t\t\tgrid: {\n\t\t\t\tleft: 50,\n\t\t\t\tright: 50,\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\ttrigger: 'axis',\n\t\t\t\taxisPointer: {\n\t\t\t\t\ttype: 'cross',\n\t\t\t\t},\n\t\t\t},\n\t\t\tlegend: {\n\t\t\t\ttextStyle: {\n\t\t\t\t\tcolor: '#6b6d76',\n\t\t\t\t},\n\t\t\t},\n\t\t\txAxis: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'category',\n\t\t\t\t\tdata: this.state.weeks.map( function( e ) {\n\t\t\t\t\t\treturn e.date;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t],\n\t\t\tyAxis: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tshow: false,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\ttype: 'dotted',\n\t\t\t\t\t\t\tcolor: '#6b6d76',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmin: 0,\n\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\tformatter: '{value} %',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\tseries: [\n\t\t\t\t{\n\t\t\t\t\tname: 'failure rate',\n\t\t\t\t\ttype: 'line',\n\t\t\t\t\tyAxisIndex: 1,\n\t\t\t\t\tcolor: '#e38474',\n\t\t\t\t\tsymbol: 'roundRect',\n\t\t\t\t\tsymbolSize: 7,\n\t\t\t\t\tdata: this.state.weeks.map( function( e ) {\n\t\t\t\t\t\treturn e.failedRate;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'failed tests',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: '#fd5a3e',\n\t\t\t\t\tdata: this.state.weeks.map( function( e ) {\n\t\t\t\t\t\treturn e.failed;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t}\n\n\trender() {\n\t\tif ( ! this.state.isDataReady ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst lastUpdate = moment(\n\t\t\tthis.state.rawData.errorsData.lastUpdate\n\t\t).fromNow();\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<ReactEcharts option={ this.chartOptions() } />\n\t\t\t\t<hr />\n\t\t\t\t<div className=\"row text-center\">\n\t\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t\t<div className=\"stat-box\">\n\t\t\t\t\t\t\t<span className=\"stat-number\">\n\t\t\t\t\t\t\t\t{ this.state.errors.totalErrors }\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<span className=\"stat-description\">\n\t\t\t\t\t\t\t\ttotal errors\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t\t<div className=\"stat-box\">\n\t\t\t\t\t\t\t<span className=\"stat-number\">\n\t\t\t\t\t\t\t\t{ this.state.errors.distinctErrors }\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<span className=\"stat-description\">\n\t\t\t\t\t\t\t\tdistinct errors\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<hr />\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t{ this.getFilterByDateFields() }\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-sm filters\">\n\t\t\t\t\t\t{ this.getMasterOnlyFilterButton() }\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-md sort-buttons\">\n\t\t\t\t\t\t{ this.getSortButtons(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trecent: 'most recent',\n\t\t\t\t\t\t\t\tcommon: 'most common',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tthis.state.sort.by,\n\t\t\t\t\t\t\tthis.state.sort.isAsc\n\t\t\t\t\t\t) }\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<hr />\n\t\t\t\t<div>\n\t\t\t\t\t{ this.state.errors.list.map( ( error, id ) =>\n\t\t\t\t\t\tthis.getErrorContent( error, id )\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"text-right col small\">\n\t\t\t\t\t\tupdated { lastUpdate }\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport ReactGA from 'react-ga';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { dataSourceURL } from '../config.json';\nimport ReactEcharts from 'echarts-for-react';\n\nexport default class Performance extends React.Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.state = {\n\t\t\tselected: 'type',\n\t\t\trawData: [],\n\t\t\tisDataFetched: false,\n\t\t\tmetrics: [ 'serverResponse', 'firstPaint', 'domContentLoaded', 'loaded', 'firstContentfulPaint', 'firstBlock', 'type', 'focus', 'listViewOpen', 'inserterOpen', 'inserterHover', 'inserterSearch' ],\n\t\t};\n\t}\n\n\tcalcPercent( base, comp ) {\n\t\treturn Math.round( ( ( ( comp / base ) - 1 ) * 100 ) * 100 ) / 100;\n\t}\n\n\tprettyTitle( title ) {\n\t\treturn title.replace( /([a-z0-9])([A-Z])/g, '$1 $2' ).toUpperCase();\n\t}\n\n\tprepareChartData( jsonData ) {\n\t\tconst result = {};\n\t\tconst metrics = Object.keys( jsonData[ jsonData.length - 1 ].baseAvg );\n\n\t\tjsonData.forEach( obj => {\n\t\t\tmetrics.forEach( metric => {\n\t\t\t\tif ( ! result[ metric ] ) {\n\t\t\t\t\tresult[ metric ] = [];\n\t\t\t\t}\n\t\t\t\tlet date = new Date( obj.date );\n\t\t\t\tdate = date.toISOString().split( 'T' )[ 0 ];\n\t\t\t\tresult[ metric ].push( { base: obj.baseAvg[ metric ], jetpack: obj.jetpackAvg[ metric ], date } );\n\t\t\t} );\n\t\t} );\n\n\t\tconst out = {};\n\n\t\tmetrics.forEach( metric => {\n\t\t\tconst dates = [ ...new Set( result[ metric ].map( entry => entry.date ) ) ];\n\t\t\tconst entries = dates.reduce( ( acc, date ) => {\n\t\t\t\tconst byDate = result[ metric ].filter( e => e.date === date );\n\n\t\t\t\tacc.push( {\n\t\t\t\t\tbase: Math.round( byDate.reduce( ( acc, e ) => acc += e.base, 0 ) / byDate.length ),\n\t\t\t\t\tjetpack: Math.round( byDate.reduce( ( acc, e ) => acc += e.jetpack, 0 ) / byDate.length ),\n\t\t\t\t\tdate,\n\t\t\t\t} );\n\n\t\t\t\treturn acc;\n\t\t\t}, [] );\n\n\t\t\tout[ metric ] = entries;\n\t\t} );\n\n\t\treturn out;\n\t}\n\n\tasync componentDidMount() {\n\t\tawait fetch( `${ dataSourceURL }/data/perf-metrics.json`, {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAccept: 'application/json',\n\t\t\t},\n\t\t} )\n\t\t\t.then( ( response ) => response.json() )\n\t\t\t.then( ( jsonData ) => {\n\t\t\t\tthis.setState( {\n\t\t\t\t\trawData: jsonData,\n\t\t\t\t\tisDataFetched: true,\n\t\t\t\t} );\n\t\t\t} )\n\t\t\t.catch( console.log );\n\n\t\tReactGA.pageview( 'performance' );\n\t}\n\n\trenderChart( type, chartData ) {\n\t\tconst chartOptions = {\n\t\t\tgrid: {\n\t\t\t\tleft: 60,\n\t\t\t\tright: 0,\n\t\t\t},\n\t\t\ttitle: {\n\t\t\t\ttext: this.prettyTitle( type ),\n\t\t\t\ttextStyle: {\n\t\t\t\t\tcolor: '#cccccc',\n\t\t\t\t\tfontSize: '0.9rem',\n\t\t\t\t},\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\ttrigger: 'axis',\n\t\t\t\taxisPointer: {\n\t\t\t\t\ttype: 'cross',\n\t\t\t\t},\n\t\t\t},\n\t\t\txAxis: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'category',\n\t\t\t\t\tdata: chartData.map( function( e ) {\n\t\t\t\t\t\treturn e.date;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t],\n\t\t\tyAxis: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\ttype: 'dotted',\n\t\t\t\t\t\t\tcolor: '#6b6d76',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\ttype: 'dashed',\n\t\t\t\t\t\t\tcolor: 'rgba(107,109,118,0.47)',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmin: 0,\n\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\tformatter: '{value} %',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\tdataZoom: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'inside',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tstart: 50,\n\t\t\t\t\tend: 100,\n\t\t\t\t},\n\t\t\t],\n\t\t\tseries: [\n\t\t\t\t{\n\t\t\t\t\tname: 'base',\n\t\t\t\t\ttype: 'line',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgb(99,100,138)',\n\t\t\t\t\tdata: chartData.map( function( e ) {\n\t\t\t\t\t\treturn e.base;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'jetpack',\n\t\t\t\t\ttype: 'line',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgb(99,150,138)',\n\t\t\t\t\tdata: chartData.map( function( e ) {\n\t\t\t\t\t\treturn e.jetpack;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\treturn <ReactEcharts option={ chartOptions }\n\t\t\tstyle={ { height: '400px', width: '100%' } }\n\t\t/>;\n\t}\n\n\tonSelect( type ) {\n\t\tthis.setState( { selected: type } );\n\t}\n\n\trenderTypeInfo( type, last, prev ) {\n\t\tconst diffPercent = this.calcPercent( prev, last );\n\n\t\treturn (\n\t\t\t<Row style={ { justifyContent: 'space-between' } }>\n\t\t\t\t<div style={ { display: 'flex' } }><h5>{ type }: { last } ms.</h5>&nbsp;from: { prev }ms.</div>\n\t\t\t\t<span>&nbsp;VS previous: { diffPercent }ms.</span>\n\t\t\t</Row>\n\t\t);\n\t}\n\n\trenderContainer( type, data ) {\n\t\tconst last = data.at( -1 );\n\t\tconst prev = data.at( -2 );\n\n\t\treturn <Container className=\"perf-button\" onClick={ () => this.onSelect( type ) }>\n\t\t\t<Row><h4>{ this.state.selected === type ? <u>{ this.prettyTitle( type ) }</u> : this.prettyTitle( type ) }</h4></Row>\n\t\t\t<Row>&nbsp;</Row>\n\t\t\t{ this.renderTypeInfo( 'Base', last.base, prev.base ) }\n\t\t\t{ this.renderTypeInfo( 'Jetpack', last.jetpack, prev.jetpack ) }\n\t\t</Container>;\n\t}\n\n\trenderButtons( chartData ) {\n\t\treturn <Container fluid>\n\t\t\t<Row>\n\t\t\t\t<Col sm>{ this.renderContainer( 'type', chartData.type ) }</Col>\n\t\t\t\t<Col sm>{ this.renderContainer( 'loaded', chartData.loaded ) }</Col>\n\t\t\t\t<Col sm>{ this.renderContainer( 'focus', chartData.focus ) }</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Col sm>{ this.renderContainer( 'inserterOpen', chartData.inserterOpen ) }</Col>\n\t\t\t\t<Col sm>{ this.renderContainer( 'inserterHover', chartData.inserterHover ) }</Col>\n\t\t\t\t<Col sm>{ this.renderContainer( 'inserterSearch', chartData.inserterSearch ) }</Col>\n\n\t\t\t</Row>\n\t\t</Container>;\n\t}\n\n\trender() {\n\t\tif ( ! this.state.isDataFetched ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst chartData = this.prepareChartData( this.state.rawData );\n\n\t\tconst type = this.state.selected;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h4>Editor Performance Metrics</h4>\n\t\t\t\t<p>This examines block editor performance with and without Jetpack using the Gutenberg performance tests.</p>\n\t\t\t\t{ this.renderButtons( chartData ) }\n\t\t\t\t{ this.renderChart( type, chartData[ type ] ) }\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport ReactGA from 'react-ga';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Navbar, Container, Nav } from 'react-bootstrap';\nimport Reports from './components/Reports';\nimport { HashRouter, Route, Routes } from 'react-router-dom';\nimport Tests from './components/Tests';\nimport Charts from './components/Charts';\nimport Failures from './components/Failures';\nimport Performance from './components/Performance';\n\nconst TRACKING_ID = 'UA-208890082-1';\nReactGA.initialize( TRACKING_ID );\n\nfunction App() {\n\tconst basename = '/jetpack-e2e-reports';\n\n\treturn (\n\t\t<Container fluid className=\"App\">\n\t\t\t<div className=\"App-content\">\n\t\t\t\t<Navbar variant=\"dark\" expand=\"md\" className=\"app-nav-bar\">\n\t\t\t\t\t<Container fluid className=\"app-nav-bar-inner-container\">\n\t\t\t\t\t\t<Navbar.Brand href={ `${ basename }/#/` }>\n\t\t\t\t\t\t\tJetpack test dashboard\n\t\t\t\t\t\t</Navbar.Brand>\n\t\t\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t\t\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t\t\t\t<Nav\n\t\t\t\t\t\t\t\tactiveKey={ location.pathname }\n\t\t\t\t\t\t\t\tclassName=\"ml-auto\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Nav.Link href={ `${ basename }/#/reports` }>\n\t\t\t\t\t\t\t\t\tReports\n\t\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t\t<Nav.Link href={ `${ basename }/#/tests` }>\n\t\t\t\t\t\t\t\t\tTests\n\t\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t\t<Nav.Link href={ `${ basename }/#/failures` }>\n\t\t\t\t\t\t\t\t\tFailures\n\t\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t\t<Nav.Link\n\t\t\t\t\t\t\t\t\thref={ `${ basename }/#/performance` }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tPerformance\n\t\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t</Nav>\n\t\t\t\t\t\t</Navbar.Collapse>\n\t\t\t\t\t</Container>\n\t\t\t\t</Navbar>\n\t\t\t\t<HashRouter>\n\t\t\t\t\t<Routes>\n\t\t\t\t\t\t<Route exact path=\"/\" element={ <Reports /> } />\n\t\t\t\t\t\t<Route exact path=\"/reports\" element={ <Reports /> } />\n\t\t\t\t\t\t<Route exact path=\"/tests\" element={ <Tests /> } />\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tpath=\"/failures\"\n\t\t\t\t\t\t\telement={ <Failures /> }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tpath=\"/performance\"\n\t\t\t\t\t\t\telement={ <Performance /> }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route exact path=\"/charts\" element={ <Charts /> } />\n\t\t\t\t\t</Routes>\n\t\t\t\t</HashRouter>\n\t\t\t</div>\n\t\t\t<footer className=\"App-footer\">\n\t\t\t\t<div>\n\t\t\t\t\t<a\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\thref=\"https://github.com/Automattic/jetpack-e2e-reports/\"\n\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t>\n\t\t\t\t\t\tCode\n\t\t\t\t\t</a>\n\t\t\t\t\t{ ' • ' }\n\t\t\t\t\t<a\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\thref=\"https://github.com/Automattic/jetpack-e2e-reports/actions\"\n\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t>\n\t\t\t\t\t\tActions\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</footer>\n\t\t</Container>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById( 'root' )\n);\n"],"sourceRoot":""}