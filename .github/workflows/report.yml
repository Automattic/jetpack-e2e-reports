name: Report

on:
  repository_dispatch:
    types: [e2e]

  workflow_dispatch:
    inputs:
      client_payload:
        description: 'The client payload'
        required: true
        default: '{"branch": "test/test-branch","pr_number": "99999","pr_title": "This is a test PR.","report_name": "","repository": "Automattic/jetpack","run_id": "2259156708","run_number": "12345"}'

jobs:
  report:
    name: "Create new test report"
    runs-on: ubuntu-latest
    env:
      PR_NUMBER: ${{ github.event.client_payload.pr_number }}
      RUN_ID: ${{ github.event.client_payload.run_id }}
      REPOSITORY: ${{ github.event.client_payload.repository }}
      BRANCH: ${{ github.event.client_payload.branch }}
      REPORT_NAME: ${{ github.event.client_payload.report_name }}
      CLIENT_PAYLOAD: ${{ toJson(github.event.client_payload) }}

    steps:
      - name: Setup Node
        uses: actions/setup-node@v2

      - name: Checkout
        uses: actions/checkout@v2

      - name: Parse event information
        run: ./bin/set-event-data.sh

      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Allure
        env:
          DESTINATION_PATH: ../
        run: ./bin/install-allure.sh

      - name: Configure S3 Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Wait for artifacts to be available
        run: ./bin/wait-for-artifacts.sh

      - name: Download artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          repo: ${{ env.REPOSITORY }}
          workflow: e2e-tests.yml
          workflow_conclusion: "completed"
          run_id: ${{ env.RUN_ID }}
          path: ../downloads

      - name: Generate new test report (GitHub)
        env:
          RESULTS_PATH: ../downloads
          SITE_ROOT: docs
        run: ./bin/generate-report.sh

      - name: Push changes (GitHub)
        env:
          MESSAGE: "New test report"
        run: ./bin/push-changes.sh

      - name: Generate test report
        env:
          RESULTS_PATH: ../downloads
        run: ./bin/generate-report-s3.sh

      - name: Update reports list
        run: node ./bin/update-reports-list.js
