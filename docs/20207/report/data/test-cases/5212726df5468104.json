{
  "uid" : "5212726df5468104",
  "name" : "Pinterest block",
  "fullName" : "Pinterest block",
  "historyId" : "bf919c5c1253559f0d007402decf47af",
  "time" : {
    "start" : 1625691598789,
    "stop" : 1625691605954,
    "duration" : 7165
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pinterest block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _pinterest.default.name(),\n        _pinterest.default.title()\n      );\n      const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n      await pinterestBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const pinId = _config.default.get(&quot;blocks.pinterest.pinId&quot;);\n\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a Pinterest block&quot;,\n    async () =&gt; {\n      const blockId = await blockEditor.insertBlock(\n        _pinterest.default.name(),\n        _pinterest.default.title()\n      );\n      const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n      await pinterestBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post with a Pinterest block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can assert that Pinterest block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 9,
        "unknown" : 0,
        "total" : 9
      },
      "items" : [ {
        "uid" : "11030f5f6f2e9f59",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20207/report/#testresult/11030f5f6f2e9f59",
        "status" : "passed",
        "time" : {
          "start" : 1625689084065,
          "stop" : 1625689091426,
          "duration" : 7361
        }
      }, {
        "uid" : "d4eba9c7eccc7b18",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20207/report/#testresult/d4eba9c7eccc7b18",
        "status" : "passed",
        "time" : {
          "start" : 1625687477957,
          "stop" : 1625687483917,
          "duration" : 5960
        }
      }, {
        "uid" : "e6630a69bc9e0f62",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20207/report/#testresult/e6630a69bc9e0f62",
        "status" : "passed",
        "time" : {
          "start" : 1625686460776,
          "stop" : 1625686466056,
          "duration" : 5280
        }
      }, {
        "uid" : "5c1c01fd52dd9ada",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20207/report/#testresult/5c1c01fd52dd9ada",
        "status" : "passed",
        "time" : {
          "start" : 1625611372959,
          "stop" : 1625611378842,
          "duration" : 5883
        }
      }, {
        "uid" : "c06f6d89f9cd23b2",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20207/report/#testresult/c06f6d89f9cd23b2",
        "status" : "passed",
        "time" : {
          "start" : 1625610527812,
          "stop" : 1625610535697,
          "duration" : 7885
        }
      }, {
        "uid" : "5016b9a94fa27bfc",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20207/report/#testresult/5016b9a94fa27bfc",
        "status" : "passed",
        "time" : {
          "start" : 1625164500813,
          "stop" : 1625164507205,
          "duration" : 6392
        }
      }, {
        "uid" : "14a1219dab9b2538",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20207/report/#testresult/14a1219dab9b2538",
        "status" : "passed",
        "time" : {
          "start" : 1625163770246,
          "stop" : 1625163777327,
          "duration" : 7081
        }
      }, {
        "uid" : "925be7004a5f004f",
        "status" : "passed",
        "time" : {
          "start" : 1624919819694,
          "stop" : 1624919825776,
          "duration" : 6082
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "5212726df5468104.json",
  "parameterValues" : [ ]
}