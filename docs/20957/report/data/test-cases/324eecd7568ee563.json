{
  "uid" : "324eecd7568ee563",
  "name" : "Can perform search with default settings",
  "fullName" : "Can perform search with default settings",
  "historyId" : "8a48effa07b2a0dc8118fcc35772e118",
  "time" : {
    "start" : 1634585377378,
    "stop" : 1634585380849,
    "duration" : 3471
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _reporters.testStep)(\n    \"Can open the overlay by entering a query\",\n    async () => {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporters.testStep)(\n    \"Can show search controls in the overlay\",\n    async () => {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporters.testStep)(\n    \"Can show search results in the overlay\",\n    async () => {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporters.testStep)(\n    \"Can sort results by relevance by default\",\n    async () => {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        \"<mark>Test1</mark> Record 1\"\n      );\n    }\n  );\n  await (0, _reporters.testStep)(\"Can edit query in search form\", async () => {\n    await homepage.enterQueryToOverlay(\"test2\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 1\"\n    );\n  });\n  await (0, _reporters.testStep)(\"Can change sort order\", async () => {\n    await homepage.chooseSortingLink(\"newest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"newest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n    await homepage.chooseSortingLink(\"oldest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"oldest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n  });\n  await (0, _reporters.testStep)(\"Can apply filters\", async () => {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n  });\n  await (0, _reporters.testStep)(\n    \"Can close overlay by clicking the cross\",\n    async () => {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  await (0, _reporters.testStep)(\n    &quot;Can open the overlay by entering a query&quot;,\n    async () =&gt; {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporters.testStep)(\n    &quot;Can show search controls in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporters.testStep)(\n    &quot;Can show search results in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporters.testStep)(\n    &quot;Can sort results by relevance by default&quot;,\n    async () =&gt; {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        &quot;&lt;mark&gt;Test1&lt;/mark&gt; Record 1&quot;\n      );\n    }\n  );\n  await (0, _reporters.testStep)(&quot;Can edit query in search form&quot;, async () =&gt; {\n    await homepage.enterQueryToOverlay(&quot;test2&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 1&quot;\n    );\n  });\n  await (0, _reporters.testStep)(&quot;Can change sort order&quot;, async () =&gt; {\n    await homepage.chooseSortingLink(&quot;newest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;newest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n    await homepage.chooseSortingLink(&quot;oldest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;oldest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n  });\n  await (0, _reporters.testStep)(&quot;Can apply filters&quot;, async () =&gt; {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n  });\n  await (0, _reporters.testStep)(\n    &quot;Can close overlay by clicking the cross&quot;,\n    async () =&gt; {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _reporters.testStep)(\n    \"Can open the overlay by entering a query\",\n    async () => {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporters.testStep)(\n    \"Can show search controls in the overlay\",\n    async () => {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporters.testStep)(\n    \"Can show search results in the overlay\",\n    async () => {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporters.testStep)(\n    \"Can sort results by relevance by default\",\n    async () => {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        \"<mark>Test1</mark> Record 1\"\n      );\n    }\n  );\n  await (0, _reporters.testStep)(\"Can edit query in search form\", async () => {\n    await homepage.enterQueryToOverlay(\"test2\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 1\"\n    );\n  });\n  await (0, _reporters.testStep)(\"Can change sort order\", async () => {\n    await homepage.chooseSortingLink(\"newest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"newest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n    await homepage.chooseSortingLink(\"oldest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"oldest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n  });\n  await (0, _reporters.testStep)(\"Can apply filters\", async () => {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n  });\n  await (0, _reporters.testStep)(\n    \"Can close overlay by clicking the cross\",\n    async () => {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Can open the overlay by entering a query",
      "time" : {
        "start" : 1634585377452,
        "stop" : 1634585378162,
        "duration" : 710
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can show search controls in the overlay",
      "time" : {
        "start" : 1634585378168,
        "stop" : 1634585378298,
        "duration" : 130
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can show search results in the overlay",
      "time" : {
        "start" : 1634585378300,
        "stop" : 1634585378318,
        "duration" : 18
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can sort results by relevance by default",
      "time" : {
        "start" : 1634585378320,
        "stop" : 1634585378347,
        "duration" : 27
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can edit query in search form",
      "time" : {
        "start" : 1634585378359,
        "stop" : 1634585378706,
        "duration" : 347
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can change sort order",
      "time" : {
        "start" : 1634585378708,
        "stop" : 1634585379518,
        "duration" : 810
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can apply filters",
      "time" : {
        "start" : 1634585379521,
        "stop" : 1634585380230,
        "duration" : 709
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can close overlay by clicking the cross",
      "time" : {
        "start" : 1634585380233,
        "stop" : 1634585380327,
        "duration" : 94
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "search.test.js"
  }, {
    "name" : "tag",
    "value" : "Jetpack version: 10.3-a.2-6b008d4e8747289f189c079f235437bed62fa227"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 32,
        "unknown" : 0,
        "total" : 32
      },
      "items" : [ {
        "uid" : "e576c1636537b4a0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20957/report/#testresult/e576c1636537b4a0",
        "status" : "passed",
        "time" : {
          "start" : 1634570563203,
          "stop" : 1634570567689,
          "duration" : 4486
        }
      }, {
        "uid" : "297c66069e9c772a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20957/report/#testresult/297c66069e9c772a",
        "status" : "passed",
        "time" : {
          "start" : 1634562960415,
          "stop" : 1634562965210,
          "duration" : 4795
        }
      }, {
        "uid" : "965dd1ccbc965bcd",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20957/report/#testresult/965dd1ccbc965bcd",
        "status" : "passed",
        "time" : {
          "start" : 1634337236259,
          "stop" : 1634337240346,
          "duration" : 4087
        }
      }, {
        "uid" : "bb8b0396da793c28",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20957/report/#testresult/bb8b0396da793c28",
        "status" : "passed",
        "time" : {
          "start" : 1634331966137,
          "stop" : 1634331971851,
          "duration" : 5714
        }
      }, {
        "uid" : "d8251bcea49f5050",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20957/report/#testresult/d8251bcea49f5050",
        "status" : "passed",
        "time" : {
          "start" : 1634328320995,
          "stop" : 1634328325782,
          "duration" : 4787
        }
      }, {
        "uid" : "14b1f2241370caea",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20957/report/#testresult/14b1f2241370caea",
        "status" : "passed",
        "time" : {
          "start" : 1634326810268,
          "stop" : 1634326813817,
          "duration" : 3549
        }
      }, {
        "uid" : "323173655cd31ac3",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20957/report/#testresult/323173655cd31ac3",
        "status" : "passed",
        "time" : {
          "start" : 1634323741235,
          "stop" : 1634323744760,
          "duration" : 3525
        }
      }, {
        "uid" : "8d417eaadf93781",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20957/report/#testresult/8d417eaadf93781",
        "status" : "passed",
        "time" : {
          "start" : 1634248251964,
          "stop" : 1634248256929,
          "duration" : 4965
        }
      }, {
        "uid" : "ef0747b3e7215e15",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20957/report/#testresult/ef0747b3e7215e15",
        "status" : "passed",
        "time" : {
          "start" : 1634244140316,
          "stop" : 1634244146011,
          "duration" : 5695
        }
      }, {
        "uid" : "d8d3a02dc127e3d1",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20957/report/#testresult/d8d3a02dc127e3d1",
        "status" : "passed",
        "time" : {
          "start" : 1634241043542,
          "stop" : 1634241047115,
          "duration" : 3573
        }
      }, {
        "uid" : "55c1098ff7fd12a6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20957/report/#testresult/55c1098ff7fd12a6",
        "status" : "passed",
        "time" : {
          "start" : 1634227072675,
          "stop" : 1634227077900,
          "duration" : 5225
        }
      }, {
        "uid" : "b3202861a51fcf2d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20957/report/#testresult/b3202861a51fcf2d",
        "status" : "passed",
        "time" : {
          "start" : 1634060495252,
          "stop" : 1634060498936,
          "duration" : 3684
        }
      }, {
        "uid" : "c49b6eebeff2745b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20957/report/#testresult/c49b6eebeff2745b",
        "status" : "passed",
        "time" : {
          "start" : 1634055263509,
          "stop" : 1634055267133,
          "duration" : 3624
        }
      }, {
        "uid" : "833329a46ab9f59",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20957/report/#testresult/833329a46ab9f59",
        "status" : "passed",
        "time" : {
          "start" : 1633615153281,
          "stop" : 1633615158068,
          "duration" : 4787
        }
      }, {
        "uid" : "4dcb30d0bf3f30bf",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20957/report/#testresult/4dcb30d0bf3f30bf",
        "status" : "passed",
        "time" : {
          "start" : 1633528491509,
          "stop" : 1633528496031,
          "duration" : 4522
        }
      }, {
        "uid" : "39a1c1ffa9a386ea",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20957/report/#testresult/39a1c1ffa9a386ea",
        "status" : "passed",
        "time" : {
          "start" : 1633447887984,
          "stop" : 1633447891454,
          "duration" : 3470
        }
      }, {
        "uid" : "48c5237cc91bf27d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20957/report/#testresult/48c5237cc91bf27d",
        "status" : "passed",
        "time" : {
          "start" : 1633385068576,
          "stop" : 1633385071843,
          "duration" : 3267
        }
      }, {
        "uid" : "9d482225da14a544",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20957/report/#testresult/9d482225da14a544",
        "status" : "passed",
        "time" : {
          "start" : 1633360015180,
          "stop" : 1633360018780,
          "duration" : 3600
        }
      }, {
        "uid" : "2864ea2653c85204",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20957/report/#testresult/2864ea2653c85204",
        "status" : "passed",
        "time" : {
          "start" : 1633357247234,
          "stop" : 1633357254086,
          "duration" : 6852
        }
      }, {
        "uid" : "f16fd265b0d9750b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20957/report/#testresult/f16fd265b0d9750b",
        "status" : "passed",
        "time" : {
          "start" : 1633126742644,
          "stop" : 1633126747188,
          "duration" : 4544
        }
      } ]
    },
    "tags" : [ "Jetpack version: 10.3-a.2-6b008d4e8747289f189c079f235437bed62fa227" ]
  },
  "source" : "324eecd7568ee563.json",
  "parameterValues" : [ ]
}