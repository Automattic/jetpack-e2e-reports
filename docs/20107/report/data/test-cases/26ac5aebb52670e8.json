{
  "uid" : "26ac5aebb52670e8",
  "name" : "Pay with PayPal",
  "fullName" : "Pay with PayPal",
  "historyId" : "2b956f1af1e91da7ea3b442b8c2cddca",
  "time" : {
    "start" : 1624586875181,
    "stop" : 1624586881090,
    "duration" : 5909
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pay with PayPal block\",\n    async () => {\n      await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n      blockId = await blockEditor.insertBlock(\n        _simplePayments.default.name(),\n        _simplePayments.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can fill details of Pay with PayPal block\",\n    async () => {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that Pay with PayPal block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a Pay with PayPal block&quot;,\n    async () =&gt; {\n      await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n      blockId = await blockEditor.insertBlock(\n        _simplePayments.default.name(),\n        _simplePayments.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can fill details of Pay with PayPal block&quot;,\n    async () =&gt; {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that Pay with PayPal block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8a6b58c0f7580cf6",
      "name" : "1624586852689_beforeAll___Paid_blocks.webm",
      "source" : "8a6b58c0f7580cf6.webm",
      "type" : "video/webm",
      "size" : 1144547
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "80b968d6363511c3",
      "name" : "1624586819008_beforeAll___ROOT_DESCRIBE_BLOCK.webm",
      "source" : "80b968d6363511c3.webm",
      "type" : "video/webm",
      "size" : 396147
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pay with PayPal block\",\n    async () => {\n      await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n      blockId = await blockEditor.insertBlock(\n        _simplePayments.default.name(),\n        _simplePayments.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can fill details of Pay with PayPal block\",\n    async () => {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that Pay with PayPal block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "2a3e223aa55d09a7",
      "name" : "1624586880966_Paid_blocks___Pay_with_PayPal.webm",
      "source" : "2a3e223aa55d09a7.webm",
      "type" : "video/webm",
      "size" : 271605
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "ac6f8bc9cb416feb",
      "status" : "passed",
      "time" : {
        "start" : 1624570138962,
        "stop" : 1624570146037,
        "duration" : 7075
      }
    }, {
      "uid" : "40fa5f5fa5107566",
      "status" : "passed",
      "time" : {
        "start" : 1624568839316,
        "stop" : 1624568847173,
        "duration" : 7857
      }
    }, {
      "uid" : "c3a00048ad78256c",
      "status" : "passed",
      "time" : {
        "start" : 1624566250583,
        "stop" : 1624566259006,
        "duration" : 8423
      }
    }, {
      "uid" : "3640560436d38af7",
      "status" : "passed",
      "time" : {
        "start" : 1624563872336,
        "stop" : 1624563879453,
        "duration" : 7117
      }
    }, {
      "uid" : "17ca0377d67294e",
      "status" : "passed",
      "time" : {
        "start" : 1624561350850,
        "stop" : 1624561356710,
        "duration" : 5860
      }
    }, {
      "uid" : "e453ecce2b928e00",
      "status" : "passed",
      "time" : {
        "start" : 1624525709949,
        "stop" : 1624525721216,
        "duration" : 11267
      }
    }, {
      "uid" : "a8069cddd55965a8",
      "status" : "passed",
      "time" : {
        "start" : 1624515358154,
        "stop" : 1624515365842,
        "duration" : 7688
      }
    }, {
      "uid" : "8e19b499d8bae2a5",
      "status" : "passed",
      "time" : {
        "start" : 1624492804483,
        "stop" : 1624492812966,
        "duration" : 8483
      }
    }, {
      "uid" : "c7561c3c1859c76e",
      "status" : "passed",
      "time" : {
        "start" : 1624489304170,
        "stop" : 1624489310933,
        "duration" : 6763
      }
    }, {
      "uid" : "1cbaaee784b262e4",
      "status" : "passed",
      "time" : {
        "start" : 1624484635137,
        "stop" : 1624484641487,
        "duration" : 6350
      }
    }, {
      "uid" : "6e12d5706bf132ae",
      "status" : "broken",
      "statusDetails" : "TimeoutError",
      "time" : {
        "start" : 1624483220121,
        "stop" : 1624483220156,
        "duration" : 35
      }
    }, {
      "uid" : "4eb18b62650404a",
      "status" : "passed",
      "time" : {
        "start" : 1624481839541,
        "stop" : 1624481848718,
        "duration" : 9177
      }
    }, {
      "uid" : "2c6e49ed9b737adc",
      "status" : "passed",
      "time" : {
        "start" : 1624471188263,
        "stop" : 1624471194766,
        "duration" : 6503
      }
    }, {
      "uid" : "9b1eafd6378e8123",
      "status" : "passed",
      "time" : {
        "start" : 1624469758171,
        "stop" : 1624469766639,
        "duration" : 8468
      }
    }, {
      "uid" : "c6ed24fbf93a87ae",
      "status" : "passed",
      "time" : {
        "start" : 1624468428483,
        "stop" : 1624468434845,
        "duration" : 6362
      }
    }, {
      "uid" : "fb4f5e30c8d3c123",
      "status" : "passed",
      "time" : {
        "start" : 1624424020396,
        "stop" : 1624424027545,
        "duration" : 7149
      }
    }, {
      "uid" : "91b8c1501c82e53c",
      "status" : "passed",
      "time" : {
        "start" : 1624422188685,
        "stop" : 1624422196471,
        "duration" : 7786
      }
    }, {
      "uid" : "b61b4cb857f906ec",
      "status" : "passed",
      "time" : {
        "start" : 1624417421615,
        "stop" : 1624417428021,
        "duration" : 6406
      }
    }, {
      "uid" : "7078f61576228e21",
      "status" : "passed",
      "time" : {
        "start" : 1624412554652,
        "stop" : 1624412560832,
        "duration" : 6180
      }
    }, {
      "uid" : "a24a2c0cc5319271",
      "status" : "passed",
      "time" : {
        "start" : 1624410615418,
        "stop" : 1624410626291,
        "duration" : 10873
      }
    }, {
      "uid" : "38d0eb9ae01ce636",
      "status" : "passed",
      "time" : {
        "start" : 1624409615429,
        "stop" : 1624409623286,
        "duration" : 7857
      }
    }, {
      "uid" : "2261178a81981e",
      "status" : "passed",
      "time" : {
        "start" : 1624408230562,
        "stop" : 1624408237016,
        "duration" : 6454
      }
    }, {
      "uid" : "11c49e2e80eae169",
      "status" : "passed",
      "time" : {
        "start" : 1624403788229,
        "stop" : 1624403795349,
        "duration" : 7120
      }
    }, {
      "uid" : "7d80e628b98409ba",
      "status" : "passed",
      "time" : {
        "start" : 1624399044632,
        "stop" : 1624399052512,
        "duration" : 7880
      }
    }, {
      "uid" : "ebfa570261633e22",
      "status" : "passed",
      "time" : {
        "start" : 1624337289838,
        "stop" : 1624337301154,
        "duration" : 11316
      }
    }, {
      "uid" : "494e76ad728de7ec",
      "status" : "passed",
      "time" : {
        "start" : 1624335334573,
        "stop" : 1624335343931,
        "duration" : 9358
      }
    }, {
      "uid" : "44976359ad26386b",
      "status" : "passed",
      "time" : {
        "start" : 1624251189728,
        "stop" : 1624251202941,
        "duration" : 13213
      }
    } ],
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "26ac5aebb52670e8.json",
  "parameterValues" : [ ]
}