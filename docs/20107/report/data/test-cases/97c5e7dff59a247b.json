{
  "uid" : "97c5e7dff59a247b",
  "name" : "Pinterest block",
  "fullName" : "Pinterest block",
  "historyId" : "bf919c5c1253559f0d007402decf47af",
  "time" : {
    "start" : 1624471237766,
    "stop" : 1624471243215,
    "duration" : 5449
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pinterest block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _pinterest.default.name(),\n        _pinterest.default.title()\n      );\n      const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n      await pinterestBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const pinId = _config.default.get(&quot;blocks.pinterest.pinId&quot;);\n\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a Pinterest block&quot;,\n    async () =&gt; {\n      const blockId = await blockEditor.insertBlock(\n        _pinterest.default.name(),\n        _pinterest.default.title()\n      );\n      const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n      await pinterestBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post with a Pinterest block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can assert that Pinterest block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "144002472d5238db",
      "name" : "1624471231893_beforeAll___Free_blocks.webm",
      "source" : "144002472d5238db.webm",
      "type" : "video/webm",
      "size" : 587535
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "93b2150da8ea1dcb",
      "name" : "1624471212641_beforeAll___ROOT_DESCRIBE_BLOCK.webm",
      "source" : "93b2150da8ea1dcb.webm",
      "type" : "video/webm",
      "size" : 291241
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pinterest block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _pinterest.default.name(),\n        _pinterest.default.title()\n      );\n      const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n      await pinterestBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "931783760d251c03",
      "name" : "1624471243112_Free_blocks___Pinterest_block.webm",
      "source" : "931783760d251c03.webm",
      "type" : "video/webm",
      "size" : 448701
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "705ccbb3cc7c886a",
      "status" : "passed",
      "time" : {
        "start" : 1624469817485,
        "stop" : 1624469825607,
        "duration" : 8122
      }
    }, {
      "uid" : "6a2a816c5b217f99",
      "status" : "passed",
      "time" : {
        "start" : 1624468476504,
        "stop" : 1624468481430,
        "duration" : 4926
      }
    }, {
      "uid" : "581b3d4e8f40f0d",
      "status" : "passed",
      "time" : {
        "start" : 1624424077592,
        "stop" : 1624424084473,
        "duration" : 6881
      }
    }, {
      "uid" : "243f523ebd373b07",
      "status" : "passed",
      "time" : {
        "start" : 1624422243490,
        "stop" : 1624422250088,
        "duration" : 6598
      }
    }, {
      "uid" : "2d8dbbb6af5cba51",
      "status" : "passed",
      "time" : {
        "start" : 1624417467267,
        "stop" : 1624417472865,
        "duration" : 5598
      }
    }, {
      "uid" : "e8758778ff648ee0",
      "status" : "passed",
      "time" : {
        "start" : 1624412600655,
        "stop" : 1624412606095,
        "duration" : 5440
      }
    }, {
      "uid" : "682510e740ef2a15",
      "status" : "passed",
      "time" : {
        "start" : 1624410671941,
        "stop" : 1624410677071,
        "duration" : 5130
      }
    }, {
      "uid" : "9148778d2dc58395",
      "status" : "passed",
      "time" : {
        "start" : 1624409671661,
        "stop" : 1624409678321,
        "duration" : 6660
      }
    }, {
      "uid" : "9b59a5d549145687",
      "status" : "passed",
      "time" : {
        "start" : 1624408277936,
        "stop" : 1624408285367,
        "duration" : 7431
      }
    }, {
      "uid" : "3ee29661a25fd9b1",
      "status" : "passed",
      "time" : {
        "start" : 1624403843200,
        "stop" : 1624403849664,
        "duration" : 6464
      }
    }, {
      "uid" : "5af9fd945ba3a1d3",
      "status" : "passed",
      "time" : {
        "start" : 1624399099459,
        "stop" : 1624399105804,
        "duration" : 6345
      }
    }, {
      "uid" : "1edb6a68941cd399",
      "status" : "passed",
      "time" : {
        "start" : 1624337362756,
        "stop" : 1624337372950,
        "duration" : 10194
      }
    }, {
      "uid" : "60fa39481c97708d",
      "status" : "passed",
      "time" : {
        "start" : 1624335393616,
        "stop" : 1624335399909,
        "duration" : 6293
      }
    }, {
      "uid" : "5c3d98849597a37a",
      "status" : "passed",
      "time" : {
        "start" : 1624251279121,
        "stop" : 1624251289541,
        "duration" : 10420
      }
    } ],
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "97c5e7dff59a247b.json",
  "parameterValues" : [ ]
}