{
  "uid" : "ab2c7a971d439f0",
  "name" : "Eventbrite block",
  "fullName" : "Eventbrite block",
  "historyId" : "0b4a15ebb314cfb213eb3e305bfce89d",
  "time" : {
    "start" : 1624515423176,
    "stop" : 1624515432688,
    "duration" : 9512
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const eventId = \"112691417062\";\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Eventbrite block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _eventbrite.default.name(),\n        _eventbrite.default.title()\n      );\n      const eventbriteBlock = new _eventbrite.default(blockId, page, eventId);\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post with a Eventbrite block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can assert that Eventbrite block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_eventbrite.default, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const eventId = &quot;112691417062&quot;;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a Eventbrite block&quot;,\n    async () =&gt; {\n      const blockId = await blockEditor.insertBlock(\n        _eventbrite.default.name(),\n        _eventbrite.default.title()\n      );\n      const eventbriteBlock = new _eventbrite.default(blockId, page, eventId);\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post with a Eventbrite block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can assert that Eventbrite block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_eventbrite.default, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "65bb936e1dd7659",
      "name" : "1624515407267_beforeAll___Free_blocks.webm",
      "source" : "65bb936e1dd7659.webm",
      "type" : "video/webm",
      "size" : 543557
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "3ba27a6ced5d6300",
      "name" : "1624515386365_beforeAll___ROOT_DESCRIBE_BLOCK.webm",
      "source" : "3ba27a6ced5d6300.webm",
      "type" : "video/webm",
      "size" : 296957
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  const eventId = \"112691417062\";\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Eventbrite block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _eventbrite.default.name(),\n        _eventbrite.default.title()\n      );\n      const eventbriteBlock = new _eventbrite.default(blockId, page, eventId);\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post with a Eventbrite block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can assert that Eventbrite block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_eventbrite.default, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "276bdd75caca08e5",
      "name" : "1624515432414_Free_blocks___Eventbrite_block.webm",
      "source" : "276bdd75caca08e5.webm",
      "type" : "video/webm",
      "size" : 339506
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "9d5956fe92a29c22",
      "status" : "passed",
      "time" : {
        "start" : 1624492871353,
        "stop" : 1624492881240,
        "duration" : 9887
      }
    }, {
      "uid" : "6b33edfffcdd29c8",
      "status" : "passed",
      "time" : {
        "start" : 1624489360754,
        "stop" : 1624489371619,
        "duration" : 10865
      }
    }, {
      "uid" : "d4a53cae6fe082fa",
      "status" : "passed",
      "time" : {
        "start" : 1624484694764,
        "stop" : 1624484705070,
        "duration" : 10306
      }
    }, {
      "uid" : "f343c85ee71041a",
      "status" : "broken",
      "statusDetails" : "TimeoutError",
      "time" : {
        "start" : 1624483277697,
        "stop" : 1624483277764,
        "duration" : 67
      }
    }, {
      "uid" : "792a9d5939688e1a",
      "status" : "passed",
      "time" : {
        "start" : 1624481904472,
        "stop" : 1624481911082,
        "duration" : 6610
      }
    }, {
      "uid" : "b49e119f8440459a",
      "status" : "passed",
      "time" : {
        "start" : 1624471245317,
        "stop" : 1624471254973,
        "duration" : 9656
      }
    }, {
      "uid" : "8dd8bbadcdf56874",
      "status" : "passed",
      "time" : {
        "start" : 1624469828317,
        "stop" : 1624469838331,
        "duration" : 10014
      }
    }, {
      "uid" : "be0fe5e1c23d96d4",
      "status" : "passed",
      "time" : {
        "start" : 1624468483473,
        "stop" : 1624468493950,
        "duration" : 10477
      }
    }, {
      "uid" : "53c3ec6def09a4ad",
      "status" : "passed",
      "time" : {
        "start" : 1624424086867,
        "stop" : 1624424095661,
        "duration" : 8794
      }
    }, {
      "uid" : "87f4b2fdc8f8bb60",
      "status" : "passed",
      "time" : {
        "start" : 1624422252474,
        "stop" : 1624422260948,
        "duration" : 8474
      }
    }, {
      "uid" : "2daa2993b79735b3",
      "status" : "passed",
      "time" : {
        "start" : 1624417474916,
        "stop" : 1624417482390,
        "duration" : 7474
      }
    }, {
      "uid" : "eac4833a92a041bc",
      "status" : "passed",
      "time" : {
        "start" : 1624412608127,
        "stop" : 1624412618365,
        "duration" : 10238
      }
    }, {
      "uid" : "6c6248e0a66cf81b",
      "status" : "passed",
      "time" : {
        "start" : 1624410679320,
        "stop" : 1624410689986,
        "duration" : 10666
      }
    }, {
      "uid" : "fa5b207006e2b0e9",
      "status" : "passed",
      "time" : {
        "start" : 1624409680735,
        "stop" : 1624409690162,
        "duration" : 9427
      }
    }, {
      "uid" : "f00661f604f31057",
      "status" : "passed",
      "time" : {
        "start" : 1624408287384,
        "stop" : 1624408296790,
        "duration" : 9406
      }
    }, {
      "uid" : "9cdb6cff7b94328a",
      "status" : "passed",
      "time" : {
        "start" : 1624403851883,
        "stop" : 1624403861150,
        "duration" : 9267
      }
    }, {
      "uid" : "339b7bf3c11efc79",
      "status" : "passed",
      "time" : {
        "start" : 1624399108157,
        "stop" : 1624399117702,
        "duration" : 9545
      }
    }, {
      "uid" : "875dfa0ae5be21b7",
      "status" : "passed",
      "time" : {
        "start" : 1624337375958,
        "stop" : 1624337387547,
        "duration" : 11589
      }
    }, {
      "uid" : "f410319208c8d5be",
      "status" : "passed",
      "time" : {
        "start" : 1624335402718,
        "stop" : 1624335411314,
        "duration" : 8596
      }
    }, {
      "uid" : "8900664d551f9cb2",
      "status" : "passed",
      "time" : {
        "start" : 1624251292980,
        "stop" : 1624251305953,
        "duration" : 12973
      }
    } ],
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "ab2c7a971d439f0.json",
  "parameterValues" : [ ]
}