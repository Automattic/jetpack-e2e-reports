{
  "uid" : "de4ffe3234a46bcf",
  "name" : "Pinterest block",
  "fullName" : "Pinterest block",
  "historyId" : "bf919c5c1253559f0d007402decf47af",
  "time" : {
    "start" : 1624586921191,
    "stop" : 1624586928558,
    "duration" : 7367
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pinterest block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _pinterest.default.name(),\n        _pinterest.default.title()\n      );\n      const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n      await pinterestBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const pinId = _config.default.get(&quot;blocks.pinterest.pinId&quot;);\n\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a Pinterest block&quot;,\n    async () =&gt; {\n      const blockId = await blockEditor.insertBlock(\n        _pinterest.default.name(),\n        _pinterest.default.title()\n      );\n      const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n      await pinterestBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post with a Pinterest block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can assert that Pinterest block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "6e028fa9675368c7",
      "name" : "1624586915448_beforeAll___Free_blocks.webm",
      "source" : "6e028fa9675368c7.webm",
      "type" : "video/webm",
      "size" : 532886
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "c1ab0dad5ee3fa9c",
      "name" : "1624586897945_beforeAll___ROOT_DESCRIBE_BLOCK.webm",
      "source" : "c1ab0dad5ee3fa9c.webm",
      "type" : "video/webm",
      "size" : 259740
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pinterest block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _pinterest.default.name(),\n        _pinterest.default.title()\n      );\n      const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n      await pinterestBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "9e6e2256ca5f5353",
      "name" : "1624586928444_Free_blocks___Pinterest_block.webm",
      "source" : "9e6e2256ca5f5353.webm",
      "type" : "video/webm",
      "size" : 495299
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "13bb5d95cd4edbeb",
      "status" : "passed",
      "time" : {
        "start" : 1624570189074,
        "stop" : 1624570193942,
        "duration" : 4868
      }
    }, {
      "uid" : "44d4326d5ab8e3b6",
      "status" : "passed",
      "time" : {
        "start" : 1624568904160,
        "stop" : 1624568912655,
        "duration" : 8495
      }
    }, {
      "uid" : "2faf452d5ecf486",
      "status" : "passed",
      "time" : {
        "start" : 1624566310218,
        "stop" : 1624566321889,
        "duration" : 11671
      }
    }, {
      "uid" : "e1c4d842ef7902d7",
      "status" : "passed",
      "time" : {
        "start" : 1624563930886,
        "stop" : 1624563938275,
        "duration" : 7389
      }
    }, {
      "uid" : "d049e8b6b06fd94c",
      "status" : "passed",
      "time" : {
        "start" : 1624561396239,
        "stop" : 1624561401702,
        "duration" : 5463
      }
    }, {
      "uid" : "adc30b2d1a37a355",
      "status" : "passed",
      "time" : {
        "start" : 1624525768005,
        "stop" : 1624525773047,
        "duration" : 5042
      }
    }, {
      "uid" : "5fa97b54ccbbf8c",
      "status" : "passed",
      "time" : {
        "start" : 1624515414343,
        "stop" : 1624515420619,
        "duration" : 6276
      }
    }, {
      "uid" : "a3c7ccb4d4bf60c3",
      "status" : "passed",
      "time" : {
        "start" : 1624492862098,
        "stop" : 1624492868794,
        "duration" : 6696
      }
    }, {
      "uid" : "2765a6c32a19d706",
      "status" : "passed",
      "time" : {
        "start" : 1624489352972,
        "stop" : 1624489358670,
        "duration" : 5698
      }
    }, {
      "uid" : "aeb477470eafe690",
      "status" : "passed",
      "time" : {
        "start" : 1624484686253,
        "stop" : 1624484692739,
        "duration" : 6486
      }
    }, {
      "uid" : "b86e628120bb984",
      "status" : "broken",
      "statusDetails" : "TimeoutError",
      "time" : {
        "start" : 1624483277574,
        "stop" : 1624483277647,
        "duration" : 73
      }
    }, {
      "uid" : "fe2dac14f3b9c7d0",
      "status" : "passed",
      "time" : {
        "start" : 1624481896309,
        "stop" : 1624481902562,
        "duration" : 6253
      }
    }, {
      "uid" : "acbbc881712822e3",
      "status" : "passed",
      "time" : {
        "start" : 1624471237766,
        "stop" : 1624471243215,
        "duration" : 5449
      }
    }, {
      "uid" : "f6e647c6f98db170",
      "status" : "passed",
      "time" : {
        "start" : 1624469817485,
        "stop" : 1624469825607,
        "duration" : 8122
      }
    }, {
      "uid" : "1ffa357a0d7a9568",
      "status" : "passed",
      "time" : {
        "start" : 1624468476504,
        "stop" : 1624468481430,
        "duration" : 4926
      }
    }, {
      "uid" : "9ebdad7961913126",
      "status" : "passed",
      "time" : {
        "start" : 1624424077592,
        "stop" : 1624424084473,
        "duration" : 6881
      }
    }, {
      "uid" : "2b4178486de64fae",
      "status" : "passed",
      "time" : {
        "start" : 1624422243490,
        "stop" : 1624422250088,
        "duration" : 6598
      }
    }, {
      "uid" : "6ed9c85b9c164c0",
      "status" : "passed",
      "time" : {
        "start" : 1624417467267,
        "stop" : 1624417472865,
        "duration" : 5598
      }
    }, {
      "uid" : "3d42129a65370641",
      "status" : "passed",
      "time" : {
        "start" : 1624412600655,
        "stop" : 1624412606095,
        "duration" : 5440
      }
    }, {
      "uid" : "7ae693e7c5365ca7",
      "status" : "passed",
      "time" : {
        "start" : 1624410671941,
        "stop" : 1624410677071,
        "duration" : 5130
      }
    }, {
      "uid" : "d3cd37140dc6ff08",
      "status" : "passed",
      "time" : {
        "start" : 1624409671661,
        "stop" : 1624409678321,
        "duration" : 6660
      }
    }, {
      "uid" : "48a525db60bfbc5",
      "status" : "passed",
      "time" : {
        "start" : 1624408277936,
        "stop" : 1624408285367,
        "duration" : 7431
      }
    }, {
      "uid" : "805425a5b64bc9f8",
      "status" : "passed",
      "time" : {
        "start" : 1624403843200,
        "stop" : 1624403849664,
        "duration" : 6464
      }
    }, {
      "uid" : "dc58c312f453e3ff",
      "status" : "passed",
      "time" : {
        "start" : 1624399099459,
        "stop" : 1624399105804,
        "duration" : 6345
      }
    }, {
      "uid" : "705c56186a1d69ef",
      "status" : "passed",
      "time" : {
        "start" : 1624337362756,
        "stop" : 1624337372950,
        "duration" : 10194
      }
    }, {
      "uid" : "ec9f9efa0e802a71",
      "status" : "passed",
      "time" : {
        "start" : 1624335393616,
        "stop" : 1624335399909,
        "duration" : 6293
      }
    }, {
      "uid" : "2a7b08b90fabac8a",
      "status" : "passed",
      "time" : {
        "start" : 1624251279121,
        "stop" : 1624251289541,
        "duration" : 10420
      }
    } ],
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "de4ffe3234a46bcf.json",
  "parameterValues" : [ ]
}