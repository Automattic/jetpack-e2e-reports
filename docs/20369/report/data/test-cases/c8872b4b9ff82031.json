{
  "uid" : "c8872b4b9ff82031",
  "name" : "Pay with PayPal",
  "fullName" : "Pay with PayPal",
  "historyId" : "2b956f1af1e91da7ea3b442b8c2cddca",
  "time" : {
    "start" : 1629152352277,
    "stop" : 1629152357553,
    "duration" : 5276
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _reporter.testStep)(\"Add a Pay with PayPal block\", async () => {\n    await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n    blockId = await blockEditor.insertBlock(\n      _simplePayments.default.name(),\n      _simplePayments.default.title()\n    );\n  });\n  await (0, _reporter.testStep)(\n    \"Fill details of Pay with PayPal block\",\n    async () => {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Publish a post and assert that Pay with PayPal block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _reporter.testStep)(&quot;Add a Pay with PayPal block&quot;, async () =&gt; {\n    await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n    blockId = await blockEditor.insertBlock(\n      _simplePayments.default.name(),\n      _simplePayments.default.title()\n    );\n  });\n  await (0, _reporter.testStep)(\n    &quot;Fill details of Pay with PayPal block&quot;,\n    async () =&gt; {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Publish a post and assert that Pay with PayPal block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1629152284448,
        "stop" : 1629152290900,
        "duration" : 6452
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1629152349894,
        "stop" : 1629152352274,
        "duration" : 2380
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1629152357728,
        "stop" : 1629152359966,
        "duration" : 2238
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _reporter.testStep)(\"Add a Pay with PayPal block\", async () => {\n    await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n    blockId = await blockEditor.insertBlock(\n      _simplePayments.default.name(),\n      _simplePayments.default.title()\n    );\n  });\n  await (0, _reporter.testStep)(\n    \"Fill details of Pay with PayPal block\",\n    async () => {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Publish a post and assert that Pay with PayPal block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Add a Pay with PayPal block",
      "time" : {
        "start" : 1629152352295,
        "stop" : 1629152353805,
        "duration" : 1510
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Pay with PayPal",
        "time" : {
          "start" : 1629152352379,
          "stop" : 1629152353208,
          "duration" : 829
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: simple-payments",
        "time" : {
          "start" : 1629152353210,
          "stop" : 1629152353686,
          "duration" : 476
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Fill details of Pay with PayPal block",
      "time" : {
        "start" : 1629152353808,
        "stop" : 1629152354511,
        "duration" : 703
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Publish a post and assert that Pay with PayPal block is rendered",
      "time" : {
        "start" : 1629152354513,
        "stop" : 1629152357504,
        "duration" : 2991
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Publish post",
        "time" : {
          "start" : 1629152354649,
          "stop" : 1629152355387,
          "duration" : 738
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "View post",
        "time" : {
          "start" : 1629152355389,
          "stop" : 1629152356116,
          "duration" : 727
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 12,
        "unknown" : 0,
        "total" : 12
      },
      "items" : [ {
        "uid" : "359b8f972902b709",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20369/report/#testresult/359b8f972902b709",
        "status" : "passed",
        "time" : {
          "start" : 1629150882031,
          "stop" : 1629150895221,
          "duration" : 13190
        }
      }, {
        "uid" : "62c032c399587e8c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20369/report/#testresult/62c032c399587e8c",
        "status" : "passed",
        "time" : {
          "start" : 1627602859825,
          "stop" : 1627602868620,
          "duration" : 8795
        }
      }, {
        "uid" : "b7ef48dbcba54e70",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20369/report/#testresult/b7ef48dbcba54e70",
        "status" : "passed",
        "time" : {
          "start" : 1627601472019,
          "stop" : 1627601480948,
          "duration" : 8929
        }
      }, {
        "uid" : "f56a1a690315c38e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20369/report/#testresult/f56a1a690315c38e",
        "status" : "passed",
        "time" : {
          "start" : 1627598899951,
          "stop" : 1627598910743,
          "duration" : 10792
        }
      }, {
        "uid" : "616d205b3d106117",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20369/report/#testresult/616d205b3d106117",
        "status" : "passed",
        "time" : {
          "start" : 1627516667312,
          "stop" : 1627516681135,
          "duration" : 13823
        }
      }, {
        "uid" : "17c758b9079610f0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20369/report/#testresult/17c758b9079610f0",
        "status" : "passed",
        "time" : {
          "start" : 1627515772771,
          "stop" : 1627515781967,
          "duration" : 9196
        }
      }, {
        "uid" : "2b72864130b9ec0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20369/report/#testresult/2b72864130b9ec0",
        "status" : "passed",
        "time" : {
          "start" : 1627514851375,
          "stop" : 1627514863485,
          "duration" : 12110
        }
      }, {
        "uid" : "16e9ad5c5f88af36",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20369/report/#testresult/16e9ad5c5f88af36",
        "status" : "passed",
        "time" : {
          "start" : 1627513999296,
          "stop" : 1627514011476,
          "duration" : 12180
        }
      }, {
        "uid" : "692d505875ab1b50",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20369/report/#testresult/692d505875ab1b50",
        "status" : "passed",
        "time" : {
          "start" : 1627509451271,
          "stop" : 1627509464307,
          "duration" : 13036
        }
      }, {
        "uid" : "c724dbe22376fc21",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20369/report/#testresult/c724dbe22376fc21",
        "status" : "passed",
        "time" : {
          "start" : 1627081267154,
          "stop" : 1627081282629,
          "duration" : 15475
        }
      }, {
        "uid" : "943e6b8cd6e33b36",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20369/report/#testresult/943e6b8cd6e33b36",
        "status" : "passed",
        "time" : {
          "start" : 1626393909451,
          "stop" : 1626393916188,
          "duration" : 6737
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "c8872b4b9ff82031.json",
  "parameterValues" : [ ]
}