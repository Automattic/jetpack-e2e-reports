{
  "uid" : "1ba9fd38c9be89c2",
  "name" : "Recommendations (Jetpack Assistant)",
  "fullName" : "Recommendations (Jetpack Assistant)",
  "historyId" : "6acbca09fe63fb0db4bf908821bc38aa",
  "time" : {
    "start" : 1625236147371,
    "stop" : 1625236162406,
    "duration" : 15035
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let recommendationsPage;\n  await (0, _testSetup.step)(\n    \"Navigate to the Recommendations module\",\n    async () => {\n      recommendationsPage = await _recommendations.default.visit(page);\n      const isPageVisible =\n        await recommendationsPage.areSiteTypeQuestionsVisible();\n\n      expect(isPageVisible).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"site-type\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Check Personal and Other checkboxes\",\n    async () => {\n      await recommendationsPage.checkPersonalSiteType();\n      await recommendationsPage.checkOtherSiteType();\n      expect(\n        await recommendationsPage.isPersonalSiteTypeChecked()\n      ).toBeTruthy();\n      expect(await recommendationsPage.isOtherSiteTypeChecked()).toBeTruthy();\n      expect(await recommendationsPage.isBusinessTypeUnchecked()).toBeFalsy();\n      expect(await recommendationsPage.isStoreTypeUnchecked()).toBeFalsy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Save answers and continue to the Monitor step\",\n    async () => {\n      await recommendationsPage.saveSiteTypeAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isMonitorStep =\n        await recommendationsPage.isEnableMonitoringButtonVisible();\n      expect(isMonitorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"monitor\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Enable Monitoring and continue to Related Post step\",\n    async () => {\n      await recommendationsPage.enableMonitoringAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isRelatedPostsStep =\n        await recommendationsPage.isEnableRelatedPostsButtonVisible();\n      expect(isRelatedPostsStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"related-posts\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Enable Related Posts and continue to Creative Mail step\",\n    async () => {\n      await recommendationsPage.enableRelatedPostsAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isCreativeMailStep =\n        await recommendationsPage.isInstallCreativeMailButtonVisible();\n      expect(isCreativeMailStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"creative-mail\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Skip Creative Mail and continue to Site Accelerator\",\n    async () => {\n      await recommendationsPage.skipCreativeMailAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSiteAcceleratorStep =\n        await recommendationsPage.isEnableSiteAcceleratorButtonVisible();\n      expect(isSiteAcceleratorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"site-accelerator\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Skip Site Accelerator and continue to Summary\",\n    async () => {\n      await recommendationsPage.skipSiteAcceleratorAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSummaryContent =\n        await recommendationsPage.isSummaryContentVisible();\n      const isSummarySidebar =\n        await recommendationsPage.isSummarySidebarVisible();\n      expect(isSummaryContent && isSummarySidebar).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"summary\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Verify Monitoring and Related Posts are enabled\",\n    async () => {\n      const isMonitoringFeatureEnabled =\n        await recommendationsPage.isMonitoringFeatureEnabled();\n      const isRelatedPostsFeatureEnabled =\n        await recommendationsPage.isRelatedPostsFeatureEnabled();\n      expect(\n        isMonitoringFeatureEnabled && isRelatedPostsFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Verify Creative Mail and Site Accelerator are disabled\",\n    async () => {\n      const isCreativeMailFeatureEnabled =\n        await recommendationsPage.isCreativeMailFeatureEnabled();\n      const isSiteAcceleratorFeatureEnabled =\n        await recommendationsPage.isSiteAcceleratorFeatureEnabled();\n      expect(\n        isCreativeMailFeatureEnabled && isSiteAcceleratorFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let recommendationsPage;\n  await (0, _testSetup.step)(\n    &quot;Navigate to the Recommendations module&quot;,\n    async () =&gt; {\n      recommendationsPage = await _recommendations.default.visit(page);\n      const isPageVisible =\n        await recommendationsPage.areSiteTypeQuestionsVisible();\n\n      expect(isPageVisible).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;site-type&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Check Personal and Other checkboxes&quot;,\n    async () =&gt; {\n      await recommendationsPage.checkPersonalSiteType();\n      await recommendationsPage.checkOtherSiteType();\n      expect(\n        await recommendationsPage.isPersonalSiteTypeChecked()\n      ).toBeTruthy();\n      expect(await recommendationsPage.isOtherSiteTypeChecked()).toBeTruthy();\n      expect(await recommendationsPage.isBusinessTypeUnchecked()).toBeFalsy();\n      expect(await recommendationsPage.isStoreTypeUnchecked()).toBeFalsy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Save answers and continue to the Monitor step&quot;,\n    async () =&gt; {\n      await recommendationsPage.saveSiteTypeAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isMonitorStep =\n        await recommendationsPage.isEnableMonitoringButtonVisible();\n      expect(isMonitorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;monitor&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Enable Monitoring and continue to Related Post step&quot;,\n    async () =&gt; {\n      await recommendationsPage.enableMonitoringAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isRelatedPostsStep =\n        await recommendationsPage.isEnableRelatedPostsButtonVisible();\n      expect(isRelatedPostsStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;related-posts&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Enable Related Posts and continue to Creative Mail step&quot;,\n    async () =&gt; {\n      await recommendationsPage.enableRelatedPostsAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isCreativeMailStep =\n        await recommendationsPage.isInstallCreativeMailButtonVisible();\n      expect(isCreativeMailStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;creative-mail&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Skip Creative Mail and continue to Site Accelerator&quot;,\n    async () =&gt; {\n      await recommendationsPage.skipCreativeMailAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSiteAcceleratorStep =\n        await recommendationsPage.isEnableSiteAcceleratorButtonVisible();\n      expect(isSiteAcceleratorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;site-accelerator&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Skip Site Accelerator and continue to Summary&quot;,\n    async () =&gt; {\n      await recommendationsPage.skipSiteAcceleratorAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSummaryContent =\n        await recommendationsPage.isSummaryContentVisible();\n      const isSummarySidebar =\n        await recommendationsPage.isSummarySidebarVisible();\n      expect(isSummaryContent &amp;&amp; isSummarySidebar).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;summary&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Verify Monitoring and Related Posts are enabled&quot;,\n    async () =&gt; {\n      const isMonitoringFeatureEnabled =\n        await recommendationsPage.isMonitoringFeatureEnabled();\n      const isRelatedPostsFeatureEnabled =\n        await recommendationsPage.isRelatedPostsFeatureEnabled();\n      expect(\n        isMonitoringFeatureEnabled &amp;&amp; isRelatedPostsFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Verify Creative Mail and Site Accelerator are disabled&quot;,\n    async () =&gt; {\n      const isCreativeMailFeatureEnabled =\n        await recommendationsPage.isCreativeMailFeatureEnabled();\n      const isSiteAcceleratorFeatureEnabled =\n        await recommendationsPage.isSiteAcceleratorFeatureEnabled();\n      expect(\n        isCreativeMailFeatureEnabled &amp;&amp; isSiteAcceleratorFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "recommendations.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 15,
        "unknown" : 0,
        "total" : 16
      },
      "items" : [ {
        "uid" : "23e06116f43c0857",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20231/report/#testresult/23e06116f43c0857",
        "status" : "passed",
        "time" : {
          "start" : 1625233524912,
          "stop" : 1625233543131,
          "duration" : 18219
        }
      }, {
        "uid" : "d387c13efa4b10da",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20231/report/#testresult/d387c13efa4b10da",
        "status" : "passed",
        "time" : {
          "start" : 1625230271959,
          "stop" : 1625230284092,
          "duration" : 12133
        }
      }, {
        "uid" : "e9e100d43e981c78",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20231/report/#testresult/e9e100d43e981c78",
        "status" : "passed",
        "time" : {
          "start" : 1625224162339,
          "stop" : 1625224173969,
          "duration" : 11630
        }
      }, {
        "uid" : "e237aee93a8f39d6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20231/report/#testresult/e237aee93a8f39d6",
        "status" : "passed",
        "time" : {
          "start" : 1625224162339,
          "stop" : 1625224173969,
          "duration" : 11630
        }
      }, {
        "uid" : "f211ef557200b558",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20231/report/#testresult/f211ef557200b558",
        "status" : "passed",
        "time" : {
          "start" : 1625222635165,
          "stop" : 1625222652744,
          "duration" : 17579
        }
      }, {
        "uid" : "b62fab8df9f96316",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20231/report/#testresult/b62fab8df9f96316",
        "status" : "passed",
        "time" : {
          "start" : 1625218969139,
          "stop" : 1625218985280,
          "duration" : 16141
        }
      }, {
        "uid" : "c5ded4e7846727d7",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20231/report/#testresult/c5ded4e7846727d7",
        "status" : "passed",
        "time" : {
          "start" : 1625164197437,
          "stop" : 1625164209169,
          "duration" : 11732
        }
      }, {
        "uid" : "4a6390ec5aac77d5",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20231/report/#testresult/4a6390ec5aac77d5",
        "status" : "passed",
        "time" : {
          "start" : 1625163337844,
          "stop" : 1625163350539,
          "duration" : 12695
        }
      }, {
        "uid" : "8f1f1d7d5aa7b4da",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20231/report/#testresult/8f1f1d7d5aa7b4da",
        "status" : "passed",
        "time" : {
          "start" : 1625161413048,
          "stop" : 1625161429255,
          "duration" : 16207
        }
      }, {
        "uid" : "8c04ee4731a3e7f6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20231/report/#testresult/8c04ee4731a3e7f6",
        "status" : "passed",
        "time" : {
          "start" : 1625157645873,
          "stop" : 1625157662488,
          "duration" : 16615
        }
      }, {
        "uid" : "4759435bf66f4d9e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20231/report/#testresult/4759435bf66f4d9e",
        "status" : "passed",
        "time" : {
          "start" : 1625156674327,
          "stop" : 1625156690232,
          "duration" : 15905
        }
      }, {
        "uid" : "d4cf42454da9ec75",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20231/report/#testresult/d4cf42454da9ec75",
        "status" : "passed",
        "time" : {
          "start" : 1625154990442,
          "stop" : 1625155003167,
          "duration" : 12725
        }
      }, {
        "uid" : "d05bf9d6f63ee97f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20231/report/#testresult/d05bf9d6f63ee97f",
        "status" : "passed",
        "time" : {
          "start" : 1625154087733,
          "stop" : 1625154102007,
          "duration" : 14274
        }
      }, {
        "uid" : "4b0080a3479f6c44",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20231/#testresult/4b0080a3479f6c44",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1625153345216,
          "stop" : 1625153382840,
          "duration" : 37624
        }
      }, {
        "uid" : "edf3f7f96a8dd7dd",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20231/#testresult/edf3f7f96a8dd7dd",
        "status" : "passed",
        "time" : {
          "start" : 1625151600492,
          "stop" : 1625151615003,
          "duration" : 14511
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "1ba9fd38c9be89c2.json",
  "parameterValues" : [ ]
}