{
  "uid" : "ac9b3177c5c84d9e",
  "name" : "WordAds block",
  "fullName" : "WordAds block",
  "historyId" : "18efccdb8f3fb33e445e77a8ef2cffa3",
  "time" : {
    "start" : 1625230355077,
    "stop" : 1625230359209,
    "duration" : 4132
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a WordAds block\",\n    async () => {\n      await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n      blockId = await blockEditor.insertBlock(\n        _wordAds.default.name(),\n        _wordAds.default.title()\n      );\n      await blockEditor.selectPostTitle();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can switch to Wide Skyscraper ad format\",\n    async () => {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that WordAds block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a WordAds block&quot;,\n    async () =&gt; {\n      await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n      blockId = await blockEditor.insertBlock(\n        _wordAds.default.name(),\n        _wordAds.default.title()\n      );\n      await blockEditor.selectPostTitle();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can switch to Wide Skyscraper ad format&quot;,\n    async () =&gt; {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that WordAds block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 13,
        "unknown" : 0,
        "total" : 14
      },
      "items" : [ {
        "uid" : "d699580c78c91561",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20231/report/#testresult/d699580c78c91561",
        "status" : "passed",
        "time" : {
          "start" : 1625224245286,
          "stop" : 1625224249099,
          "duration" : 3813
        }
      }, {
        "uid" : "d885c548bddfaac4",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20231/report/#testresult/d885c548bddfaac4",
        "status" : "passed",
        "time" : {
          "start" : 1625224245286,
          "stop" : 1625224249099,
          "duration" : 3813
        }
      }, {
        "uid" : "e9b142ea6310a501",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20231/report/#testresult/e9b142ea6310a501",
        "status" : "passed",
        "time" : {
          "start" : 1625222757753,
          "stop" : 1625222765028,
          "duration" : 7275
        }
      }, {
        "uid" : "a098f0b8e100ab18",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20231/report/#testresult/a098f0b8e100ab18",
        "status" : "passed",
        "time" : {
          "start" : 1625219067924,
          "stop" : 1625219073305,
          "duration" : 5381
        }
      }, {
        "uid" : "22896765dbb58d48",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20231/report/#testresult/22896765dbb58d48",
        "status" : "passed",
        "time" : {
          "start" : 1625164275389,
          "stop" : 1625164279380,
          "duration" : 3991
        }
      }, {
        "uid" : "8633aee6f3efe54a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20231/report/#testresult/8633aee6f3efe54a",
        "status" : "passed",
        "time" : {
          "start" : 1625163423320,
          "stop" : 1625163427528,
          "duration" : 4208
        }
      }, {
        "uid" : "e218c5d5c22d21ef",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20231/report/#testresult/e218c5d5c22d21ef",
        "status" : "passed",
        "time" : {
          "start" : 1625161522521,
          "stop" : 1625161528261,
          "duration" : 5740
        }
      }, {
        "uid" : "9141d9d6c2a34673",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20231/report/#testresult/9141d9d6c2a34673",
        "status" : "passed",
        "time" : {
          "start" : 1625157751341,
          "stop" : 1625157756538,
          "duration" : 5197
        }
      }, {
        "uid" : "4f100983b5d55993",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20231/report/#testresult/4f100983b5d55993",
        "status" : "passed",
        "time" : {
          "start" : 1625156766236,
          "stop" : 1625156776862,
          "duration" : 10626
        }
      }, {
        "uid" : "744d9f0c3141ac0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20231/report/#testresult/744d9f0c3141ac0",
        "status" : "passed",
        "time" : {
          "start" : 1625155071417,
          "stop" : 1625155077271,
          "duration" : 5854
        }
      }, {
        "uid" : "b47778a418480a27",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20231/report/#testresult/b47778a418480a27",
        "status" : "passed",
        "time" : {
          "start" : 1625154175441,
          "stop" : 1625154179543,
          "duration" : 4102
        }
      }, {
        "uid" : "a8b4f5c4e9e6d42f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20231/#testresult/a8b4f5c4e9e6d42f",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1625153434159,
          "stop" : 1625153434221,
          "duration" : 62
        }
      }, {
        "uid" : "44a1668dcedb20ae",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20231/#testresult/44a1668dcedb20ae",
        "status" : "passed",
        "time" : {
          "start" : 1625151682422,
          "stop" : 1625151686874,
          "duration" : 4452
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "ac9b3177c5c84d9e.json",
  "parameterValues" : [ ]
}