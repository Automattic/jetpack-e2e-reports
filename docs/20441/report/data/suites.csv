"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Fri Jul 23 14:58:50 UTC 2021","Fri Jul 23 14:58:51 UTC 2021","929","specs","","pre-connection.test.js","","","Can find connect button on dashboard page","
### Test
```typescript
async () => {
  await (await _sidebar.default.init(page)).selectDashboard();
  const dashboard = await _dashboard.default.init(page);

  expect(await dashboard.isConnectBannerVisible()).toBeTruthy();
};

```
"
"passed","Fri Jul 23 14:58:33 UTC 2021","Fri Jul 23 14:58:58 UTC 2021","24960","specs","","connection.test.js","","","User-less","
### Test
```typescript
async () => {
  await (0, _testSetup.step)(""Can clean up WPCOM cookie"", async () => {
    await (
      await _sidebar.default.init(page)
    ).removeCookieByName(""wordpress_logged_in"");
  });
  await (0, _testSetup.step)(""Can start Site Level connection"", async () => {
    await (0, _jetpackConnect.doSiteLevelConnection)();
  });
  await (0, _testSetup.step)(""Can assert that site is connected"", async () => {
    const jetpackPage = await _jetpack.default.init(page);

    expect(await jetpackPage.isConnected()).toBeTruthy();
  });
};

```
"
"passed","Fri Jul 23 14:57:54 UTC 2021","Fri Jul 23 14:58:25 UTC 2021","30977","specs","","connection.test.js","","","In-place","
### Test
```typescript
async () => {
  await (0, _testSetup.step)(""Can start in-place connection"", async () => {
    await (0, _jetpackConnect.doInPlaceConnection)();
  });
  await (0, _testSetup.step)(""Can assert that site is connected"", async () => {
    const jetpackPage = await _jetpack.default.init(page);

    expect(await jetpackPage.isConnected()).toBeTruthy();
  });
};

```
"
"passed","Fri Jul 23 14:58:45 UTC 2021","Fri Jul 23 14:58:49 UTC 2021","4010","specs","","pre-connection.test.js","","","Can find connect button on plugins page","
### Test
```typescript
async () => {
  await (await _sidebar.default.init(page)).selectInstalledPlugins();
  const pluginsPage = await _plugins.default.init(page);
  await (0, _utilsHelper.execWpCommand)(
    ""wp transient set activated_jetpack true 120""
  );
  await pluginsPage.reload();

  expect(await pluginsPage.isFullScreenPopupShown()).toBeTruthy();
};

```
"
"passed","Fri Jul 23 14:59:28 UTC 2021","Fri Jul 23 14:59:58 UTC 2021","29167","specs","","connection.test.js","","","Classic","
### Test
```typescript
async () => {
  await (0, _testSetup.step)(""Can start classic connection"", async () => {
    await (0, _jetpackConnect.doClassicConnection)(true);
  });
  await (0, _testSetup.step)(""Can assert that site is connected"", async () => {
    const jetpackPage = await _jetpack.default.init(page);

    expect(await jetpackPage.isConnected()).toBeTruthy();
  });
};

```
"
"passed","Fri Jul 23 14:58:52 UTC 2021","Fri Jul 23 14:58:54 UTC 2021","1649","specs","","pre-connection.test.js","","","Can find connect button on Jetpack page","
### Test
```typescript
async () => {
  await (await _sidebar.default.init(page)).selectJetpack();
  const jetpackPage = await _jetpack.default.init(page);

  expect(await jetpackPage.isConnectBannerVisible()).toBeTruthy();
};

```
"
"passed","Fri Jul 23 14:57:44 UTC 2021","Fri Jul 23 14:58:20 UTC 2021","35862","specs","","plugin-updater.test.js","","","Plugin updater","
### Test
```typescript
async () => {
  await (0, _testSetup.step)(
    ""Can login and navigate to Plugins page"",
    async () => {
      await (await _sidebar.default.init(page)).selectInstalledPlugins();
      await _plugins.default.init(page);
    }
  );
  await (0, _testSetup.step)(""Can update Jetpack"", async () => {
    const pluginsPage = await _plugins.default.init(page);
    const versionBefore = await pluginsPage.getJetpackVersion();
    await pluginsPage.updateJetpack();
    const versionAfter = await pluginsPage.getJetpackVersion();

    expect(versionBefore).not.toBe(versionAfter);
  });
  await (0, _testSetup.step)(""Can connect Jetpack"", async () => {
    await (await _sidebar.default.init(page)).selectJetpack();
    await (0, _jetpackConnect.doInPlaceConnection)();
    const jetpackPage = await _jetpack.default.init(page);
    expect(await jetpackPage.isConnected()).toBeTruthy();
  });
};

```
"
