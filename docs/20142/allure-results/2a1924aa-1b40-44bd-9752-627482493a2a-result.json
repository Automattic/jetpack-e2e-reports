{"uuid":"2a1924aa-1b40-44bd-9752-627482493a2a","historyId":"e4b5ee96e0f801846ffdc3a858c32dad","status":"failed","statusDetails":{"message":"expect(received).toBeTruthy()\n","trace":"Received: false"},"stage":"finished","steps":[],"attachments":[{"name":"Search - Can display different result formats","type":"image/png","source":"deaf1b1e-4326-4325-aeb9-fa0b744022b1-attachment.png"},{"name":"1624391606572_Search___Can_display_different_result_formats.webm","type":"video/webm","source":"e6488716-254e-4c55-8b3c-ccc856e2c72b-attachment.webm"}],"parameters":[],"labels":[{"name":"thread","value":"1"},{"name":"parentSuite","value":"specs"},{"name":"package","value":"specs"},{"name":"subSuite","value":"search.test.js"}],"links":[],"start":1624391604173,"name":"Can display different result formats","fullName":"Can display different result formats","description":"\n### Test\n```typescript\nasync () => {\n  await (0, _testSetup.step)(\"Can use minimal format\", async () => {\n    await homepage.goto(`${siteUrl}?result_format=minimal`);\n    await homepage.waitForPage();\n    await homepage.waitForNetworkIdle();\n    await homepage.focusSearchInput();\n    await homepage.enterQuery(\"random-string-1\");\n    await homepage.waitForSearchResponse();\n\n    expect(await homepage.isOverlayVisible()).toBeTruthy();\n    expect(await homepage.isResultFormat(\"is-format-minimal\")).toBeTruthy();\n  });\n  await (0, _testSetup.step)(\"Can use product format\", async () => {\n    await homepage.goto(`${siteUrl}?result_format=product`);\n    await homepage.waitForPage();\n    await homepage.waitForNetworkIdle();\n    await homepage.focusSearchInput();\n    await homepage.enterQuery(\"random-string-2\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isOverlayVisible()).toBeTruthy();\n    expect(await homepage.isResultFormat(\"is-format-product\")).toBeTruthy();\n    expect(await homepage.isProductImageVisible()).toBeTruthy();\n    expect(await homepage.isProductPriceVisible()).toBeTruthy();\n  });\n  await (0, _testSetup.step)(\"Can use expanded format\", async () => {\n    await homepage.goto(`${siteUrl}?result_format=expanded&s=random-string-3`);\n    await homepage.waitForPage();\n    await homepage.waitForNetworkIdle();\n    expect(await homepage.isOverlayVisible()).toBeTruthy();\n    expect(await homepage.isResultFormat(\"is-format-expanded\")).toBeTruthy();\n    expect(await homepage.isExpandedImageVisible()).toBeTruthy();\n  });\n};\n\n```\n","stop":1624391607270}