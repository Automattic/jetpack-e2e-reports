{
  "uid" : "154074cfb19af07d",
  "name" : "Pay with PayPal",
  "fullName" : "Pay with PayPal",
  "historyId" : "2b956f1af1e91da7ea3b442b8c2cddca",
  "time" : {
    "start" : 1637294082604,
    "stop" : 1637294082681,
    "duration" : 77
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _reporters.testStep)(\"Add a Pay with PayPal block\", async () => {\n    blockId = await blockEditor.insertBlock(\n      _wpAdmin.SimplePaymentBlock.name(),\n      _wpAdmin.SimplePaymentBlock.title()\n    );\n  });\n  await (0, _reporters.testStep)(\n    \"Fill details of Pay with PayPal block\",\n    async () => {\n      const spBlock = new _wpAdmin.SimplePaymentBlock(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _reporters.testStep)(\n    \"Publish a post and assert that Pay with PayPal block is rendered\",\n    async () => {\n      await blockEditor.setTitle(\"Pay with PayPal block\");\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _pages.PostFrontendPage.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wpAdmin.SimplePaymentBlock)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _reporters.testStep)(&quot;Add a Pay with PayPal block&quot;, async () =&gt; {\n    blockId = await blockEditor.insertBlock(\n      _wpAdmin.SimplePaymentBlock.name(),\n      _wpAdmin.SimplePaymentBlock.title()\n    );\n  });\n  await (0, _reporters.testStep)(\n    &quot;Fill details of Pay with PayPal block&quot;,\n    async () =&gt; {\n      const spBlock = new _wpAdmin.SimplePaymentBlock(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _reporters.testStep)(\n    &quot;Publish a post and assert that Pay with PayPal block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.setTitle(&quot;Pay with PayPal block&quot;);\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _pages.PostFrontendPage.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wpAdmin.SimplePaymentBlock)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "Error",
  "statusTrace" : "Jetpack Start provision is failed. Response: {\"error\":-10520,\"message\":\"Jetpack: [invalid_signature] The required &quot;url&quot; parameter is malformed.\"}\n",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : true,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "broken",
    "statusMessage" : "Error",
    "statusTrace" : "Jetpack Start provision is failed. Response: {\"error\":-10520,\"message\":\"Jetpack: [invalid_signature] The required &quot;url&quot; parameter is malformed.\"}\n",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "108d1c06dcdb1fb5",
      "name" : "beforeAll - Paid blocks",
      "source" : "108d1c06dcdb1fb5.png",
      "type" : "image/png",
      "size" : 36021
    }, {
      "uid" : "e7ca19572553fc56",
      "name" : "1637294081923_beforeAll___Paid_blocks.webm",
      "source" : "e7ca19572553fc56.webm",
      "type" : "video/webm",
      "size" : 214148
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _reporters.testStep)(\"Add a Pay with PayPal block\", async () => {\n    blockId = await blockEditor.insertBlock(\n      _wpAdmin.SimplePaymentBlock.name(),\n      _wpAdmin.SimplePaymentBlock.title()\n    );\n  });\n  await (0, _reporters.testStep)(\n    \"Fill details of Pay with PayPal block\",\n    async () => {\n      const spBlock = new _wpAdmin.SimplePaymentBlock(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _reporters.testStep)(\n    \"Publish a post and assert that Pay with PayPal block is rendered\",\n    async () => {\n      await blockEditor.setTitle(\"Pay with PayPal block\");\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _pages.PostFrontendPage.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wpAdmin.SimplePaymentBlock)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "broken",
    "statusMessage" : "Error",
    "statusTrace" : "Jetpack Start provision is failed. Response: {\"error\":-10520,\"message\":\"Jetpack: [invalid_signature] The required &quot;url&quot; parameter is malformed.\"}\n",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f9e3c1d4ab36b178",
      "name" : "1637294082644_Paid_blocks___Pay_with_PayPal.webm",
      "source" : "f9e3c1d4ab36b178.webm",
      "type" : "video/webm",
      "size" : 1409
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 5,
        "unknown" : 0,
        "total" : 6
      },
      "items" : [ {
        "uid" : "63b02d9ddaff8666",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20029/report/#testresult/63b02d9ddaff8666",
        "status" : "passed",
        "time" : {
          "start" : 1637159966785,
          "stop" : 1637159972374,
          "duration" : 5589
        }
      }, {
        "uid" : "3238a4e53c72f3e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20029/report/#testresult/3238a4e53c72f3e",
        "status" : "passed",
        "time" : {
          "start" : 1636781985704,
          "stop" : 1636781990588,
          "duration" : 4884
        }
      }, {
        "uid" : "6590c1fe22182901",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20029/report/#testresult/6590c1fe22182901",
        "status" : "passed",
        "time" : {
          "start" : 1636650535057,
          "stop" : 1636650541201,
          "duration" : 6144
        }
      }, {
        "uid" : "e430f5446c917cee",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20029/report/#testresult/e430f5446c917cee",
        "status" : "passed",
        "time" : {
          "start" : 1636648377280,
          "stop" : 1636648383865,
          "duration" : 6585
        }
      }, {
        "uid" : "ef8f4f1ae8d820fa",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20029/report/#testresult/ef8f4f1ae8d820fa",
        "status" : "passed",
        "time" : {
          "start" : 1636608609114,
          "stop" : 1636608616025,
          "duration" : 6911
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "154074cfb19af07d.json",
  "parameterValues" : [ ]
}