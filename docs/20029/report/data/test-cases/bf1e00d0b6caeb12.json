{
  "uid" : "bf1e00d0b6caeb12",
  "name" : "Eventbrite block",
  "fullName" : "Eventbrite block",
  "historyId" : "0b4a15ebb314cfb213eb3e305bfce89d",
  "time" : {
    "start" : 1637294091456,
    "stop" : 1637294091537,
    "duration" : 81
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const eventId = \"112691417062\";\n  await (0, _reporters.testStep)(\n    \"Can visit the block editor and add a Eventbrite block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _wpAdmin.EventbriteBlock.name(),\n        _wpAdmin.EventbriteBlock.title()\n      );\n      const eventbriteBlock = new _wpAdmin.EventbriteBlock(\n        blockId,\n        page,\n        eventId\n      );\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _reporters.testStep)(\n    \"Can publish a post with a Eventbrite block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporters.testStep)(\n    \"Can assert that Eventbrite block is rendered\",\n    async () => {\n      const frontend = await _pages.PostFrontendPage.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wpAdmin.EventbriteBlock, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const eventId = &quot;112691417062&quot;;\n  await (0, _reporters.testStep)(\n    &quot;Can visit the block editor and add a Eventbrite block&quot;,\n    async () =&gt; {\n      const blockId = await blockEditor.insertBlock(\n        _wpAdmin.EventbriteBlock.name(),\n        _wpAdmin.EventbriteBlock.title()\n      );\n      const eventbriteBlock = new _wpAdmin.EventbriteBlock(\n        blockId,\n        page,\n        eventId\n      );\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _reporters.testStep)(\n    &quot;Can publish a post with a Eventbrite block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporters.testStep)(\n    &quot;Can assert that Eventbrite block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _pages.PostFrontendPage.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wpAdmin.EventbriteBlock, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "Error",
  "statusTrace" : "Jetpack Start provision is failed. Response: {\"error\":-10520,\"message\":\"Jetpack: [invalid_signature] The required &quot;url&quot; parameter is malformed.\"}\n",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : true,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "broken",
    "statusMessage" : "Error",
    "statusTrace" : "Jetpack Start provision is failed. Response: {\"error\":-10520,\"message\":\"Jetpack: [invalid_signature] The required &quot;url&quot; parameter is malformed.\"}\n",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d06a5614977858bf",
      "name" : "beforeAll - Free blocks",
      "source" : "d06a5614977858bf.png",
      "type" : "image/png",
      "size" : 36021
    }, {
      "uid" : "899985e8b7ac45d0",
      "name" : "1637294090741_beforeAll___Free_blocks.webm",
      "source" : "899985e8b7ac45d0.webm",
      "type" : "video/webm",
      "size" : 242789
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  const eventId = \"112691417062\";\n  await (0, _reporters.testStep)(\n    \"Can visit the block editor and add a Eventbrite block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _wpAdmin.EventbriteBlock.name(),\n        _wpAdmin.EventbriteBlock.title()\n      );\n      const eventbriteBlock = new _wpAdmin.EventbriteBlock(\n        blockId,\n        page,\n        eventId\n      );\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _reporters.testStep)(\n    \"Can publish a post with a Eventbrite block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporters.testStep)(\n    \"Can assert that Eventbrite block is rendered\",\n    async () => {\n      const frontend = await _pages.PostFrontendPage.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wpAdmin.EventbriteBlock, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "broken",
    "statusMessage" : "Error",
    "statusTrace" : "Jetpack Start provision is failed. Response: {\"error\":-10520,\"message\":\"Jetpack: [invalid_signature] The required &quot;url&quot; parameter is malformed.\"}\n",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "ae385b52ca86333f",
      "name" : "1637294091499_Free_blocks___Eventbrite_block.webm",
      "source" : "ae385b52ca86333f.webm",
      "type" : "video/webm",
      "size" : 1458
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 3,
        "unknown" : 0,
        "total" : 6
      },
      "items" : [ {
        "uid" : "8324ba17e146ac7a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20029/report/#testresult/8324ba17e146ac7a",
        "status" : "passed",
        "time" : {
          "start" : 1637160031655,
          "stop" : 1637160042929,
          "duration" : 11274
        }
      }, {
        "uid" : "eefe4b660f47569f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20029/report/#testresult/eefe4b660f47569f",
        "status" : "passed",
        "time" : {
          "start" : 1636782054473,
          "stop" : 1636782064589,
          "duration" : 10116
        }
      }, {
        "uid" : "9aa1b8d829625bc4",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20029/report/#testresult/9aa1b8d829625bc4",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1636650598451,
          "stop" : 1636650622143,
          "duration" : 23692
        }
      }, {
        "uid" : "ba29c4457a9c5316",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20029/report/#testresult/ba29c4457a9c5316",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1636648444374,
          "stop" : 1636648468444,
          "duration" : 24070
        }
      }, {
        "uid" : "eb17c843314be2b5",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20029/report/#testresult/eb17c843314be2b5",
        "status" : "passed",
        "time" : {
          "start" : 1636608693042,
          "stop" : 1636608704288,
          "duration" : 11246
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "bf1e00d0b6caeb12.json",
  "parameterValues" : [ ]
}