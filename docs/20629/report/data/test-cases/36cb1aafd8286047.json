{
  "uid" : "36cb1aafd8286047",
  "name" : "Pay with PayPal",
  "fullName" : "Pay with PayPal",
  "historyId" : "2b956f1af1e91da7ea3b442b8c2cddca",
  "time" : {
    "start" : 1629128932192,
    "stop" : 1629128935944,
    "duration" : 3752
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _reporter.testStep)(\"Add a Pay with PayPal block\", async () => {\n    await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n    blockId = await blockEditor.insertBlock(\n      _simplePayments.default.name(),\n      _simplePayments.default.title()\n    );\n  });\n  await (0, _reporter.testStep)(\n    \"Fill details of Pay with PayPal block\",\n    async () => {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Publish a post and assert that Pay with PayPal block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _reporter.testStep)(&quot;Add a Pay with PayPal block&quot;, async () =&gt; {\n    await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n    blockId = await blockEditor.insertBlock(\n      _simplePayments.default.name(),\n      _simplePayments.default.title()\n    );\n  });\n  await (0, _reporter.testStep)(\n    &quot;Fill details of Pay with PayPal block&quot;,\n    async () =&gt; {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Publish a post and assert that Pay with PayPal block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1629128913393,
        "stop" : 1629128919149,
        "duration" : 5756
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1629128930361,
        "stop" : 1629128932190,
        "duration" : 1829
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1629128936098,
        "stop" : 1629128937994,
        "duration" : 1896
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _reporter.testStep)(\"Add a Pay with PayPal block\", async () => {\n    await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n    blockId = await blockEditor.insertBlock(\n      _simplePayments.default.name(),\n      _simplePayments.default.title()\n    );\n  });\n  await (0, _reporter.testStep)(\n    \"Fill details of Pay with PayPal block\",\n    async () => {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Publish a post and assert that Pay with PayPal block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Add a Pay with PayPal block",
      "time" : {
        "start" : 1629128932213,
        "stop" : 1629128933617,
        "duration" : 1404
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Pay with PayPal",
        "time" : {
          "start" : 1629128932292,
          "stop" : 1629128933128,
          "duration" : 836
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: simple-payments",
        "time" : {
          "start" : 1629128933130,
          "stop" : 1629128933508,
          "duration" : 378
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Fill details of Pay with PayPal block",
      "time" : {
        "start" : 1629128933618,
        "stop" : 1629128934009,
        "duration" : 391
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Publish a post and assert that Pay with PayPal block is rendered",
      "time" : {
        "start" : 1629128934011,
        "stop" : 1629128935925,
        "duration" : 1914
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Publish post",
        "time" : {
          "start" : 1629128934123,
          "stop" : 1629128934624,
          "duration" : 501
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "View post",
        "time" : {
          "start" : 1629128934625,
          "stop" : 1629128934879,
          "duration" : 254
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 11,
        "unknown" : 0,
        "total" : 11
      },
      "items" : [ {
        "uid" : "13e29fd4ed66780",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20629/report/#testresult/13e29fd4ed66780",
        "status" : "passed",
        "time" : {
          "start" : 1629124892854,
          "stop" : 1629124896787,
          "duration" : 3933
        }
      }, {
        "uid" : "ec7a77c01a959af6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20629/report/#testresult/ec7a77c01a959af6",
        "status" : "passed",
        "time" : {
          "start" : 1629119981482,
          "stop" : 1629119985616,
          "duration" : 4134
        }
      }, {
        "uid" : "46c333779be53b45",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20629/report/#testresult/46c333779be53b45",
        "status" : "passed",
        "time" : {
          "start" : 1628920385576,
          "stop" : 1628920389528,
          "duration" : 3952
        }
      }, {
        "uid" : "2fd710430ee997ad",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20629/report/#testresult/2fd710430ee997ad",
        "status" : "passed",
        "time" : {
          "start" : 1628916558261,
          "stop" : 1628916564995,
          "duration" : 6734
        }
      }, {
        "uid" : "a9b92c95d815279b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20629/report/#testresult/a9b92c95d815279b",
        "status" : "passed",
        "time" : {
          "start" : 1628833356484,
          "stop" : 1628833360693,
          "duration" : 4209
        }
      }, {
        "uid" : "359a5f13e41cce3b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20629/report/#testresult/359a5f13e41cce3b",
        "status" : "passed",
        "time" : {
          "start" : 1628831317643,
          "stop" : 1628831325613,
          "duration" : 7970
        }
      }, {
        "uid" : "c6f335d0df6f5ca4",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20629/report/#testresult/c6f335d0df6f5ca4",
        "status" : "passed",
        "time" : {
          "start" : 1628723039941,
          "stop" : 1628723043477,
          "duration" : 3536
        }
      }, {
        "uid" : "269480064e619d36",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20629/report/#testresult/269480064e619d36",
        "status" : "passed",
        "time" : {
          "start" : 1628716416248,
          "stop" : 1628716420603,
          "duration" : 4355
        }
      }, {
        "uid" : "ac6c22a6223c4e85",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20629/report/#testresult/ac6c22a6223c4e85",
        "status" : "passed",
        "time" : {
          "start" : 1628710678616,
          "stop" : 1628710681863,
          "duration" : 3247
        }
      }, {
        "uid" : "ed1931779c4f3a0a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20629/report/#testresult/ed1931779c4f3a0a",
        "status" : "passed",
        "time" : {
          "start" : 1628635806739,
          "stop" : 1628635810738,
          "duration" : 3999
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "36cb1aafd8286047.json",
  "parameterValues" : [ ]
}