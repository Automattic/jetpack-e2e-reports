{
  "uid" : "913381a439c48f92",
  "name" : "WordAds block",
  "fullName" : "WordAds block",
  "historyId" : "18efccdb8f3fb33e445e77a8ef2cffa3",
  "time" : {
    "start" : 1624864026804,
    "stop" : 1624864033141,
    "duration" : 6337
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a WordAds block\",\n    async () => {\n      await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n      blockId = await blockEditor.insertBlock(\n        _wordAds.default.name(),\n        _wordAds.default.title()\n      );\n      await blockEditor.selectPostTitle();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can switch to Wide Skyscraper ad format\",\n    async () => {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that WordAds block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a WordAds block&quot;,\n    async () =&gt; {\n      await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n      blockId = await blockEditor.insertBlock(\n        _wordAds.default.name(),\n        _wordAds.default.title()\n      );\n      await blockEditor.selectPostTitle();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can switch to Wide Skyscraper ad format&quot;,\n    async () =&gt; {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that WordAds block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "6f94781afc3b5316",
      "name" : "1624863939189_beforeAll___Paid_blocks.webm",
      "source" : "6f94781afc3b5316.webm",
      "type" : "video/webm",
      "size" : 1192936
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "9cb06870d34002f3",
      "name" : "1624863896360_beforeAll___ROOT_DESCRIBE_BLOCK.webm",
      "source" : "9cb06870d34002f3.webm",
      "type" : "video/webm",
      "size" : 292363
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a WordAds block\",\n    async () => {\n      await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n      blockId = await blockEditor.insertBlock(\n        _wordAds.default.name(),\n        _wordAds.default.title()\n      );\n      await blockEditor.selectPostTitle();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can switch to Wide Skyscraper ad format\",\n    async () => {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that WordAds block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "93c3790bdb206449",
      "name" : "1624864032736_Paid_blocks___WordAds_block.webm",
      "source" : "93c3790bdb206449.webm",
      "type" : "video/webm",
      "size" : 217991
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "e94d39a4d37e3945",
      "status" : "passed",
      "time" : {
        "start" : 1624862720580,
        "stop" : 1624862727510,
        "duration" : 6930
      }
    }, {
      "uid" : "161782fb4a82539f",
      "status" : "passed",
      "time" : {
        "start" : 1624526250241,
        "stop" : 1624526255739,
        "duration" : 5498
      }
    }, {
      "uid" : "d75c52c6a679c0f7",
      "status" : "passed",
      "time" : {
        "start" : 1624524321219,
        "stop" : 1624524325927,
        "duration" : 4708
      }
    }, {
      "uid" : "467d7f36d974b8da",
      "status" : "passed",
      "time" : {
        "start" : 1624464257311,
        "stop" : 1624464263063,
        "duration" : 5752
      }
    }, {
      "uid" : "1c5d7ccf62fa8f3a",
      "status" : "passed",
      "time" : {
        "start" : 1624462454428,
        "stop" : 1624462458414,
        "duration" : 3986
      }
    }, {
      "uid" : "67b7f833603031c1",
      "status" : "passed",
      "time" : {
        "start" : 1624460304729,
        "stop" : 1624460309371,
        "duration" : 4642
      }
    }, {
      "uid" : "938d031b194541df",
      "status" : "passed",
      "time" : {
        "start" : 1624458630836,
        "stop" : 1624458635353,
        "duration" : 4517
      }
    }, {
      "uid" : "5600738041f4416d",
      "status" : "passed",
      "time" : {
        "start" : 1624447238941,
        "stop" : 1624447244207,
        "duration" : 5266
      }
    }, {
      "uid" : "7418c4d5f018e03f",
      "status" : "passed",
      "time" : {
        "start" : 1624443515262,
        "stop" : 1624443521853,
        "duration" : 6591
      }
    }, {
      "uid" : "a38d1260c40c814b",
      "status" : "passed",
      "time" : {
        "start" : 1624442310976,
        "stop" : 1624442315804,
        "duration" : 4828
      }
    }, {
      "uid" : "c705543ced472174",
      "status" : "passed",
      "time" : {
        "start" : 1624439166310,
        "stop" : 1624439170581,
        "duration" : 4271
      }
    } ],
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "913381a439c48f92.json",
  "parameterValues" : [ ]
}