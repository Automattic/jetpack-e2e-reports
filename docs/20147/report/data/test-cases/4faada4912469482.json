{
  "uid" : "4faada4912469482",
  "name" : "Pay with PayPal",
  "fullName" : "Pay with PayPal",
  "historyId" : "2b956f1af1e91da7ea3b442b8c2cddca",
  "time" : {
    "start" : 1624882928186,
    "stop" : 1624882936514,
    "duration" : 8328
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pay with PayPal block\",\n    async () => {\n      await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n      blockId = await blockEditor.insertBlock(\n        _simplePayments.default.name(),\n        _simplePayments.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can fill details of Pay with PayPal block\",\n    async () => {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that Pay with PayPal block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a Pay with PayPal block&quot;,\n    async () =&gt; {\n      await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n      blockId = await blockEditor.insertBlock(\n        _simplePayments.default.name(),\n        _simplePayments.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can fill details of Pay with PayPal block&quot;,\n    async () =&gt; {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that Pay with PayPal block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "837cf4561af340d9",
      "name" : "1624882899640_beforeAll___Paid_blocks.webm",
      "source" : "837cf4561af340d9.webm",
      "type" : "video/webm",
      "size" : 1201598
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "588e8d7f53c3a14",
      "name" : "1624882857395_beforeAll___ROOT_DESCRIBE_BLOCK.webm",
      "source" : "588e8d7f53c3a14.webm",
      "type" : "video/webm",
      "size" : 311908
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pay with PayPal block\",\n    async () => {\n      await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n      blockId = await blockEditor.insertBlock(\n        _simplePayments.default.name(),\n        _simplePayments.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can fill details of Pay with PayPal block\",\n    async () => {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that Pay with PayPal block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f515b8be7ab34758",
      "name" : "1624882936352_Paid_blocks___Pay_with_PayPal.webm",
      "source" : "f515b8be7ab34758.webm",
      "type" : "video/webm",
      "size" : 332413
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "164d93f2ed77bf24",
      "status" : "passed",
      "time" : {
        "start" : 1624864012170,
        "stop" : 1624864024099,
        "duration" : 11929
      }
    }, {
      "uid" : "b1a8f8289058de96",
      "status" : "passed",
      "time" : {
        "start" : 1624862712134,
        "stop" : 1624862718448,
        "duration" : 6314
      }
    }, {
      "uid" : "46552bcb4913e405",
      "status" : "passed",
      "time" : {
        "start" : 1624526238398,
        "stop" : 1624526247351,
        "duration" : 8953
      }
    }, {
      "uid" : "4fb662dc2d3969e1",
      "status" : "passed",
      "time" : {
        "start" : 1624524313069,
        "stop" : 1624524319287,
        "duration" : 6218
      }
    }, {
      "uid" : "e6fb98cf81081442",
      "status" : "passed",
      "time" : {
        "start" : 1624464247100,
        "stop" : 1624464254955,
        "duration" : 7855
      }
    }, {
      "uid" : "4b177fcd968be0b4",
      "status" : "passed",
      "time" : {
        "start" : 1624462446876,
        "stop" : 1624462452460,
        "duration" : 5584
      }
    }, {
      "uid" : "f171a34b83cf1280",
      "status" : "passed",
      "time" : {
        "start" : 1624460295907,
        "stop" : 1624460302443,
        "duration" : 6536
      }
    }, {
      "uid" : "d86496fe95e9cddb",
      "status" : "passed",
      "time" : {
        "start" : 1624458622388,
        "stop" : 1624458628688,
        "duration" : 6300
      }
    }, {
      "uid" : "588f312e698e8161",
      "status" : "passed",
      "time" : {
        "start" : 1624447228240,
        "stop" : 1624447236310,
        "duration" : 8070
      }
    }, {
      "uid" : "acb758fa4b9be731",
      "status" : "passed",
      "time" : {
        "start" : 1624443506939,
        "stop" : 1624443513233,
        "duration" : 6294
      }
    }, {
      "uid" : "3c5a673343b490ee",
      "status" : "passed",
      "time" : {
        "start" : 1624442301405,
        "stop" : 1624442308726,
        "duration" : 7321
      }
    }, {
      "uid" : "445c18d3a53a0340",
      "status" : "passed",
      "time" : {
        "start" : 1624439157606,
        "stop" : 1624439164197,
        "duration" : 6591
      }
    } ],
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "4faada4912469482.json",
  "parameterValues" : [ ]
}