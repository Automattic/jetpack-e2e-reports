{
  "uid" : "54de541787ad2e64",
  "name" : "Eventbrite block",
  "fullName" : "Eventbrite block",
  "historyId" : "0b4a15ebb314cfb213eb3e305bfce89d",
  "time" : {
    "start" : 1630049633979,
    "stop" : 1630049634016,
    "duration" : 37
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const eventId = \"112691417062\";\n  await (0, _reporter.testStep)(\n    \"Can visit the block editor and add a Eventbrite block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _eventbrite.default.name(),\n        _eventbrite.default.title()\n      );\n      const eventbriteBlock = new _eventbrite.default(blockId, page, eventId);\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can publish a post with a Eventbrite block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Eventbrite block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_eventbrite.default, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const eventId = &quot;112691417062&quot;;\n  await (0, _reporter.testStep)(\n    &quot;Can visit the block editor and add a Eventbrite block&quot;,\n    async () =&gt; {\n      const blockId = await blockEditor.insertBlock(\n        _eventbrite.default.name(),\n        _eventbrite.default.title()\n      );\n      const eventbriteBlock = new _eventbrite.default(blockId, page, eventId);\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can publish a post with a Eventbrite block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can assert that Eventbrite block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_eventbrite.default, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "TimeoutError",
  "statusTrace" : "page.click: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"a[href*='my-plan'] span\"\n============================================================\nNote: use DEBUG=pw:api environment variable to capture Playwright logs.",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "broken",
    "statusMessage" : "TimeoutError",
    "statusTrace" : "page.click: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"a[href*='my-plan'] span\"\n============================================================\nNote: use DEBUG=pw:api environment variable to capture Playwright logs.",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "2da8a89cebc4ea4",
      "name" : "beforeAll - Free blocks",
      "source" : "2da8a89cebc4ea4.png",
      "type" : "image/png",
      "size" : 298173
    }, {
      "uid" : "14961bcc311a06ec",
      "name" : "1630049628664_beforeAll___Free_blocks.webm",
      "source" : "14961bcc311a06ec.webm",
      "type" : "video/webm",
      "size" : 1431134
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 10,
        "unknown" : 0,
        "total" : 11
      },
      "items" : [ {
        "uid" : "902029601792b1f9",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20660/report/#testresult/902029601792b1f9",
        "status" : "passed",
        "time" : {
          "start" : 1629995742581,
          "stop" : 1629995751939,
          "duration" : 9358
        }
      }, {
        "uid" : "f6006b3ab49ff255",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20660/report/#testresult/f6006b3ab49ff255",
        "status" : "passed",
        "time" : {
          "start" : 1629994215765,
          "stop" : 1629994224380,
          "duration" : 8615
        }
      }, {
        "uid" : "a64e6791e05aefe",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20660/report/#testresult/a64e6791e05aefe",
        "status" : "passed",
        "time" : {
          "start" : 1629991729842,
          "stop" : 1629991740478,
          "duration" : 10636
        }
      }, {
        "uid" : "fa5f15e545e7b7d6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20660/report/#testresult/fa5f15e545e7b7d6",
        "status" : "passed",
        "time" : {
          "start" : 1629968767098,
          "stop" : 1629968777783,
          "duration" : 10685
        }
      }, {
        "uid" : "c94eab471db66eb5",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20660/report/#testresult/c94eab471db66eb5",
        "status" : "passed",
        "time" : {
          "start" : 1629190368114,
          "stop" : 1629190375645,
          "duration" : 7531
        }
      }, {
        "uid" : "eb7211786ad5c807",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20660/report/#testresult/eb7211786ad5c807",
        "status" : "passed",
        "time" : {
          "start" : 1629184815536,
          "stop" : 1629184824352,
          "duration" : 8816
        }
      }, {
        "uid" : "90100fa110a9f1d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20660/report/#testresult/90100fa110a9f1d",
        "status" : "passed",
        "time" : {
          "start" : 1628846805526,
          "stop" : 1628846814256,
          "duration" : 8730
        }
      }, {
        "uid" : "1dd00543382d1e1a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20660/report/#testresult/1dd00543382d1e1a",
        "status" : "passed",
        "time" : {
          "start" : 1628843301906,
          "stop" : 1628843309580,
          "duration" : 7674
        }
      }, {
        "uid" : "dc3c1e765c035542",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20660/report/#testresult/dc3c1e765c035542",
        "status" : "passed",
        "time" : {
          "start" : 1628842272881,
          "stop" : 1628842280844,
          "duration" : 7963
        }
      }, {
        "uid" : "9d25ebe8e2a415ad",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20660/report/#testresult/9d25ebe8e2a415ad",
        "status" : "passed",
        "time" : {
          "start" : 1628759422418,
          "stop" : 1628759433354,
          "duration" : 10936
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "54de541787ad2e64.json",
  "parameterValues" : [ ]
}