{
  "uid" : "1cb813ffa01a1037",
  "name" : "MailChimp Block",
  "fullName" : "MailChimp Block",
  "historyId" : "1e0e5667b8c419e68fc1ae6a0d73dd61",
  "time" : {
    "start" : 1631047166987,
    "stop" : 1631047440800,
    "duration" : 273813
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _reporter.testStep)(\"Add a MailChimp block\", async () => {\n    blockId = await blockEditor.insertBlock(\n      _mailchimp.default.name(),\n      _mailchimp.default.title()\n    );\n  });\n  await (0, _reporter.testStep)(\"Connect to MailChimp\", async () => {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post and assert that MailChimp block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _reporter.testStep)(&quot;Add a MailChimp block&quot;, async () =&gt; {\n    blockId = await blockEditor.insertBlock(\n      _mailchimp.default.name(),\n      _mailchimp.default.title()\n    );\n  });\n  await (0, _reporter.testStep)(&quot;Connect to MailChimp&quot;, async () =&gt; {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _reporter.testStep)(\n    &quot;Publish a post and assert that MailChimp block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "Error",
  "statusTrace" : "Mailchimp connection failed after 5 attempts",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1631047160673,
        "stop" : 1631047166978,
        "duration" : 6305
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1631047440852,
        "stop" : 1631047443265,
        "duration" : 2413
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1631047448256,
        "stop" : 1631047450348,
        "duration" : 2092
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _reporter.testStep)(\"Add a MailChimp block\", async () => {\n    blockId = await blockEditor.insertBlock(\n      _mailchimp.default.name(),\n      _mailchimp.default.title()\n    );\n  });\n  await (0, _reporter.testStep)(\"Connect to MailChimp\", async () => {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post and assert that MailChimp block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "broken",
    "statusMessage" : "Error",
    "statusTrace" : "Mailchimp connection failed after 5 attempts",
    "steps" : [ {
      "name" : "Add a MailChimp block",
      "time" : {
        "start" : 1631047167097,
        "stop" : 1631047169001,
        "duration" : 1904
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Mailchimp",
        "time" : {
          "start" : 1631047167098,
          "stop" : 1631047168243,
          "duration" : 1145
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: mailchimp",
        "time" : {
          "start" : 1631047168248,
          "stop" : 1631047168807,
          "duration" : 559
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Connect to MailChimp",
      "time" : {
        "start" : 1631047169002,
        "stop" : 1631047414630,
        "duration" : 245628
      },
      "status" : "failed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ {
      "uid" : "b75c113e3bb1ecf4",
      "name" : "Paid blocks - MailChimp Block",
      "source" : "b75c113e3bb1ecf4.png",
      "type" : "image/png",
      "size" : 42256
    }, {
      "uid" : "e2e9083cf811da0e",
      "name" : "Paid blocks - MailChimp Block",
      "source" : "e2e9083cf811da0e.png",
      "type" : "image/png",
      "size" : 15792
    }, {
      "uid" : "e1652cfe733b4e19",
      "name" : "1631047415127_Paid_blocks___MailChimp_Block.webm",
      "source" : "e1652cfe733b4e19.webm",
      "type" : "video/webm",
      "size" : 3923294
    } ],
    "parameters" : [ ],
    "stepsCount" : 4,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 11,
        "skipped" : 0,
        "passed" : 17,
        "unknown" : 0,
        "total" : 28
      },
      "items" : [ {
        "uid" : "62dff940ae18c28f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20720/report/#testresult/62dff940ae18c28f",
        "status" : "broken",
        "statusDetails" : "Error",
        "time" : {
          "start" : 1631043565595,
          "stop" : 1631043871218,
          "duration" : 305623
        }
      }, {
        "uid" : "ae2dcb29835a86a7",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20720/report/#testresult/ae2dcb29835a86a7",
        "status" : "broken",
        "statusDetails" : "Error",
        "time" : {
          "start" : 1631041857274,
          "stop" : 1631042136002,
          "duration" : 278728
        }
      }, {
        "uid" : "3ddf0c1ea9e60499",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20720/report/#testresult/3ddf0c1ea9e60499",
        "status" : "passed",
        "time" : {
          "start" : 1631036775469,
          "stop" : 1631036790115,
          "duration" : 14646
        }
      }, {
        "uid" : "227c63168d0ff22c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20720/report/#testresult/227c63168d0ff22c",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1631031381192,
          "stop" : 1631031453874,
          "duration" : 72682
        }
      }, {
        "uid" : "5ea164eda683b036",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20720/report/#testresult/5ea164eda683b036",
        "status" : "passed",
        "time" : {
          "start" : 1630626859689,
          "stop" : 1630626879100,
          "duration" : 19411
        }
      }, {
        "uid" : "73942f8caea42e15",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20720/report/#testresult/73942f8caea42e15",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1630624560583,
          "stop" : 1630624630331,
          "duration" : 69748
        }
      }, {
        "uid" : "3533be3fced076f5",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20720/report/#testresult/3533be3fced076f5",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1630623709889,
          "stop" : 1630623771094,
          "duration" : 61205
        }
      }, {
        "uid" : "b54a20a23ce32a3a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20720/report/#testresult/b54a20a23ce32a3a",
        "status" : "passed",
        "time" : {
          "start" : 1630622677650,
          "stop" : 1630622696403,
          "duration" : 18753
        }
      }, {
        "uid" : "2eea6a771de45e6e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20720/report/#testresult/2eea6a771de45e6e",
        "status" : "passed",
        "time" : {
          "start" : 1630621061908,
          "stop" : 1630621082095,
          "duration" : 20187
        }
      }, {
        "uid" : "2043fcaaa3b0a49d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20720/report/#testresult/2043fcaaa3b0a49d",
        "status" : "passed",
        "time" : {
          "start" : 1630618943038,
          "stop" : 1630618957082,
          "duration" : 14044
        }
      }, {
        "uid" : "9bbbf11ad2abe16",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20720/report/#testresult/9bbbf11ad2abe16",
        "status" : "passed",
        "time" : {
          "start" : 1630528483469,
          "stop" : 1630528503015,
          "duration" : 19546
        }
      }, {
        "uid" : "4d1b0a8e7562aeb9",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20720/report/#testresult/4d1b0a8e7562aeb9",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1630525206028,
          "stop" : 1630525271393,
          "duration" : 65365
        }
      }, {
        "uid" : "5318f7954e5132af",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20720/report/#testresult/5318f7954e5132af",
        "status" : "passed",
        "time" : {
          "start" : 1630522618959,
          "stop" : 1630522638765,
          "duration" : 19806
        }
      }, {
        "uid" : "57b919697a73e684",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20720/report/#testresult/57b919697a73e684",
        "status" : "passed",
        "time" : {
          "start" : 1630450267752,
          "stop" : 1630450283604,
          "duration" : 15852
        }
      }, {
        "uid" : "93e450ea5e6db862",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20720/report/#testresult/93e450ea5e6db862",
        "status" : "passed",
        "time" : {
          "start" : 1630447572479,
          "stop" : 1630447592573,
          "duration" : 20094
        }
      }, {
        "uid" : "304e963fb1d4c6de",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20720/report/#testresult/304e963fb1d4c6de",
        "status" : "passed",
        "time" : {
          "start" : 1629998609664,
          "stop" : 1629998628994,
          "duration" : 19330
        }
      }, {
        "uid" : "40700bc08a1993ee",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20720/report/#testresult/40700bc08a1993ee",
        "status" : "passed",
        "time" : {
          "start" : 1629993757268,
          "stop" : 1629993777926,
          "duration" : 20658
        }
      }, {
        "uid" : "77defccca07956c8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20720/report/#testresult/77defccca07956c8",
        "status" : "passed",
        "time" : {
          "start" : 1629990584246,
          "stop" : 1629990605645,
          "duration" : 21399
        }
      }, {
        "uid" : "da1b802c9728e453",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20720/report/#testresult/da1b802c9728e453",
        "status" : "passed",
        "time" : {
          "start" : 1629977958474,
          "stop" : 1629977977902,
          "duration" : 19428
        }
      }, {
        "uid" : "474943402831c517",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20720/report/#testresult/474943402831c517",
        "status" : "broken",
        "statusDetails" : "Error",
        "time" : {
          "start" : 1629966002155,
          "stop" : 1629966026423,
          "duration" : 24268
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "1cb813ffa01a1037.json",
  "parameterValues" : [ ]
}