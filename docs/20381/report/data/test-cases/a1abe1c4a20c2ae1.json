{
  "uid" : "a1abe1c4a20c2ae1",
  "name" : "Pay with PayPal",
  "fullName" : "Pay with PayPal",
  "historyId" : "2b956f1af1e91da7ea3b442b8c2cddca",
  "time" : {
    "start" : 1626971899986,
    "stop" : 1626971912814,
    "duration" : 12828
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pay with PayPal block\",\n    async () => {\n      await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n      blockId = await blockEditor.insertBlock(\n        _simplePayments.default.name(),\n        _simplePayments.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can fill details of Pay with PayPal block\",\n    async () => {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that Pay with PayPal block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a Pay with PayPal block&quot;,\n    async () =&gt; {\n      await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n      blockId = await blockEditor.insertBlock(\n        _simplePayments.default.name(),\n        _simplePayments.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can fill details of Pay with PayPal block&quot;,\n    async () =&gt; {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that Pay with PayPal block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 8,
        "unknown" : 0,
        "total" : 8
      },
      "items" : [ {
        "uid" : "cf1e67402c33268c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20381/report/#testresult/cf1e67402c33268c",
        "status" : "passed",
        "time" : {
          "start" : 1626902545099,
          "stop" : 1626902555891,
          "duration" : 10792
        }
      }, {
        "uid" : "14cd2e2ef039455b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20381/report/#testresult/14cd2e2ef039455b",
        "status" : "passed",
        "time" : {
          "start" : 1626814143780,
          "stop" : 1626814153092,
          "duration" : 9312
        }
      }, {
        "uid" : "ff3ab651da8e5f19",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20381/report/#testresult/ff3ab651da8e5f19",
        "status" : "passed",
        "time" : {
          "start" : 1626721229803,
          "stop" : 1626721240135,
          "duration" : 10332
        }
      }, {
        "uid" : "2ef64ca1890a6049",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20381/report/#testresult/2ef64ca1890a6049",
        "status" : "passed",
        "time" : {
          "start" : 1626456189837,
          "stop" : 1626456197639,
          "duration" : 7802
        }
      }, {
        "uid" : "c765ee9e9c3454eb",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20381/report/#testresult/c765ee9e9c3454eb",
        "status" : "passed",
        "time" : {
          "start" : 1626453602501,
          "stop" : 1626453612364,
          "duration" : 9863
        }
      }, {
        "uid" : "2c5114fd6d767aea",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20381/report/#testresult/2c5114fd6d767aea",
        "status" : "passed",
        "time" : {
          "start" : 1626443254249,
          "stop" : 1626443260188,
          "duration" : 5939
        }
      }, {
        "uid" : "bd4aaee6393854e9",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20381/report/#testresult/bd4aaee6393854e9",
        "status" : "passed",
        "time" : {
          "start" : 1626435780289,
          "stop" : 1626435788118,
          "duration" : 7829
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "a1abe1c4a20c2ae1.json",
  "parameterValues" : [ ]
}