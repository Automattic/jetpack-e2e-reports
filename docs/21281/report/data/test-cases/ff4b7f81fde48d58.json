{
  "uid" : "ff4b7f81fde48d58",
  "name" : "Pinterest block",
  "fullName" : "Pinterest block",
  "historyId" : "bf919c5c1253559f0d007402decf47af",
  "time" : {
    "start" : 1633952410111,
    "stop" : 1633952418147,
    "duration" : 8036
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _reporter.testStep)(\"Add a Pinterest block\", async () => {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const pinId = _config.default.get(&quot;blocks.pinterest.pinId&quot;);\n\n  await (0, _reporter.testStep)(&quot;Add a Pinterest block&quot;, async () =&gt; {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    &quot;Publish a post with a Pinterest block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can assert that Pinterest block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1633952403736,
        "stop" : 1633952410102,
        "duration" : 6366
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1633952418272,
        "stop" : 1633952420589,
        "duration" : 2317
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _reporter.testStep)(\"Add a Pinterest block\", async () => {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Add a Pinterest block",
      "time" : {
        "start" : 1633952410139,
        "stop" : 1633952413258,
        "duration" : 3119
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Pinterest",
        "time" : {
          "start" : 1633952410143,
          "stop" : 1633952410893,
          "duration" : 750
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: pinterest",
        "time" : {
          "start" : 1633952410906,
          "stop" : 1633952411277,
          "duration" : 371
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Publish a post with a Pinterest block",
      "time" : {
        "start" : 1633952413261,
        "stop" : 1633952417833,
        "duration" : 4572
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Publish post",
        "time" : {
          "start" : 1633952413387,
          "stop" : 1633952416318,
          "duration" : 2931
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "View post",
        "time" : {
          "start" : 1633952416321,
          "stop" : 1633952417833,
          "duration" : 1512
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Can assert that Pinterest block is rendered",
      "time" : {
        "start" : 1633952417837,
        "stop" : 1633952418122,
        "duration" : 285
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "tag",
    "value" : "Jetpack version: 10.3-alpha-62ab1b5b75ebce9b1414f4c06d8a17586e367a67"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 9,
        "unknown" : 0,
        "total" : 10
      },
      "items" : [ {
        "uid" : "821b7952e3a23a15",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21281/report/#testresult/821b7952e3a23a15",
        "status" : "passed",
        "time" : {
          "start" : 1633439368599,
          "stop" : 1633439378135,
          "duration" : 9536
        }
      }, {
        "uid" : "22056d457711e8dc",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21281/report/#testresult/22056d457711e8dc",
        "status" : "passed",
        "time" : {
          "start" : 1633427918065,
          "stop" : 1633427924882,
          "duration" : 6817
        }
      }, {
        "uid" : "88cb7231356c1b6f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21281/report/#testresult/88cb7231356c1b6f",
        "status" : "passed",
        "time" : {
          "start" : 1633417061005,
          "stop" : 1633417067083,
          "duration" : 6078
        }
      }, {
        "uid" : "ec693ffe63dbcad",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21281/report/#testresult/ec693ffe63dbcad",
        "status" : "passed",
        "time" : {
          "start" : 1633376601094,
          "stop" : 1633376610537,
          "duration" : 9443
        }
      }, {
        "uid" : "403897d26b6f5682",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21281/report/#testresult/403897d26b6f5682",
        "status" : "passed",
        "time" : {
          "start" : 1633373651933,
          "stop" : 1633373663047,
          "duration" : 11114
        }
      }, {
        "uid" : "837e7a5a32117128",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21281/report/#testresult/837e7a5a32117128",
        "status" : "passed",
        "time" : {
          "start" : 1633371792768,
          "stop" : 1633371803200,
          "duration" : 10432
        }
      }, {
        "uid" : "6fdc59897c1d1514",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21281/report/#testresult/6fdc59897c1d1514",
        "status" : "passed",
        "time" : {
          "start" : 1633367485833,
          "stop" : 1633367493921,
          "duration" : 8088
        }
      }, {
        "uid" : "9c2523b5455be117",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21281/report/#testresult/9c2523b5455be117",
        "status" : "passed",
        "time" : {
          "start" : 1633363080634,
          "stop" : 1633363090599,
          "duration" : 9965
        }
      }, {
        "uid" : "de063366b03f7d4d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21281/report/#testresult/de063366b03f7d4d",
        "status" : "broken",
        "statusDetails" : "Error",
        "time" : {
          "start" : 1633356755808,
          "stop" : 1633356755841,
          "duration" : 33
        }
      } ]
    },
    "tags" : [ "Jetpack version: 10.3-alpha-62ab1b5b75ebce9b1414f4c06d8a17586e367a67" ]
  },
  "source" : "ff4b7f81fde48d58.json",
  "parameterValues" : [ ]
}