{
  "uid" : "c5d970f9d54e96c5",
  "name" : "Pinterest block",
  "fullName" : "Pinterest block",
  "historyId" : "bf919c5c1253559f0d007402decf47af",
  "time" : {
    "start" : 1630661547942,
    "stop" : 1630661556318,
    "duration" : 8376
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _reporter.testStep)(\"Add a Pinterest block\", async () => {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const pinId = _config.default.get(&quot;blocks.pinterest.pinId&quot;);\n\n  await (0, _reporter.testStep)(&quot;Add a Pinterest block&quot;, async () =&gt; {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    &quot;Publish a post with a Pinterest block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can assert that Pinterest block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1630661538467,
        "stop" : 1630661547939,
        "duration" : 9472
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1630661556518,
        "stop" : 1630661559551,
        "duration" : 3033
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _reporter.testStep)(\"Add a Pinterest block\", async () => {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Add a Pinterest block",
      "time" : {
        "start" : 1630661547988,
        "stop" : 1630661550896,
        "duration" : 2908
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Pinterest",
        "time" : {
          "start" : 1630661547989,
          "stop" : 1630661548970,
          "duration" : 981
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: pinterest",
        "time" : {
          "start" : 1630661548977,
          "stop" : 1630661549444,
          "duration" : 467
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Publish a post with a Pinterest block",
      "time" : {
        "start" : 1630661550900,
        "stop" : 1630661555234,
        "duration" : 4334
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Publish post",
        "time" : {
          "start" : 1630661551025,
          "stop" : 1630661554654,
          "duration" : 3629
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "View post",
        "time" : {
          "start" : 1630661554659,
          "stop" : 1630661555234,
          "duration" : 575
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Can assert that Pinterest block is rendered",
      "time" : {
        "start" : 1630661555235,
        "stop" : 1630661556279,
        "duration" : 1044
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 9,
        "unknown" : 0,
        "total" : 9
      },
      "items" : [ {
        "uid" : "8038893cab7f5bf2",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20915/report/#testresult/8038893cab7f5bf2",
        "status" : "passed",
        "time" : {
          "start" : 1630659777307,
          "stop" : 1630659784033,
          "duration" : 6726
        }
      }, {
        "uid" : "88619c1c1f0b4912",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20915/report/#testresult/88619c1c1f0b4912",
        "status" : "passed",
        "time" : {
          "start" : 1630658723330,
          "stop" : 1630658731913,
          "duration" : 8583
        }
      }, {
        "uid" : "7839e874fd8f74",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20915/report/#testresult/7839e874fd8f74",
        "status" : "passed",
        "time" : {
          "start" : 1630657709051,
          "stop" : 1630657715979,
          "duration" : 6928
        }
      }, {
        "uid" : "461a0b9592b86204",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20915/report/#testresult/461a0b9592b86204",
        "status" : "passed",
        "time" : {
          "start" : 1630598839560,
          "stop" : 1630598847731,
          "duration" : 8171
        }
      }, {
        "uid" : "741ef160737f052f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20915/report/#testresult/741ef160737f052f",
        "status" : "passed",
        "time" : {
          "start" : 1630588005857,
          "stop" : 1630588013180,
          "duration" : 7323
        }
      }, {
        "uid" : "1850abd565ea21cb",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20915/report/#testresult/1850abd565ea21cb",
        "status" : "passed",
        "time" : {
          "start" : 1630566906031,
          "stop" : 1630566915939,
          "duration" : 9908
        }
      }, {
        "uid" : "637bd9f79e2a41c8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20915/report/#testresult/637bd9f79e2a41c8",
        "status" : "passed",
        "time" : {
          "start" : 1630512524214,
          "stop" : 1630512532292,
          "duration" : 8078
        }
      }, {
        "uid" : "2ccc85cc0cb5942c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20915/report/#testresult/2ccc85cc0cb5942c",
        "status" : "passed",
        "time" : {
          "start" : 1630511328948,
          "stop" : 1630511335691,
          "duration" : 6743
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "c5d970f9d54e96c5.json",
  "parameterValues" : [ ]
}