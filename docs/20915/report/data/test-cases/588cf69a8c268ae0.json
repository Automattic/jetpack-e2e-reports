{
  "uid" : "588cf69a8c268ae0",
  "name" : "MailChimp Block",
  "fullName" : "MailChimp Block",
  "historyId" : "1e0e5667b8c419e68fc1ae6a0d73dd61",
  "time" : {
    "start" : 1630659377654,
    "stop" : 1630659688386,
    "duration" : 310732
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _reporter.testStep)(\"Add a MailChimp block\", async () => {\n    blockId = await blockEditor.insertBlock(\n      _mailchimp.default.name(),\n      _mailchimp.default.title()\n    );\n  });\n  await (0, _reporter.testStep)(\"Connect to MailChimp\", async () => {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post and assert that MailChimp block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _reporter.testStep)(&quot;Add a MailChimp block&quot;, async () =&gt; {\n    blockId = await blockEditor.insertBlock(\n      _mailchimp.default.name(),\n      _mailchimp.default.title()\n    );\n  });\n  await (0, _reporter.testStep)(&quot;Connect to MailChimp&quot;, async () =&gt; {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _reporter.testStep)(\n    &quot;Publish a post and assert that MailChimp block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "Error",
  "statusTrace" : "Mailchimp connection failed after 5 attempts",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1630659369666,
        "stop" : 1630659377651,
        "duration" : 7985
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "broken",
    "statusMessage" : "TimeoutError",
    "statusTrace" : "page.waitForSelector: Timeout 20000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"#editor\" to be visible\n============================================================\nNote: use DEBUG=pw:api environment variable to capture Playwright logs.",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1630659688453,
        "stop" : 1630659708702,
        "duration" : 20249
      },
      "status" : "failed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ {
      "uid" : "7d98b9ed76a6963f",
      "name" : "beforeEach - Paid blocks",
      "source" : "7d98b9ed76a6963f.png",
      "type" : "image/png",
      "size" : 143404
    }, {
      "uid" : "c040623a8d5ffe4e",
      "name" : "beforeEach - Paid blocks",
      "source" : "c040623a8d5ffe4e.png",
      "type" : "image/png",
      "size" : 16403
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1630659715232,
        "stop" : 1630659720069,
        "duration" : 4837
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _reporter.testStep)(\"Add a MailChimp block\", async () => {\n    blockId = await blockEditor.insertBlock(\n      _mailchimp.default.name(),\n      _mailchimp.default.title()\n    );\n  });\n  await (0, _reporter.testStep)(\"Connect to MailChimp\", async () => {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post and assert that MailChimp block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "broken",
    "statusMessage" : "Error",
    "statusTrace" : "Mailchimp connection failed after 5 attempts",
    "steps" : [ {
      "name" : "Add a MailChimp block",
      "time" : {
        "start" : 1630659377718,
        "stop" : 1630659379788,
        "duration" : 2070
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Mailchimp",
        "time" : {
          "start" : 1630659377719,
          "stop" : 1630659379198,
          "duration" : 1479
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: mailchimp",
        "time" : {
          "start" : 1630659379199,
          "stop" : 1630659379654,
          "duration" : 455
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Connect to MailChimp",
      "time" : {
        "start" : 1630659379790,
        "stop" : 1630659649453,
        "duration" : 269663
      },
      "status" : "failed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ {
      "uid" : "dd23de624e6ebcdf",
      "name" : "Paid blocks - MailChimp Block",
      "source" : "dd23de624e6ebcdf.png",
      "type" : "image/png",
      "size" : 42256
    }, {
      "uid" : "83dc559e547343ed",
      "name" : "Paid blocks - MailChimp Block",
      "source" : "83dc559e547343ed.png",
      "type" : "image/png",
      "size" : 143507
    }, {
      "uid" : "4f42267b68fbdb1e",
      "name" : "1630659650396_Paid_blocks___MailChimp_Block.webm",
      "source" : "4f42267b68fbdb1e.webm",
      "type" : "video/webm",
      "size" : 4312918
    } ],
    "parameters" : [ ],
    "stepsCount" : 4,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 5,
        "unknown" : 0,
        "total" : 8
      },
      "items" : [ {
        "uid" : "faa5149ca4b498b7",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20915/report/#testresult/faa5149ca4b498b7",
        "status" : "passed",
        "time" : {
          "start" : 1630658628843,
          "stop" : 1630658646585,
          "duration" : 17742
        }
      }, {
        "uid" : "799b9e599fbb419",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20915/report/#testresult/799b9e599fbb419",
        "status" : "passed",
        "time" : {
          "start" : 1630657641724,
          "stop" : 1630657654746,
          "duration" : 13022
        }
      }, {
        "uid" : "fcece7303c4e694b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20915/report/#testresult/fcece7303c4e694b",
        "status" : "broken",
        "statusDetails" : "Error",
        "time" : {
          "start" : 1630598510765,
          "stop" : 1630598776580,
          "duration" : 265815
        }
      }, {
        "uid" : "ab3c17f2136dfed4",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20915/report/#testresult/ab3c17f2136dfed4",
        "status" : "passed",
        "time" : {
          "start" : 1630587945936,
          "stop" : 1630587960168,
          "duration" : 14232
        }
      }, {
        "uid" : "ca46236724428cd6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20915/report/#testresult/ca46236724428cd6",
        "status" : "passed",
        "time" : {
          "start" : 1630566811220,
          "stop" : 1630566832671,
          "duration" : 21451
        }
      }, {
        "uid" : "5c68cf888efe1743",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20915/report/#testresult/5c68cf888efe1743",
        "status" : "broken",
        "statusDetails" : "Error",
        "time" : {
          "start" : 1630512161891,
          "stop" : 1630512449416,
          "duration" : 287525
        }
      }, {
        "uid" : "ff5f2a1b37a2158d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20915/report/#testresult/ff5f2a1b37a2158d",
        "status" : "passed",
        "time" : {
          "start" : 1630511267951,
          "stop" : 1630511282057,
          "duration" : 14106
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "588cf69a8c268ae0.json",
  "parameterValues" : [ ]
}