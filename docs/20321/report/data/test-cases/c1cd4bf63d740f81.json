{
  "uid" : "c1cd4bf63d740f81",
  "name" : "Pay with PayPal",
  "fullName" : "Pay with PayPal",
  "historyId" : "2b956f1af1e91da7ea3b442b8c2cddca",
  "time" : {
    "start" : 1626182348080,
    "stop" : 1626182348134,
    "duration" : 54
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pay with PayPal block\",\n    async () => {\n      await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n      blockId = await blockEditor.insertBlock(\n        _simplePayments.default.name(),\n        _simplePayments.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can fill details of Pay with PayPal block\",\n    async () => {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that Pay with PayPal block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a Pay with PayPal block&quot;,\n    async () =&gt; {\n      await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n      blockId = await blockEditor.insertBlock(\n        _simplePayments.default.name(),\n        _simplePayments.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can fill details of Pay with PayPal block&quot;,\n    async () =&gt; {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that Pay with PayPal block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "TimeoutError",
  "statusTrace" : "page.waitForSelector: Timeout 20000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \".login\" to be visible\n============================================================\nNote: use DEBUG=pw:api environment variable to capture Playwright logs.",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "broken",
    "statusMessage" : "TimeoutError",
    "statusTrace" : "page.waitForSelector: Timeout 20000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \".login\" to be visible\n============================================================\nNote: use DEBUG=pw:api environment variable to capture Playwright logs.",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "95f95fbb23d81212",
      "name" : "beforeAll - ROOT_DESCRIBE_BLOCK",
      "source" : "95f95fbb23d81212.png",
      "type" : "image/png",
      "size" : 255729
    }, {
      "uid" : "2720c7feea2f7815",
      "name" : "1626182301343_beforeAll___ROOT_DESCRIBE_BLOCK.webm",
      "source" : "2720c7feea2f7815.webm",
      "type" : "video/webm",
      "size" : 841797
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 3,
        "unknown" : 0,
        "total" : 6
      },
      "items" : [ {
        "uid" : "d9247c312fbdb1b8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/d9247c312fbdb1b8",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1626181459599,
          "stop" : 1626181459624,
          "duration" : 25
        }
      }, {
        "uid" : "6a5a8c2570b30fb3",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/6a5a8c2570b30fb3",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1626180519277,
          "stop" : 1626180519376,
          "duration" : 99
        }
      }, {
        "uid" : "1f5f27c013ce97e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/1f5f27c013ce97e",
        "status" : "passed",
        "time" : {
          "start" : 1626173394160,
          "stop" : 1626173401432,
          "duration" : 7272
        }
      }, {
        "uid" : "7badb72e7968135d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/7badb72e7968135d",
        "status" : "passed",
        "time" : {
          "start" : 1626170803529,
          "stop" : 1626170809696,
          "duration" : 6167
        }
      }, {
        "uid" : "6d498e9262b07e17",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/6d498e9262b07e17",
        "status" : "passed",
        "time" : {
          "start" : 1625834999883,
          "stop" : 1625835007133,
          "duration" : 7250
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "c1cd4bf63d740f81.json",
  "parameterValues" : [ ]
}