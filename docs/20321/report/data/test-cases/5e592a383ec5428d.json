{
  "uid" : "5e592a383ec5428d",
  "name" : "WordAds block",
  "fullName" : "WordAds block",
  "historyId" : "18efccdb8f3fb33e445e77a8ef2cffa3",
  "time" : {
    "start" : 1628084505004,
    "stop" : 1628084515648,
    "duration" : 10644
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _prerequisites.prerequisitesBuilder)()\n    .withActiveModules([\"wordads\"])\n    .build();\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a WordAds block\",\n    async () => {\n      await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n      blockId = await blockEditor.insertBlock(\n        _wordAds.default.name(),\n        _wordAds.default.title()\n      );\n      await blockEditor.selectPostTitle();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can switch to Wide Skyscraper ad format\",\n    async () => {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that WordAds block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  await (0, _prerequisites.prerequisitesBuilder)()\n    .withActiveModules([&quot;wordads&quot;])\n    .build();\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a WordAds block&quot;,\n    async () =&gt; {\n      await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n      blockId = await blockEditor.insertBlock(\n        _wordAds.default.name(),\n        _wordAds.default.title()\n      );\n      await blockEditor.selectPostTitle();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can switch to Wide Skyscraper ad format&quot;,\n    async () =&gt; {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that WordAds block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 6,
        "unknown" : 0,
        "total" : 10
      },
      "items" : [ {
        "uid" : "47a2a833edb7dd0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/47a2a833edb7dd0",
        "status" : "failed",
        "statusDetails" : "expect(received).toMatch(expected)\n",
        "time" : {
          "start" : 1628077075060,
          "stop" : 1628077075092,
          "duration" : 32
        }
      }, {
        "uid" : "38c036d484b848dd",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/38c036d484b848dd",
        "status" : "passed",
        "time" : {
          "start" : 1628070495670,
          "stop" : 1628070500300,
          "duration" : 4630
        }
      }, {
        "uid" : "b936c4a362191c2f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/b936c4a362191c2f",
        "status" : "passed",
        "time" : {
          "start" : 1626258732653,
          "stop" : 1626258736948,
          "duration" : 4295
        }
      }, {
        "uid" : "ea81acbaae4e7f9f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/ea81acbaae4e7f9f",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1626182348200,
          "stop" : 1626182348273,
          "duration" : 73
        }
      }, {
        "uid" : "8dd5d3ca3d32e563",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/8dd5d3ca3d32e563",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1626181459663,
          "stop" : 1626181459694,
          "duration" : 31
        }
      }, {
        "uid" : "e2b11759bceed45e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/e2b11759bceed45e",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1626180519470,
          "stop" : 1626180519520,
          "duration" : 50
        }
      }, {
        "uid" : "94c4eecc64b81d70",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/94c4eecc64b81d70",
        "status" : "passed",
        "time" : {
          "start" : 1626173403721,
          "stop" : 1626173408789,
          "duration" : 5068
        }
      }, {
        "uid" : "c446165f781e70ac",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/c446165f781e70ac",
        "status" : "passed",
        "time" : {
          "start" : 1626170811739,
          "stop" : 1626170816088,
          "duration" : 4349
        }
      }, {
        "uid" : "6c460e971e9b2cae",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/6c460e971e9b2cae",
        "status" : "passed",
        "time" : {
          "start" : 1625835009582,
          "stop" : 1625835014411,
          "duration" : 4829
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "5e592a383ec5428d.json",
  "parameterValues" : [ ]
}