{
  "uid" : "752ac03d07da685e",
  "name" : "MailChimp Block",
  "fullName" : "MailChimp Block",
  "historyId" : "1e0e5667b8c419e68fc1ae6a0d73dd61",
  "time" : {
    "start" : 1626182347753,
    "stop" : 1626182347972,
    "duration" : 219
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a MailChimp block\",\n    async () => {\n      blockId = await blockEditor.insertBlock(\n        _mailchimp.default.name(),\n        _mailchimp.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\"Can connect to a MailChimp\", async () => {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that MailChimp block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a MailChimp block&quot;,\n    async () =&gt; {\n      blockId = await blockEditor.insertBlock(\n        _mailchimp.default.name(),\n        _mailchimp.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(&quot;Can connect to a MailChimp&quot;, async () =&gt; {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that MailChimp block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "TimeoutError",
  "statusTrace" : "page.waitForSelector: Timeout 20000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \".login\" to be visible\n============================================================\nNote: use DEBUG=pw:api environment variable to capture Playwright logs.",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "broken",
    "statusMessage" : "TimeoutError",
    "statusTrace" : "page.waitForSelector: Timeout 20000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \".login\" to be visible\n============================================================\nNote: use DEBUG=pw:api environment variable to capture Playwright logs.",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "95f95fbb23d81212",
      "name" : "beforeAll - ROOT_DESCRIBE_BLOCK",
      "source" : "95f95fbb23d81212.png",
      "type" : "image/png",
      "size" : 255729
    }, {
      "uid" : "2720c7feea2f7815",
      "name" : "1626182301343_beforeAll___ROOT_DESCRIBE_BLOCK.webm",
      "source" : "2720c7feea2f7815.webm",
      "type" : "video/webm",
      "size" : 841797
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a MailChimp block\",\n    async () => {\n      blockId = await blockEditor.insertBlock(\n        _mailchimp.default.name(),\n        _mailchimp.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\"Can connect to a MailChimp\", async () => {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that MailChimp block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "broken",
    "statusMessage" : "TimeoutError",
    "statusTrace" : "page.waitForSelector: Timeout 20000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \".login\" to be visible\n============================================================\nNote: use DEBUG=pw:api environment variable to capture Playwright logs.",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d29a3ee809eda998",
      "name" : "1626182347868_Paid_blocks___MailChimp_Block.webm",
      "source" : "d29a3ee809eda998.webm",
      "type" : "video/webm",
      "size" : 1409
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 3,
        "unknown" : 0,
        "total" : 6
      },
      "items" : [ {
        "uid" : "b22f86628b9c48f3",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/b22f86628b9c48f3",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1626181459372,
          "stop" : 1626181459514,
          "duration" : 142
        }
      }, {
        "uid" : "1d9df58d8c2e33ee",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/1d9df58d8c2e33ee",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1626180519104,
          "stop" : 1626180519194,
          "duration" : 90
        }
      }, {
        "uid" : "a91fd71f4c817be8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/a91fd71f4c817be8",
        "status" : "passed",
        "time" : {
          "start" : 1626173374555,
          "stop" : 1626173391132,
          "duration" : 16577
        }
      }, {
        "uid" : "3d8cade9a6a31b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/3d8cade9a6a31b",
        "status" : "passed",
        "time" : {
          "start" : 1626170787343,
          "stop" : 1626170801443,
          "duration" : 14100
        }
      }, {
        "uid" : "7f239ad81b3c4e1b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/7f239ad81b3c4e1b",
        "status" : "passed",
        "time" : {
          "start" : 1625834983357,
          "stop" : 1625834997410,
          "duration" : 14053
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "752ac03d07da685e.json",
  "parameterValues" : [ ]
}