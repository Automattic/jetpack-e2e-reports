{
  "uid" : "b42db01b9b06e4dc",
  "name" : "Pay with PayPal",
  "fullName" : "Pay with PayPal",
  "historyId" : "2b956f1af1e91da7ea3b442b8c2cddca",
  "time" : {
    "start" : 1628498644811,
    "stop" : 1628498650583,
    "duration" : 5772
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _reporter.testStep)(\"Add a Pay with PayPal block\", async () => {\n    await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n    blockId = await blockEditor.insertBlock(\n      _simplePayments.default.name(),\n      _simplePayments.default.title()\n    );\n  });\n  await (0, _reporter.testStep)(\n    \"Fill details of Pay with PayPal block\",\n    async () => {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Publish a post and assert that Pay with PayPal block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _reporter.testStep)(&quot;Add a Pay with PayPal block&quot;, async () =&gt; {\n    await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n    blockId = await blockEditor.insertBlock(\n      _simplePayments.default.name(),\n      _simplePayments.default.title()\n    );\n  });\n  await (0, _reporter.testStep)(\n    &quot;Fill details of Pay with PayPal block&quot;,\n    async () =&gt; {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Publish a post and assert that Pay with PayPal block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1628498625368,
        "stop" : 1628498630572,
        "duration" : 5204
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1628498643001,
        "stop" : 1628498644809,
        "duration" : 1808
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1628498650666,
        "stop" : 1628498652511,
        "duration" : 1845
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _reporter.testStep)(\"Add a Pay with PayPal block\", async () => {\n    await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n    blockId = await blockEditor.insertBlock(\n      _simplePayments.default.name(),\n      _simplePayments.default.title()\n    );\n  });\n  await (0, _reporter.testStep)(\n    \"Fill details of Pay with PayPal block\",\n    async () => {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Publish a post and assert that Pay with PayPal block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Add a Pay with PayPal block",
      "time" : {
        "start" : 1628498644828,
        "stop" : 1628498646531,
        "duration" : 1703
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Pay with PayPal",
        "time" : {
          "start" : 1628498644856,
          "stop" : 1628498646104,
          "duration" : 1248
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: simple-payments",
        "time" : {
          "start" : 1628498646106,
          "stop" : 1628498646438,
          "duration" : 332
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Fill details of Pay with PayPal block",
      "time" : {
        "start" : 1628498646532,
        "stop" : 1628498647687,
        "duration" : 1155
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Publish a post and assert that Pay with PayPal block is rendered",
      "time" : {
        "start" : 1628498647688,
        "stop" : 1628498650519,
        "duration" : 2831
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Publish post",
        "time" : {
          "start" : 1628498647783,
          "stop" : 1628498648592,
          "duration" : 809
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "View post",
        "time" : {
          "start" : 1628498648594,
          "stop" : 1628498648912,
          "duration" : 318
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 10,
        "unknown" : 0,
        "total" : 14
      },
      "items" : [ {
        "uid" : "49ab3f5b6ec261a2",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/49ab3f5b6ec261a2",
        "status" : "passed",
        "time" : {
          "start" : 1628254123700,
          "stop" : 1628254133526,
          "duration" : 9826
        }
      }, {
        "uid" : "148275cd9a0b121",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/148275cd9a0b121",
        "status" : "passed",
        "time" : {
          "start" : 1628253375334,
          "stop" : 1628253386868,
          "duration" : 11534
        }
      }, {
        "uid" : "9725c6867eb9b311",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/9725c6867eb9b311",
        "status" : "passed",
        "time" : {
          "start" : 1628092008836,
          "stop" : 1628092019999,
          "duration" : 11163
        }
      }, {
        "uid" : "804b729281be1ce6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/804b729281be1ce6",
        "status" : "passed",
        "time" : {
          "start" : 1628084494107,
          "stop" : 1628084503061,
          "duration" : 8954
        }
      }, {
        "uid" : "a065b3bf9ad9f88e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/a065b3bf9ad9f88e",
        "status" : "failed",
        "statusDetails" : "expect(received).toMatch(expected)\n",
        "time" : {
          "start" : 1628077074974,
          "stop" : 1628077075004,
          "duration" : 30
        }
      }, {
        "uid" : "5f1510e98ea8a7f7",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/5f1510e98ea8a7f7",
        "status" : "passed",
        "time" : {
          "start" : 1628070485036,
          "stop" : 1628070493667,
          "duration" : 8631
        }
      }, {
        "uid" : "a99ea4f7b915ee27",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/a99ea4f7b915ee27",
        "status" : "passed",
        "time" : {
          "start" : 1626258724262,
          "stop" : 1626258730573,
          "duration" : 6311
        }
      }, {
        "uid" : "c1cd4bf63d740f81",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/c1cd4bf63d740f81",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1626182348080,
          "stop" : 1626182348134,
          "duration" : 54
        }
      }, {
        "uid" : "d9247c312fbdb1b8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/d9247c312fbdb1b8",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1626181459599,
          "stop" : 1626181459624,
          "duration" : 25
        }
      }, {
        "uid" : "6a5a8c2570b30fb3",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/6a5a8c2570b30fb3",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1626180519277,
          "stop" : 1626180519376,
          "duration" : 99
        }
      }, {
        "uid" : "1f5f27c013ce97e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/1f5f27c013ce97e",
        "status" : "passed",
        "time" : {
          "start" : 1626173394160,
          "stop" : 1626173401432,
          "duration" : 7272
        }
      }, {
        "uid" : "7badb72e7968135d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/7badb72e7968135d",
        "status" : "passed",
        "time" : {
          "start" : 1626170803529,
          "stop" : 1626170809696,
          "duration" : 6167
        }
      }, {
        "uid" : "6d498e9262b07e17",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20321/report/#testresult/6d498e9262b07e17",
        "status" : "passed",
        "time" : {
          "start" : 1625834999883,
          "stop" : 1625835007133,
          "duration" : 7250
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "b42db01b9b06e4dc.json",
  "parameterValues" : [ ]
}