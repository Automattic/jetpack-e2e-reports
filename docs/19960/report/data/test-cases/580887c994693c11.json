{
  "uid" : "580887c994693c11",
  "name" : "Pinterest block",
  "fullName" : "Pinterest block",
  "historyId" : "bf919c5c1253559f0d007402decf47af",
  "time" : {
    "start" : 1624543380030,
    "stop" : 1624543386651,
    "duration" : 6621
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pinterest block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _pinterest.default.name(),\n        _pinterest.default.title()\n      );\n      const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n      await pinterestBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const pinId = _config.default.get(&quot;blocks.pinterest.pinId&quot;);\n\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a Pinterest block&quot;,\n    async () =&gt; {\n      const blockId = await blockEditor.insertBlock(\n        _pinterest.default.name(),\n        _pinterest.default.title()\n      );\n      const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n      await pinterestBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post with a Pinterest block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can assert that Pinterest block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "3faf167e71e7370f",
      "name" : "1624543373531_beforeAll___Free_blocks.webm",
      "source" : "3faf167e71e7370f.webm",
      "type" : "video/webm",
      "size" : 547830
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "865a88ffa183fbaa",
      "name" : "1624543354064_beforeAll___ROOT_DESCRIBE_BLOCK.webm",
      "source" : "865a88ffa183fbaa.webm",
      "type" : "video/webm",
      "size" : 393851
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pinterest block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _pinterest.default.name(),\n        _pinterest.default.title()\n      );\n      const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n      await pinterestBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "ed7ace41ae3de52c",
      "name" : "1624543386531_Free_blocks___Pinterest_block.webm",
      "source" : "ed7ace41ae3de52c.webm",
      "type" : "video/webm",
      "size" : 489082
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "9732914f7d78f28d",
      "status" : "passed",
      "time" : {
        "start" : 1624485186938,
        "stop" : 1624485193615,
        "duration" : 6677
      }
    }, {
      "uid" : "7968ff6abb15ca39",
      "status" : "passed",
      "time" : {
        "start" : 1624484372094,
        "stop" : 1624484379415,
        "duration" : 7321
      }
    }, {
      "uid" : "f2149a8938501250",
      "status" : "passed",
      "time" : {
        "start" : 1624040519959,
        "stop" : 1624040527798,
        "duration" : 7839
      }
    }, {
      "uid" : "de621195fd4629d2",
      "status" : "passed",
      "time" : {
        "start" : 1624038193881,
        "stop" : 1624038198581,
        "duration" : 4700
      }
    }, {
      "uid" : "811749cf28e07500",
      "status" : "passed",
      "time" : {
        "start" : 1624031897390,
        "stop" : 1624031904052,
        "duration" : 6662
      }
    }, {
      "uid" : "ca0253051ce1264f",
      "status" : "passed",
      "time" : {
        "start" : 1624030289811,
        "stop" : 1624030296234,
        "duration" : 6423
      }
    }, {
      "uid" : "7d687aed9cf6a746",
      "status" : "passed",
      "time" : {
        "start" : 1624028991176,
        "stop" : 1624028996365,
        "duration" : 5189
      }
    }, {
      "uid" : "7502c39149046729",
      "status" : "passed",
      "time" : {
        "start" : 1623870468939,
        "stop" : 1623870478455,
        "duration" : 9516
      }
    }, {
      "uid" : "f693f1ed067ff603",
      "status" : "passed",
      "time" : {
        "start" : 1623868768892,
        "stop" : 1623868775535,
        "duration" : 6643
      }
    }, {
      "uid" : "8d6342d980c999cc",
      "status" : "passed",
      "time" : {
        "start" : 1623851770038,
        "stop" : 1623851776102,
        "duration" : 6064
      }
    }, {
      "uid" : "fbae023a251d4585",
      "status" : "passed",
      "time" : {
        "start" : 1623850644619,
        "stop" : 1623850650644,
        "duration" : 6025
      }
    }, {
      "uid" : "ddb9ffa6107f3280",
      "status" : "passed",
      "time" : {
        "start" : 1623849413408,
        "stop" : 1623849420652,
        "duration" : 7244
      }
    }, {
      "uid" : "819673f4f281c80a",
      "status" : "passed",
      "time" : {
        "start" : 1623764720581,
        "stop" : 1623764726438,
        "duration" : 5857
      }
    }, {
      "uid" : "ff5bb27e5dd5200e",
      "status" : "passed",
      "time" : {
        "start" : 1623700538359,
        "stop" : 1623700547080,
        "duration" : 8721
      }
    } ],
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "580887c994693c11.json",
  "parameterValues" : [ ]
}