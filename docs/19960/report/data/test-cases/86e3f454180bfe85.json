{
  "uid" : "86e3f454180bfe85",
  "name" : "Pinterest block",
  "fullName" : "Pinterest block",
  "historyId" : "bf919c5c1253559f0d007402decf47af",
  "time" : {
    "start" : 1624485186938,
    "stop" : 1624485193615,
    "duration" : 6677
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pinterest block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _pinterest.default.name(),\n        _pinterest.default.title()\n      );\n      const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n      await pinterestBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const pinId = _config.default.get(&quot;blocks.pinterest.pinId&quot;);\n\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a Pinterest block&quot;,\n    async () =&gt; {\n      const blockId = await blockEditor.insertBlock(\n        _pinterest.default.name(),\n        _pinterest.default.title()\n      );\n      const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n      await pinterestBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post with a Pinterest block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can assert that Pinterest block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "73c6413bcf653b74",
      "name" : "1624485179273_beforeAll___Free_blocks.webm",
      "source" : "73c6413bcf653b74.webm",
      "type" : "video/webm",
      "size" : 607218
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "44ad48b10762adf0",
      "name" : "1624485157185_beforeAll___ROOT_DESCRIBE_BLOCK.webm",
      "source" : "44ad48b10762adf0.webm",
      "type" : "video/webm",
      "size" : 333613
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pinterest block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _pinterest.default.name(),\n        _pinterest.default.title()\n      );\n      const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n      await pinterestBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "274efa4da93c969c",
      "name" : "1624485193464_Free_blocks___Pinterest_block.webm",
      "source" : "274efa4da93c969c.webm",
      "type" : "video/webm",
      "size" : 406889
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "55e70562578de82a",
      "status" : "passed",
      "time" : {
        "start" : 1624484372094,
        "stop" : 1624484379415,
        "duration" : 7321
      }
    }, {
      "uid" : "12d85e49843f2097",
      "status" : "passed",
      "time" : {
        "start" : 1624040519959,
        "stop" : 1624040527798,
        "duration" : 7839
      }
    }, {
      "uid" : "ba2dfa636c16f97b",
      "status" : "passed",
      "time" : {
        "start" : 1624038193881,
        "stop" : 1624038198581,
        "duration" : 4700
      }
    }, {
      "uid" : "e975b21503433a9d",
      "status" : "passed",
      "time" : {
        "start" : 1624031897390,
        "stop" : 1624031904052,
        "duration" : 6662
      }
    }, {
      "uid" : "8cea4c650fabd90",
      "status" : "passed",
      "time" : {
        "start" : 1624030289811,
        "stop" : 1624030296234,
        "duration" : 6423
      }
    }, {
      "uid" : "78914eb73cb1b353",
      "status" : "passed",
      "time" : {
        "start" : 1624028991176,
        "stop" : 1624028996365,
        "duration" : 5189
      }
    }, {
      "uid" : "19b5c7aaec7eead",
      "status" : "passed",
      "time" : {
        "start" : 1623870468939,
        "stop" : 1623870478455,
        "duration" : 9516
      }
    }, {
      "uid" : "44a6ded9e1266a0a",
      "status" : "passed",
      "time" : {
        "start" : 1623868768892,
        "stop" : 1623868775535,
        "duration" : 6643
      }
    }, {
      "uid" : "707a3ba9b178f1bd",
      "status" : "passed",
      "time" : {
        "start" : 1623851770038,
        "stop" : 1623851776102,
        "duration" : 6064
      }
    }, {
      "uid" : "33d2702181bb6fe",
      "status" : "passed",
      "time" : {
        "start" : 1623850644619,
        "stop" : 1623850650644,
        "duration" : 6025
      }
    }, {
      "uid" : "dae4afc30e32d6b2",
      "status" : "passed",
      "time" : {
        "start" : 1623849413408,
        "stop" : 1623849420652,
        "duration" : 7244
      }
    }, {
      "uid" : "b0201defeecd60e2",
      "status" : "passed",
      "time" : {
        "start" : 1623764720581,
        "stop" : 1623764726438,
        "duration" : 5857
      }
    }, {
      "uid" : "5e3364516b1a090f",
      "status" : "passed",
      "time" : {
        "start" : 1623700538359,
        "stop" : 1623700547080,
        "duration" : 8721
      }
    } ],
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "86e3f454180bfe85.json",
  "parameterValues" : [ ]
}