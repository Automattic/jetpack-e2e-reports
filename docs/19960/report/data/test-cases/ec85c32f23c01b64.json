{
  "uid" : "ec85c32f23c01b64",
  "name" : "WordAds block",
  "fullName" : "WordAds block",
  "historyId" : "18efccdb8f3fb33e445e77a8ef2cffa3",
  "time" : {
    "start" : 1624645322480,
    "stop" : 1624645328531,
    "duration" : 6051
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a WordAds block\",\n    async () => {\n      await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n      blockId = await blockEditor.insertBlock(\n        _wordAds.default.name(),\n        _wordAds.default.title()\n      );\n      await blockEditor.selectPostTitle();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can switch to Wide Skyscraper ad format\",\n    async () => {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that WordAds block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a WordAds block&quot;,\n    async () =&gt; {\n      await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n      blockId = await blockEditor.insertBlock(\n        _wordAds.default.name(),\n        _wordAds.default.title()\n      );\n      await blockEditor.selectPostTitle();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can switch to Wide Skyscraper ad format&quot;,\n    async () =&gt; {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that WordAds block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "4143356046715041",
      "name" : "1624645281955_beforeAll___Paid_blocks.webm",
      "source" : "4143356046715041.webm",
      "type" : "video/webm",
      "size" : 1257874
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "3d2966b9b398e5a5",
      "name" : "1624645240920_beforeAll___ROOT_DESCRIBE_BLOCK.webm",
      "source" : "3d2966b9b398e5a5.webm",
      "type" : "video/webm",
      "size" : 279001
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a WordAds block\",\n    async () => {\n      await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n      blockId = await blockEditor.insertBlock(\n        _wordAds.default.name(),\n        _wordAds.default.title()\n      );\n      await blockEditor.selectPostTitle();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can switch to Wide Skyscraper ad format\",\n    async () => {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that WordAds block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "97cbecd7744b6233",
      "name" : "1624645328187_Paid_blocks___WordAds_block.webm",
      "source" : "97cbecd7744b6233.webm",
      "type" : "video/webm",
      "size" : 214259
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "2dfab6d3ef429f76",
      "status" : "passed",
      "time" : {
        "start" : 1624543334951,
        "stop" : 1624543340009,
        "duration" : 5058
      }
    }, {
      "uid" : "d601b4a2c79495f5",
      "status" : "passed",
      "time" : {
        "start" : 1624485137702,
        "stop" : 1624485144086,
        "duration" : 6384
      }
    }, {
      "uid" : "2ebd73defe3f8aa5",
      "status" : "passed",
      "time" : {
        "start" : 1624484329371,
        "stop" : 1624484334263,
        "duration" : 4892
      }
    }, {
      "uid" : "d398c4a80409c9be",
      "status" : "passed",
      "time" : {
        "start" : 1624040466099,
        "stop" : 1624040472788,
        "duration" : 6689
      }
    }, {
      "uid" : "d73c18d2db89a180",
      "status" : "passed",
      "time" : {
        "start" : 1624038155952,
        "stop" : 1624038160444,
        "duration" : 4492
      }
    }, {
      "uid" : "8af45849d12710c5",
      "status" : "passed",
      "time" : {
        "start" : 1624031848384,
        "stop" : 1624031854318,
        "duration" : 5934
      }
    }, {
      "uid" : "edcd30face4f1cdb",
      "status" : "passed",
      "time" : {
        "start" : 1624030249973,
        "stop" : 1624030254298,
        "duration" : 4325
      }
    }, {
      "uid" : "d164cd1a628a2073",
      "status" : "passed",
      "time" : {
        "start" : 1624028954137,
        "stop" : 1624028958216,
        "duration" : 4079
      }
    }, {
      "uid" : "3404f37bf0bab801",
      "status" : "passed",
      "time" : {
        "start" : 1623870431241,
        "stop" : 1623870435515,
        "duration" : 4274
      }
    }, {
      "uid" : "53ec0719d2fe89d3",
      "status" : "passed",
      "time" : {
        "start" : 1623868724551,
        "stop" : 1623868730565,
        "duration" : 6014
      }
    }, {
      "uid" : "82771079566432ce",
      "status" : "passed",
      "time" : {
        "start" : 1623851733238,
        "stop" : 1623851737522,
        "duration" : 4284
      }
    }, {
      "uid" : "c210e055aa9a5009",
      "status" : "passed",
      "time" : {
        "start" : 1623850590443,
        "stop" : 1623850596037,
        "duration" : 5594
      }
    }, {
      "uid" : "99263eb4c2d05e90",
      "status" : "passed",
      "time" : {
        "start" : 1623849375920,
        "stop" : 1623849380073,
        "duration" : 4153
      }
    }, {
      "uid" : "766695d111c8bb15",
      "status" : "passed",
      "time" : {
        "start" : 1623764673471,
        "stop" : 1623764677657,
        "duration" : 4186
      }
    }, {
      "uid" : "55ac4caba8460f61",
      "status" : "passed",
      "time" : {
        "start" : 1623700485748,
        "stop" : 1623700491663,
        "duration" : 5915
      }
    } ],
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "ec85c32f23c01b64.json",
  "parameterValues" : [ ]
}