{
  "uid" : "48e45e512f362bf2",
  "name" : "Pinterest block",
  "fullName" : "Pinterest block",
  "historyId" : "bf919c5c1253559f0d007402decf47af",
  "time" : {
    "start" : 1630285342198,
    "stop" : 1630285350696,
    "duration" : 8498
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _reporter.testStep)(\"Add a Pinterest block\", async () => {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const pinId = _config.default.get(&quot;blocks.pinterest.pinId&quot;);\n\n  await (0, _reporter.testStep)(&quot;Add a Pinterest block&quot;, async () =&gt; {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    &quot;Publish a post with a Pinterest block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can assert that Pinterest block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1630285334308,
        "stop" : 1630285342194,
        "duration" : 7886
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1630285350849,
        "stop" : 1630285353734,
        "duration" : 2885
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _reporter.testStep)(\"Add a Pinterest block\", async () => {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Add a Pinterest block",
      "time" : {
        "start" : 1630285342302,
        "stop" : 1630285346182,
        "duration" : 3880
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Pinterest",
        "time" : {
          "start" : 1630285342303,
          "stop" : 1630285343806,
          "duration" : 1503
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: pinterest",
        "time" : {
          "start" : 1630285343807,
          "stop" : 1630285344217,
          "duration" : 410
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Publish a post with a Pinterest block",
      "time" : {
        "start" : 1630285346184,
        "stop" : 1630285349597,
        "duration" : 3413
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Publish post",
        "time" : {
          "start" : 1630285346338,
          "stop" : 1630285348127,
          "duration" : 1789
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "View post",
        "time" : {
          "start" : 1630285348129,
          "stop" : 1630285349597,
          "duration" : 1468
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Can assert that Pinterest block is rendered",
      "time" : {
        "start" : 1630285349600,
        "stop" : 1630285350678,
        "duration" : 1078
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 8,
        "unknown" : 0,
        "total" : 8
      },
      "items" : [ {
        "uid" : "fd8a84da99c64194",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20814/report/#testresult/fd8a84da99c64194",
        "status" : "passed",
        "time" : {
          "start" : 1630278641719,
          "stop" : 1630278651508,
          "duration" : 9789
        }
      }, {
        "uid" : "1b7a42c66320603e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20814/report/#testresult/1b7a42c66320603e",
        "status" : "passed",
        "time" : {
          "start" : 1630085658948,
          "stop" : 1630085667447,
          "duration" : 8499
        }
      }, {
        "uid" : "ad6610e4bbf49066",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20814/report/#testresult/ad6610e4bbf49066",
        "status" : "passed",
        "time" : {
          "start" : 1630073124359,
          "stop" : 1630073132791,
          "duration" : 8432
        }
      }, {
        "uid" : "3165b745506875a8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20814/report/#testresult/3165b745506875a8",
        "status" : "passed",
        "time" : {
          "start" : 1630059376875,
          "stop" : 1630059384274,
          "duration" : 7399
        }
      }, {
        "uid" : "5cfee860fe1b12fb",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20814/report/#testresult/5cfee860fe1b12fb",
        "status" : "passed",
        "time" : {
          "start" : 1630024039480,
          "stop" : 1630024047360,
          "duration" : 7880
        }
      }, {
        "uid" : "35caa06ec69e6000",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20814/report/#testresult/35caa06ec69e6000",
        "status" : "passed",
        "time" : {
          "start" : 1630009488316,
          "stop" : 1630009498181,
          "duration" : 9865
        }
      }, {
        "uid" : "22ed5b5b983039f6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20814/report/#testresult/22ed5b5b983039f6",
        "status" : "passed",
        "time" : {
          "start" : 1629895684893,
          "stop" : 1629895691705,
          "duration" : 6812
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "48e45e512f362bf2.json",
  "parameterValues" : [ ]
}