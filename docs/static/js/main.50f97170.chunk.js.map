{"version":3,"sources":["ReportsTable.js","App.js","index.js"],"names":["ReportsTable","props","updateSorting","sortBy","sortDirection","setState","state","Table","hover","size","variant","id","colSpan","className","renderTableHeader","this","renderTableData","React","Component","sortTable","direction","Data","reports","sort","r1","r2","name","sortAlphabetically","Date","parse","lastUpdate","sortByDate","statistic","failed","broken","sortByStatus","reportLink","report","metadata","isFailed","linkUrl","reportKey","reportTitle","pr_title","prNumber","pr","pr_number","branchUrl","branch","icon","faTimes","faCheck","href","target","rel","faCodeBranch","statusLabel","counts","map","label","count","Badge","metadataCell","runUrl","run_id","toLocaleString","total","passed","head","klass","Object","keys","key","index","Button","onClick","toUpperCase","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50f97170.chunk.js","sourcesContent":["import { Table, Badge, Button } from 'react-bootstrap';\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n\tfaCheck,\n\tfaCodeBranch,\n\tfaTimes,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport Data from './summary.json';\n\nexport default class ReportsTable extends React.Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.state = { sortBy: 'lastUpdate', sortDirection: false };\n\t}\n\n\tupdateSorting = ( sortBy, sortDirection ) =>\n\t\tthis.setState( { sortBy, sortDirection } );\n\n\trender() {\n\t\treturn (\n\t\t\t<Table hover size=\"sm\" variant=\"dark\" id=\"reportsTable\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th colSpan=\"3\">\n\t\t\t\t\t\t\t<h1 className={ 'display-4' }>\n\t\t\t\t\t\t\t\tJetpack e2e test reports\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th colSpan=\"3\" id={ 'sortButtons' }>\n\t\t\t\t\t\t\t{ renderTableHeader(\n\t\t\t\t\t\t\t\tthis.updateSorting,\n\t\t\t\t\t\t\t\tthis.state.sortBy,\n\t\t\t\t\t\t\t\tthis.state.sortDirection\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{ renderTableData(\n\t\t\t\t\t\tthis.state.sortBy,\n\t\t\t\t\t\tthis.state.sortDirection\n\t\t\t\t\t) }\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\t\t);\n\t}\n}\n\nfunction sortTable( sortBy, direction ) {\n\tswitch ( sortBy ) {\n\t\tcase 'name':\n\t\t\treturn sortAlphabetically( direction );\n\t\tcase 'lastUpdate':\n\t\t\treturn sortByDate( direction );\n\t\tcase 'statistic':\n\t\t\treturn sortByStatus( direction );\n\t}\n}\n\nfunction sortByDate( direction ) {\n\treturn Data.reports.sort( ( r1, r2 ) => {\n\t\tif ( direction ) {\n\t\t\treturn Date.parse( r1.lastUpdate ) - Date.parse( r2.lastUpdate );\n\t\t}\n\t\treturn Date.parse( r2.lastUpdate ) - Date.parse( r1.lastUpdate );\n\t} );\n}\n\nfunction sortAlphabetically( direction ) {\n\treturn Data.reports.sort( ( r1, r2 ) =>\n\t\tdirection ? r1.name - r2.name : r2.name - r1.name\n\t);\n}\n\nfunction sortByStatus( direction ) {\n\treturn Data.reports.sort( ( r1, r2 ) => {\n\t\tif ( direction ) {\n\t\t\treturn (\n\t\t\t\tr1.statistic.failed +\n\t\t\t\tr1.statistic.broken -\n\t\t\t\t( r2.statistic.failed + r2.statistic.broken )\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\tr2.statistic.failed +\n\t\t\tr2.statistic.broken -\n\t\t\t( r1.statistic.failed + r1.statistic.broken )\n\t\t);\n\t} );\n}\n\nfunction reportLink( report, metadata, isFailed ) {\n\tconst linkUrl = `https://automattic.github.io/jetpack-e2e-reports/${ report.name }/report/`;\n\n\tconst reportKey = report.name;\n\tlet reportTitle = report.name;\n\n\tif ( metadata.pr_title ) {\n\t\tlet prNumber = '';\n\t\tif ( metadata.pr ) {\n\t\t\tprNumber = `(#${ metadata.pr })`;\n\t\t} else if ( metadata.pr_number ) {\n\t\t\tprNumber = `(#${ metadata.pr_number })`;\n\t\t}\n\t\treportTitle = `${ metadata.pr_title } ${ prNumber }`;\n\t}\n\n\tconst branchUrl = `https://github.com/Automattic/jetpack/tree/${ metadata.branch }`;\n\n\treturn (\n\t\t<ul className={ 'list-unstyled' }>\n\t\t\t<li>\n\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\tclassName={ isFailed ? 'failed' : 'passed' }\n\t\t\t\t\ticon={ isFailed ? faTimes : faCheck }\n\t\t\t\t/>\n\t\t\t\t&nbsp;\n\t\t\t\t<a\n\t\t\t\t\thref={ linkUrl }\n\t\t\t\t\tclassName=\"report-link\"\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t>\n\t\t\t\t\t{ reportTitle }\n\t\t\t\t\t<br />\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<small>\n\t\t\t\t\t#{ reportKey } { ' â€¢ ' }\n\t\t\t\t\t<FontAwesomeIcon icon={ faCodeBranch } />{ ' ' }\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={ branchUrl }\n\t\t\t\t\t\ttarget={ '_blank' }\n\t\t\t\t\t\tclassName={ 'report-link' }\n\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ metadata.branch }\n\t\t\t\t\t</a>\n\t\t\t\t</small>\n\t\t\t</li>\n\t\t</ul>\n\t);\n}\n\nfunction statusLabel( statistic ) {\n\tconst counts = [ 'failed', 'passed', 'total' ].map( ( label, id ) => {\n\t\tconst count =\n\t\t\tlabel === 'failed'\n\t\t\t\t? statistic[ label ] + statistic.broken\n\t\t\t\t: statistic[ label ];\n\t\treturn (\n\t\t\t<Badge key={ id } className={ `label label-status-${ label }` }>\n\t\t\t\t{ label } { count }\n\t\t\t</Badge>\n\t\t);\n\t} );\n\n\treturn <div>{ counts }</div>;\n}\n\nfunction metadataCell( report ) {\n\tconst runUrl = `https://github.com/Automattic/jetpack/actions/runs/${ report.metadata.run_id }`;\n\treturn (\n\t\t<ul className={ 'list-unstyled' }>\n\t\t\t<li>\n\t\t\t\t<small>\n\t\t\t\t\tlast update:{ ' ' }\n\t\t\t\t\t{ new Date(\n\t\t\t\t\t\tDate.parse( report.lastUpdate )\n\t\t\t\t\t).toLocaleString() }\n\t\t\t\t</small>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<small>\n\t\t\t\t\tlast run id:{ ' ' }\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={ runUrl }\n\t\t\t\t\t\ttarget={ '_blank' }\n\t\t\t\t\t\tclassName={ 'report-link' }\n\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ report.metadata.run_id }\n\t\t\t\t\t</a>\n\t\t\t\t</small>\n\t\t\t</li>\n\t\t</ul>\n\t);\n}\n\nfunction renderTableData( sortBy, sortDirection ) {\n\tconst reports = sortTable( sortBy, sortDirection );\n\treturn reports.map( ( report, id ) => {\n\t\tconst { statistic, metadata } = report; //destructuring\n\t\tconst isFailed = statistic.total !== statistic.passed;\n\t\treturn (\n\t\t\t<tr key={ id }>\n\t\t\t\t<td>{ reportLink( report, metadata, isFailed ) }</td>\n\t\t\t\t<td>{ statusLabel( statistic ) }</td>\n\t\t\t\t<td>{ metadataCell( report ) }</td>\n\t\t\t</tr>\n\t\t);\n\t} );\n}\n\nfunction renderTableHeader( updateSorting, sortBy, sortDirection ) {\n\tconst head = {\n\t\tname: 'report id',\n\t\tstatistic: 'results',\n\t\tlastUpdate: 'most recent',\n\t};\n\n\tconst klass = sortDirection ? 'sort-by-asc' : 'sort-by-desc';\n\n\treturn Object.keys( head ).map( ( key, index ) => {\n\t\treturn (\n\t\t\t<Button\n\t\t\t\tvariant=\"dark\"\n\t\t\t\tkey={ index }\n\t\t\t\tonClick={ () => {\n\t\t\t\t\tupdateSorting( key, ! sortDirection );\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t{ head[ key ].toUpperCase() }\n\t\t\t\t<span className={ sortBy === key ? klass : '' } />\n\t\t\t</Button>\n\t\t);\n\t} );\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport ReportsTable from './ReportsTable';\n\nfunction reportsList() {\n\treturn (\n\t\t<div className=\"App-content\">\n\t\t\t<ReportsTable />\n\t\t</div>\n\t);\n}\n\nfunction header() {\n\treturn <header className=\"App-header\">&nbsp;</header>;\n}\n\nfunction footer() {\n\treturn <footer className=\"App-footer\">&nbsp;</footer>;\n}\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{ header() }\n\t\t\t{ reportsList() }\n\t\t\t{ footer() }\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById( 'root' )\n);\n"],"sourceRoot":""}