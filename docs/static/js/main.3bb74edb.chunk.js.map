{"version":3,"sources":["ReportsTable.js","App.js","index.js"],"names":["reportLink","report","str","linkUrl","name","isNaN","parseFloat","href","className","renderTableData","sortBy","sortDirection","Data","reports","sort","r1","r2","sortTable","map","id","lastUpdate","statistic","failed","passed","total","renderTableHeader","updateSorting","head","Object","keys","klass","key","index","onClick","replace","toUpperCase","ReportsTable","props","setState","state","Table","bordered","variant","this","sortingColName","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAKA,SAASA,EAAYC,GACpB,IA+FmBC,EA/FbC,EAAO,2DAAwDF,EAAOG,KAA/D,YAETA,EAAI,kBAAeH,EAAOG,MAI9B,MA0FoB,kBADDF,EA5FHD,EAAOG,OA+FpBC,MAAOH,IACPG,MAAOC,WAAYJ,MA/FrBE,EAAI,cAAWH,EAAOG,OAGtB,mBAAGG,KAAOJ,EAAUK,UAAU,WAA9B,SACGJ,IAiBL,SAASK,EAAiBC,EAAQC,GAEjC,OAdD,SAAoBD,GACnB,OAAOE,EAAKC,QAAQC,MAAM,SAAEC,EAAIC,GAC/B,OAAKD,EAAIL,GAAWM,EAAIN,IACf,EAEJK,EAAIL,GAAWM,EAAIN,GAChB,EAED,KAKQO,CAAWP,GACZQ,KAAK,SAAEjB,EAAQkB,GAC7B,IAAQC,EAA0BnB,EAA1BmB,WAAYC,EAAcpB,EAAdoB,UACpB,OACC,+BACC,6BAAMrB,EAAYC,KAClB,6BAAMmB,IACN,+BACC,sBAAMZ,UAAS,4BAAf,SACGa,EAAUC,SACJ,IACT,sBAAMd,UAAS,4BAAf,SACGa,EAAUE,SACJ,IACT,sBAAMf,UAAS,2BAAf,SACGa,EAAUG,aAXLL,MAmBb,SAASM,EAAmBC,EAAehB,EAAQC,GAClD,IAAMgB,EAAOC,OAAOC,KAAMjB,EAAKC,QAAS,IAElCiB,EAAQnB,EAAgB,cAAgB,eAC9C,OAAOgB,EAAKT,KAAK,SAAEa,EAAKC,GACvB,OACC,qBAECC,QAAU,WACTP,EAAeK,GAAOpB,IAHxB,UAMGoB,EAAIG,QAAS,qBAAsB,SAAUC,cAC/C,sBAAM3B,UAAYE,IAAWqB,EAAMD,EAAQ,OANrCE,M,IAYWI,E,kDACpB,WAAaC,GAAS,IAAD,8BACpB,cAAOA,IAIRX,cAAgB,SAAEhB,EAAQC,GAAV,OACf,EAAK2B,SAAU,CAAE5B,SAAQC,mBAJzB,EAAK4B,MAAQ,CAAE7B,OAAQ,OAAQC,eAAe,GAF1B,E,0CAQrB,WACC,OACC,eAAC6B,EAAA,EAAD,CAAOC,UAAQ,EAACC,QAAQ,OAAOvB,GAAG,eAAlC,UACC,gCACC,6BACGM,EACDkB,KAAKjB,cACLiB,KAAKJ,MAAM7B,OACXiC,KAAKJ,MAAM5B,mBAId,gCAASF,EAAiBkC,KAAKJ,MAAMK,yB,GArBCC,IAAMC,WC5CjCC,MAVf,WACC,OACC,sBAAKvC,UAAU,MAAf,UATM,wBAAQA,UAAU,aAAlB,4BAPN,qBAAKA,UAAU,cAAf,SACC,cAAC,EAAD,MAUK,wBAAQA,UAAU,aAAlB,gCCZRwC,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAgB,U","file":"static/js/main.3bb74edb.chunk.js","sourcesContent":["import { Table } from 'react-bootstrap';\nimport React from 'react';\n\nimport Data from './summary.json';\n\nfunction reportLink( report ) {\n\tconst linkUrl = `https://automattic.github.io/jetpack-e2e-reports/${ report.name }/report/`;\n\n\tlet name = `Branch: ${ report.name }`;\n\tif ( isNumeric( report.name ) ) {\n\t\tname = `PR #${ report.name }`;\n\t}\n\treturn (\n\t\t<a href={ linkUrl } className=\"App-link\">\n\t\t\t{ name }\n\t\t</a>\n\t);\n}\n\nfunction sortTable( sortBy ) {\n\treturn Data.reports.sort( ( r1, r2 ) => {\n\t\tif ( r1[ sortBy ] > r2[ sortBy ] ) {\n\t\t\treturn -1;\n\t\t}\n\t\tif ( r1[ sortBy ] < r2[ sortBy ] ) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t} );\n}\n\nfunction renderTableData( sortBy, sortDirection ) {\n\tconst reports = sortTable( sortBy, sortDirection );\n\treturn reports.map( ( report, id ) => {\n\t\tconst { lastUpdate, statistic } = report; //destructuring\n\t\treturn (\n\t\t\t<tr key={ id }>\n\t\t\t\t<td>{ reportLink( report ) }</td>\n\t\t\t\t<td>{ lastUpdate }</td>\n\t\t\t\t<td>\n\t\t\t\t\t<span className={ `label label-status-failed` }>\n\t\t\t\t\t\t{ statistic.failed }\n\t\t\t\t\t</span>{ ' ' }\n\t\t\t\t\t<span className={ `label label-status-passed` }>\n\t\t\t\t\t\t{ statistic.passed }\n\t\t\t\t\t</span>{ ' ' }\n\t\t\t\t\t<span className={ `label label-status-total` }>\n\t\t\t\t\t\t{ statistic.total }\n\t\t\t\t\t</span>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t);\n\t} );\n}\n\nfunction renderTableHeader( updateSorting, sortBy, sortDirection ) {\n\tconst head = Object.keys( Data.reports[ 0 ] );\n\n\tconst klass = sortDirection ? 'sort-by-asc' : 'sort-by-desc';\n\treturn head.map( ( key, index ) => {\n\t\treturn (\n\t\t\t<th\n\t\t\t\tkey={ index }\n\t\t\t\tonClick={ () => {\n\t\t\t\t\tupdateSorting( key, ! sortDirection );\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t{ key.replace( /([a-z0-9])([A-Z])/g, '$1 $2' ).toUpperCase() }\n\t\t\t\t<span className={ sortBy === key ? klass : '' } />\n\t\t\t</th>\n\t\t);\n\t} );\n}\n\nexport default class ReportsTable extends React.Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.state = { sortBy: 'name', sortDirection: true };\n\t}\n\n\tupdateSorting = ( sortBy, sortDirection ) =>\n\t\tthis.setState( { sortBy, sortDirection } );\n\n\trender() {\n\t\treturn (\n\t\t\t<Table bordered variant=\"dark\" id=\"reportsTable\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t{ renderTableHeader(\n\t\t\t\t\t\t\tthis.updateSorting,\n\t\t\t\t\t\t\tthis.state.sortBy,\n\t\t\t\t\t\t\tthis.state.sortDirection\n\t\t\t\t\t\t) }\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>{ renderTableData( this.state.sortingColName ) }</tbody>\n\t\t\t</Table>\n\t\t);\n\t}\n}\n\nfunction isNumeric( str ) {\n\tif ( typeof str !== 'string' ) return false; // we only process strings!\n\treturn (\n\t\t! isNaN( str ) && // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...\n\t\t! isNaN( parseFloat( str ) )\n\t); // ...and ensure strings of whitespace fail\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport ReportsTable from './ReportsTable';\n\nfunction reportsList() {\n\treturn (\n\t\t<div className=\"App-content\">\n\t\t\t<ReportsTable />\n\t\t</div>\n\t);\n}\n\nfunction header() {\n\treturn <header className=\"App-header\">This is header</header>;\n}\n\nfunction footer() {\n\treturn <footer className=\"App-footer\">This is footer</footer>;\n}\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{ header() }\n\t\t\t{ reportsList() }\n\t\t\t{ footer() }\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById( 'root' )\n);\n"],"sourceRoot":""}