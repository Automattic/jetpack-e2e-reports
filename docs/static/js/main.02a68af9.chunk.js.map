{"version":3,"sources":["components/ReportsTable.js","components/Reports.js","utils/fetch.js","components/Tests.js","components/Failures.js","utils/sort.js","components/Performance.js","App.js","index.js"],"names":["ReportsTable","state","reports","props","sort","by","isAsc","this","sortTable","setState","sortByName","sortByDate","sortByStatus","isSortAsc","r1","r2","Date","parse","lastUpdate","name","statistic","failed","broken","sortButtons","reportCount","head","klass","options","Object","keys","map","key","index","Button","variant","onClick","toUpperCase","className","length","colSpan","report","id","metadata","isFailed","total","passed","skipped","getReportLinkCell","getTestResultsCell","getMetadataCell","totalTests","linkUrl","reportKey","reportTitle","pr_title","prNumber","pr_number","branchUrl","branch","prUrl","statusIcon","faQuestion","statusClassName","faTimes","faCheck","icon","href","target","rel","ReactGA","pageview","faCodeBranch","counts","label","count","Badge","runUrl","run_id","moment","fromNow","Table","hover","responsive","size","getTableHeader","getReportRow","React","Component","Reports","pinnedReports","docsSize","undefined","reportsCount","isDataFetched","fetch","headers","Accept","then","response","json","jsonData","prReports","configData","permanent","includes","push","catch","console","log","fetchJsonData","url","a","ok","error","status","Tests","tests","daily","test","badges","classHide","rate","toFixed","isNaN","results","slice","result","classHasSource","source","replace","window","open","time","format","getTotalsBadges","getResultsLine","filter","t","b","totalTestResults","distinctTests","failedResults","forEach","failedRate","dailyStats","day","allDates","e","date","chartOptions","grid","left","right","dataZoom","type","startValue","endValue","tooltip","trigger","axisPointer","legend","textStyle","color","xAxis","data","yAxis","splitLine","lineStyle","min","axisLabel","formatter","series","yAxisIndex","symbol","symbolSize","stack","emphasis","focus","option","getTestContent","Failures","rawData","errorsData","weeklyData","errors","list","totalErrors","distinctErrors","weeks","isMasterOnly","isDataReady","setErrorsData","setWeeklyStatsData","prevProps","prevState","sortData","JSON","stringify","r","times","newest","Math","max","oldest","testsNames","Set","testName","resultsForTest","allErrors","flat","week","sortKey","desc","sorted","reverse","sortArray","badge","details","trace","getListOfTests","getListOfFailures","sortOptions","recent","common","htmlFor","onChange","checked","getSortButtons","getErrorContent","Performance","byDate","record","toISOString","split","percentage","baseAvg","reduce","acc","metric","base","jetpackAvg","entries","recArry","rec","round","values","chartData","prepareChartData","start","end","loaded","firstContentfulPaint","inserterOpen","initialize","App","basename","Container","fluid","Navbar","expand","Brand","Toggle","aria-controls","Collapse","Nav","activeKey","location","pathname","Link","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02a68af9.chunk.js","sourcesContent":["import { Table, Badge, Button } from 'react-bootstrap';\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n\tfaCheck,\n\tfaCodeBranch,\n\tfaQuestion,\n\tfaTimes,\n} from '@fortawesome/free-solid-svg-icons';\nimport ReactGA from 'react-ga';\nimport moment from 'moment';\n\nexport default class ReportsTable extends React.Component {\n\tstate = {\n\t\treports: this.props.reports,\n\t\tsort: { by: 'lastUpdate', isAsc: false },\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.sortTable( this.state.sort.by, this.state.sort.isAsc );\n\t}\n\n\tsortTable( by, isAsc ) {\n\t\tthis.setState( { sort: { by, isAsc } } );\n\n\t\tswitch ( by ) {\n\t\t\tcase 'name':\n\t\t\t\treturn this.sortByName( isAsc );\n\t\t\tcase 'lastUpdate':\n\t\t\t\treturn this.sortByDate( isAsc );\n\t\t\tcase 'statistic':\n\t\t\t\treturn this.sortByStatus( isAsc );\n\t\t}\n\t}\n\n\tsortByDate( isSortAsc ) {\n\t\treturn this.state.reports.sort( ( r1, r2 ) => {\n\t\t\tif ( isSortAsc ) {\n\t\t\t\treturn (\n\t\t\t\t\tDate.parse( r1.lastUpdate ) - Date.parse( r2.lastUpdate )\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn Date.parse( r2.lastUpdate ) - Date.parse( r1.lastUpdate );\n\t\t} );\n\t}\n\n\tsortByName( isSortAsc ) {\n\t\treturn this.state.reports.sort( ( r1, r2 ) =>\n\t\t\tisSortAsc ? r1.name - r2.name : r2.name - r1.name\n\t\t);\n\t}\n\n\tsortByStatus( isSortAsc ) {\n\t\treturn this.state.reports.sort( ( r1, r2 ) => {\n\t\t\tif ( isSortAsc ) {\n\t\t\t\treturn (\n\t\t\t\t\tr1.statistic.failed +\n\t\t\t\t\tr1.statistic.broken -\n\t\t\t\t\t( r2.statistic.failed + r2.statistic.broken )\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn (\n\t\t\t\tr2.statistic.failed +\n\t\t\t\tr2.statistic.broken -\n\t\t\t\t( r1.statistic.failed + r1.statistic.broken )\n\t\t\t);\n\t\t} );\n\t}\n\n\tgetTableHeader() {\n\t\tconst head = {\n\t\t\tname: 'report id',\n\t\t\tstatistic: 'no of failures',\n\t\t\tlastUpdate: 'most recent',\n\t\t};\n\n\t\tconst klass = this.state.sort.isAsc ? 'sort-by-asc' : 'sort-by-desc';\n\t\tlet sortButtons;\n\n\t\tif ( this.props.options.sortButtons ) {\n\t\t\tsortButtons = Object.keys( head ).map( ( key, index ) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"dark\"\n\t\t\t\t\t\tkey={ index }\n\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\tthis.sortTable( key, ! this.state.sort.isAsc );\n\t\t\t\t\t\t} }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ head[ key ].toUpperCase() }\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\tthis.state.sort.by === key ? klass : ''\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Button>\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\tlet reportCount;\n\t\tif ( this.props.reportCount ) {\n\t\t\treportCount = `${ this.state.reports.length } reports`;\n\t\t}\n\n\t\treturn (\n\t\t\t<thead>\n\t\t\t\t<tr className={ 'headerRow' }>\n\t\t\t\t\t<td colSpan=\"3\" className={ 'sort-buttons' }>\n\t\t\t\t\t\t<div className={ 'd-flex justify-content-between' }>\n\t\t\t\t\t\t\t<div>{ reportCount }</div>\n\t\t\t\t\t\t\t<div>{ sortButtons }</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t);\n\t}\n\n\tgetReportRow( report, id ) {\n\t\tconst { statistic, metadata } = report; //destructuring\n\t\tconst isFailed =\n\t\t\tstatistic.total !== statistic.passed + statistic.skipped;\n\t\treturn (\n\t\t\t<tr key={ id }>\n\t\t\t\t<td className={ 'reportNameCell' }>\n\t\t\t\t\t{ this.getReportLinkCell(\n\t\t\t\t\t\treport,\n\t\t\t\t\t\tmetadata,\n\t\t\t\t\t\tisFailed,\n\t\t\t\t\t\tstatistic.total\n\t\t\t\t\t) }\n\t\t\t\t</td>\n\t\t\t\t<td>{ this.getTestResultsCell( statistic ) }</td>\n\t\t\t\t<td>{ this.getMetadataCell( report ) }</td>\n\t\t\t</tr>\n\t\t);\n\t}\n\n\tgetReportLinkCell( report, metadata, isFailed, totalTests ) {\n\t\tconst linkUrl = `https://automattic.github.io/jetpack-e2e-reports/${ report.name }/report/`;\n\n\t\tconst reportKey = report.name;\n\t\tlet reportTitle = report.name;\n\n\t\tif ( metadata.pr_title ) {\n\t\t\tconst prNumber = `(#${ metadata.pr_number })`;\n\t\t\treportTitle = `${ metadata.pr_title } ${ prNumber }`;\n\t\t}\n\n\t\tconst branchUrl = `https://github.com/Automattic/jetpack/tree/${ metadata.branch }`;\n\t\tconst prUrl = `https://github.com/Automattic/jetpack/pull/${ metadata.pr_number }`;\n\n\t\tlet statusIcon = faQuestion;\n\t\tlet statusClassName = 'warning';\n\t\tif ( totalTests > 0 ) {\n\t\t\tstatusIcon = isFailed ? faTimes : faCheck;\n\t\t\tstatusClassName = isFailed ? 'failed' : 'passed';\n\t\t}\n\n\t\treturn (\n\t\t\t<ul className={ 'list-unstyled' }>\n\t\t\t\t<li>\n\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\tclassName={ statusClassName }\n\t\t\t\t\t\ticon={ statusIcon }\n\t\t\t\t\t/>\n\t\t\t\t\t&nbsp;\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={ linkUrl }\n\t\t\t\t\t\tclassName=\"report-link\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\tonClick={ () => ReactGA.pageview( '/' + report.name ) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ reportTitle }\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<small>\n\t\t\t\t\t\t#{ reportKey } { ' • ' }\n\t\t\t\t\t\t<FontAwesomeIcon icon={ faCodeBranch } />{ ' ' }\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={ branchUrl }\n\t\t\t\t\t\t\ttarget={ '_blank' }\n\t\t\t\t\t\t\tclassName={ 'report-link' }\n\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ metadata.branch }\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t{ metadata.pr_number ? ' • ' : '' }\n\t\t\t\t\t\t{ metadata.pr_number && (\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref={ prUrl }\n\t\t\t\t\t\t\t\ttarget={ '_blank' }\n\t\t\t\t\t\t\t\tclassName={ 'report-link' }\n\t\t\t\t\t\t\t\trel={ 'noreferrer' }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tPR { metadata.pr_number }\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</small>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t}\n\n\tgetTestResultsCell( statistic ) {\n\t\tconst counts = [ 'failed', 'passed', 'total' ].map( ( label, id ) => {\n\t\t\tconst count =\n\t\t\t\tlabel === 'failed'\n\t\t\t\t\t? statistic[ label ] + statistic.broken\n\t\t\t\t\t: statistic[ label ];\n\t\t\treturn (\n\t\t\t\t<Badge key={ id } className={ `label label-status-${ label }` }>\n\t\t\t\t\t{ label } { count }\n\t\t\t\t</Badge>\n\t\t\t);\n\t\t} );\n\n\t\treturn <div>{ counts }</div>;\n\t}\n\n\tgetMetadataCell( report ) {\n\t\tconst runUrl = `https://github.com/Automattic/jetpack/actions/runs/${ report.metadata.run_id }`;\n\t\treturn (\n\t\t\t<ul className={ 'list-unstyled' }>\n\t\t\t\t<li>\n\t\t\t\t\t<small>\n\t\t\t\t\t\tlast update: { moment( report.lastUpdate ).fromNow() }\n\t\t\t\t\t</small>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<small>\n\t\t\t\t\t\tlast run id:{ ' ' }\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={ runUrl }\n\t\t\t\t\t\t\ttarget={ '_blank' }\n\t\t\t\t\t\t\tclassName={ 'report-link' }\n\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ report.metadata.run_id }\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</small>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Table\n\t\t\t\thover\n\t\t\t\tresponsive=\"sm\"\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"dark\"\n\t\t\t\tclassName=\"reportsTable\"\n\t\t\t>\n\t\t\t\t{ this.getTableHeader() }\n\t\t\t\t<tbody>\n\t\t\t\t\t{ this.state.reports.map( ( report, id ) =>\n\t\t\t\t\t\tthis.getReportRow( report, id )\n\t\t\t\t\t) }\n\t\t\t\t</tbody>\n\t\t\t\t<tfoot>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colSpan={ 3 } />\n\t\t\t\t\t</tr>\n\t\t\t\t</tfoot>\n\t\t\t</Table>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport ReactGA from 'react-ga';\nimport configData from '../config.json';\nimport ReportsTable from './ReportsTable';\n\nexport default class Reports extends React.Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.state = {\n\t\t\treports: [],\n\t\t\tpinnedReports: [],\n\t\t\tdocsSize: undefined,\n\t\t\treportsCount: undefined,\n\t\t\tisDataFetched: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch( './data/reports.json', {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAccept: 'application/json',\n\t\t\t},\n\t\t} )\n\t\t\t.then( ( response ) => response.json() )\n\t\t\t.then( ( jsonData ) => {\n\t\t\t\tconst prReports = { reports: [] };\n\t\t\t\tconst pinnedReports = { reports: [] };\n\n\t\t\t\tfor ( const report of jsonData.reports ) {\n\t\t\t\t\tif ( configData.permanent.includes( report.name ) ) {\n\t\t\t\t\t\tpinnedReports.reports.push( report );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprReports.reports.push( report );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.setState( {\n\t\t\t\t\treports: prReports.reports,\n\t\t\t\t\tpinnedReports: pinnedReports.reports,\n\t\t\t\t\tdocsSize: jsonData.docsSize,\n\t\t\t\t\treportsCount: jsonData.reportsCount,\n\t\t\t\t\tisDataFetched: true,\n\t\t\t\t} );\n\t\t\t} )\n\t\t\t.catch( console.log );\n\t\tReactGA.pageview( '/reports' );\n\t}\n\n\trender() {\n\t\tif ( ! this.state.isDataFetched ) return null;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className={ 'reports-header' }>\n\t\t\t\t\t{ this.state.reportsCount } reports\n\t\t\t\t</div>\n\t\t\t\t<ReportsTable\n\t\t\t\t\treports={ this.state.pinnedReports }\n\t\t\t\t\toptions={ {\n\t\t\t\t\t\treportCount: false,\n\t\t\t\t\t\tsortButtons: false,\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t\t<ReportsTable\n\t\t\t\t\treports={ this.state.reports }\n\t\t\t\t\toptions={ {\n\t\t\t\t\t\treportCount: false,\n\t\t\t\t\t\tsortButtons: true,\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t\t<small className={ 'footnote' }>\n\t\t\t\t\tdocs size: { this.state.docsSize }\n\t\t\t\t</small>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","export async function fetchJsonData( url ) {\n\tconst response = await fetch( url );\n\tif ( ! response.ok ) {\n\t\tconsole.error(\n\t\t\t`Error fetching data from ${ url } ${ response.status }`\n\t\t);\n\t}\n\treturn await response.json();\n}\n","import React from 'react';\nimport { Badge } from 'react-bootstrap';\nimport ReactGA from 'react-ga';\nimport ReactEcharts from 'echarts-for-react';\nimport moment from 'moment';\nimport { fetchJsonData } from '../utils/fetch';\n\nexport default class Tests extends React.Component {\n\tstate = {\n\t\ttests: [],\n\t\tdaily: [],\n\t\tisDataFetched: false,\n\t};\n\n\tasync componentDidMount() {\n\t\tthis.setState( {\n\t\t\ttests: await fetchJsonData( './data/tests.json' ),\n\t\t\tdaily: await fetchJsonData( './data/daily.json' ),\n\t\t\tisDataFetched: true,\n\t\t} );\n\n\t\tReactGA.pageview( '/tests' );\n\t}\n\n\tgetTotalsBadges( test ) {\n\t\tconst badges = [ 'failed', 'passed', 'skipped', 'total' ].map(\n\t\t\t( label, id ) => {\n\t\t\t\tconst count = test[ label ];\n\n\t\t\t\t// hide statuses with no results\n\t\t\t\tconst classHide = count === 0 ? 'hide' : '';\n\n\t\t\t\tlet rate = (\n\t\t\t\t\t( count /\n\t\t\t\t\t\t( test.total -\n\t\t\t\t\t\t\t( label === 'skipped' ? 0 : test.skipped ) ) ) *\n\t\t\t\t\t100\n\t\t\t\t).toFixed( 1 );\n\n\t\t\t\tif ( label === 'total' ) {\n\t\t\t\t\trate = '';\n\t\t\t\t} else {\n\t\t\t\t\trate = isNaN( rate ) ? '' : `${ rate }%`;\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<li key={ id }>\n\t\t\t\t\t\t<Badge\n\t\t\t\t\t\t\tkey={ id }\n\t\t\t\t\t\t\tclassName={ `label label-fill label-status-${ label } ${ classHide }` }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ count } { label }\n\t\t\t\t\t\t\t<Badge className={ `badge-pill stat-pill` }>\n\t\t\t\t\t\t\t\t{ rate }\n\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t</Badge>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\n\t\treturn <ul className=\"list-unstyled\">{ badges }</ul>;\n\t}\n\n\tgetResultsLine( test ) {\n\t\tconst badges = test.results.slice( -500 ).map( ( result, id ) => {\n\t\t\tlet classHasSource = 'no-source';\n\t\t\tlet url;\n\n\t\t\tif ( result.source ) {\n\t\t\t\tclassHasSource = '';\n\t\t\t\turl = `${\n\t\t\t\t\tresult.report\n\t\t\t\t}/report/#testresult/${ result.source.replace( /.json/, '' ) }`;\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<Badge\n\t\t\t\t\tkey={ id }\n\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\tif ( url ) window.open( url, '_blank' );\n\t\t\t\t\t} }\n\t\t\t\t\tclassName={ `has-tooltip label label-small label-status-${ result.status } ${ classHasSource }` }\n\t\t\t\t>\n\t\t\t\t\t&nbsp;\n\t\t\t\t\t<span className=\"tooltip-content\">\n\t\t\t\t\t\t{ moment( result.time ).format( 'MMM Do, h:mm a' ) }\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t{ result.source }\n\t\t\t\t\t</span>\n\t\t\t\t</Badge>\n\t\t\t);\n\t\t} );\n\t\treturn <div>{ badges }</div>;\n\t}\n\n\tgetTestContent( test, id ) {\n\t\treturn (\n\t\t\t<div key={ id } className=\"test-container\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-sm-auto\">\n\t\t\t\t\t\t<h1>{ test.name }</h1>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-sm-auto\">\n\t\t\t\t\t\t{ this.getTotalsBadges( test ) }\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col\">{ this.getResultsLine( test ) }</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\tif ( ! this.state.isDataFetched ) return null;\n\n\t\t// process tests data\n\t\tconst tests = this.state.tests.tests;\n\t\tfor ( const test of tests ) {\n\t\t\ttest.total = 0;\n\t\t\tfor ( const status of [ 'passed', 'failed', 'skipped' ] ) {\n\t\t\t\ttest[ status ] = test.results.filter(\n\t\t\t\t\t( t ) => t.status === status\n\t\t\t\t).length;\n\t\t\t\ttest.total += test[ status ];\n\t\t\t}\n\n\t\t\ttest.results.sort( ( a, b ) => {\n\t\t\t\treturn a.time - b.time;\n\t\t\t} );\n\t\t}\n\n\t\tlet totalTestResults = 0;\n\t\tconst distinctTests = tests.length;\n\t\tlet failedResults = 0;\n\t\ttests.forEach( ( t ) => {\n\t\t\ttotalTestResults += t.total;\n\t\t\tfailedResults += t.failed;\n\t\t} );\n\t\tconst failedRate = ( failedResults / totalTestResults ).toFixed( 2 );\n\n\t\t// process daily stats data\n\t\tconst dailyStats = this.state.daily;\n\t\tdailyStats.forEach( ( day ) => {\n\t\t\tday.failedRate = ( day.failed / day.total ).toFixed( 2 );\n\t\t} );\n\n\t\t// sort( dailyStats, 'date' );\n\n\t\tconst allDates = dailyStats.map( function ( e ) {\n\t\t\treturn e.date;\n\t\t} );\n\n\t\t// chart options\n\t\tconst chartOptions = {\n\t\t\tgrid: {\n\t\t\t\tleft: 50,\n\t\t\t\tright: 50,\n\t\t\t},\n\t\t\tdataZoom: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'slider',\n\t\t\t\t\tstartValue: allDates[ allDates.length - 14 ],\n\t\t\t\t\tendValue: allDates[ allDates.length - 1 ],\n\t\t\t\t},\n\t\t\t],\n\t\t\ttooltip: {\n\t\t\t\ttrigger: 'axis',\n\t\t\t\taxisPointer: {\n\t\t\t\t\ttype: 'cross',\n\t\t\t\t},\n\t\t\t},\n\t\t\tlegend: {\n\t\t\t\ttextStyle: {\n\t\t\t\t\tcolor: '#6b6d76',\n\t\t\t\t},\n\t\t\t},\n\t\t\txAxis: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'category',\n\t\t\t\t\tdata: dailyStats.map( function ( e ) {\n\t\t\t\t\t\treturn e.date;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t],\n\t\t\tyAxis: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\ttype: 'dotted',\n\t\t\t\t\t\t\tcolor: '#6b6d76',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\ttype: 'dashed',\n\t\t\t\t\t\t\tcolor: 'rgba(107,109,118,0.47)',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmin: 0,\n\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\tformatter: '{value} %',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\tseries: [\n\t\t\t\t{\n\t\t\t\t\tname: 'failure rate',\n\t\t\t\t\ttype: 'line',\n\t\t\t\t\tyAxisIndex: 1,\n\t\t\t\t\tcolor: '#e38474',\n\t\t\t\t\tsymbol: 'roundRect',\n\t\t\t\t\tsymbolSize: 7,\n\t\t\t\t\tdata: dailyStats.map( function ( e ) {\n\t\t\t\t\t\treturn e.failedRate;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'passed tests',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\tstack: '1',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgba(115, 151, 75, 0.73)',\n\t\t\t\t\tdata: dailyStats.map( function ( e ) {\n\t\t\t\t\t\treturn e.passed;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'failed tests',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\tstack: '1',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgba(253, 90, 62, 0.71)',\n\t\t\t\t\tdata: dailyStats.map( function ( e ) {\n\t\t\t\t\t\treturn e.failed;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'skipped tests',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\tstack: '1',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgba(170, 170, 170, 0.73)',\n\t\t\t\t\tdata: dailyStats.map( function ( e ) {\n\t\t\t\t\t\treturn e.skipped;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"row text-center\">\n\t\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t\t<div className=\"stat-box\">\n\t\t\t\t\t\t\t<span className=\"stat-number\">\n\t\t\t\t\t\t\t\t{ distinctTests }\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<span className=\"stat-description\">tests</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t\t<div className=\"stat-box\">\n\t\t\t\t\t\t\t<span className=\"stat-number\">\n\t\t\t\t\t\t\t\t{ totalTestResults }\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<span className=\"stat-description\">results</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t\t<div className=\"stat-box\">\n\t\t\t\t\t\t\t<span className=\"stat-number\">\n\t\t\t\t\t\t\t\t{ failedResults }\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<span className=\"stat-description\">failures</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t\t<div className=\"stat-box\">\n\t\t\t\t\t\t\t<span className=\"stat-number\">{ failedRate }%</span>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<span className=\"stat-description\">\n\t\t\t\t\t\t\t\tfailure rate\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<hr />\n\t\t\t\t<ReactEcharts option={ chartOptions } />\n\t\t\t\t<hr />\n\t\t\t\t<div>\n\t\t\t\t\t{ tests.map( ( test, id ) =>\n\t\t\t\t\t\tthis.getTestContent( test, id )\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport ReactGA from 'react-ga';\nimport moment from 'moment';\nimport ReactEcharts from 'echarts-for-react';\nimport { Badge, Button } from 'react-bootstrap';\nimport { fetchJsonData } from '../utils/fetch';\nimport { sortArray } from '../utils/sort';\n\nexport default class Failures extends React.Component {\n\tstate = {\n\t\trawData: {\n\t\t\terrorsData: {},\n\t\t\tweeklyData: [],\n\t\t},\n\t\terrors: {\n\t\t\tlist: [],\n\t\t\ttotalErrors: 0,\n\t\t\tdistinctErrors: 0,\n\t\t},\n\t\tweeks: [],\n\t\tisMasterOnly: false,\n\t\tsort: { by: 'common', isAsc: false },\n\t\tisDataReady: false,\n\t};\n\n\tasync componentDidMount() {\n\t\tthis.setState( {\n\t\t\trawData: {\n\t\t\t\terrorsData: await fetchJsonData( './data/errors.json' ),\n\t\t\t\tweeklyData: await fetchJsonData( './data/weekly.json' ),\n\t\t\t},\n\t\t} );\n\n\t\tthis.setErrorsData();\n\t\tthis.setWeeklyStatsData();\n\n\t\tthis.setState( {\n\t\t\tisDataReady: true,\n\t\t} );\n\n\t\tReactGA.pageview( '/failures' );\n\t}\n\n\tcomponentDidUpdate( prevProps, prevState ) {\n\t\tif ( this.state.isMasterOnly !== prevState.isMasterOnly ) {\n\t\t\tthis.setErrorsData();\n\t\t}\n\n\t\tif ( this.state.sort !== prevState.sort ) {\n\t\t\tthis.sortData();\n\t\t}\n\t}\n\n\tsetErrorsData() {\n\t\t// make a copy of raw data errors object to process\n\t\t// wwe don't modify the original data\n\t\tlet errors = JSON.parse(\n\t\t\tJSON.stringify( this.state.rawData.errorsData.errors )\n\t\t);\n\n\t\tif ( this.state.isMasterOnly ) {\n\t\t\terrors.forEach( ( e ) => {\n\t\t\t\te.results = e.results.filter( ( r ) => r.report === 'master' );\n\t\t\t} );\n\t\t}\n\n\t\t// filter out errors with 0 occurrences\n\t\terrors = errors.filter( ( e ) => e.results.length > 0 );\n\n\t\t// calculate some stats for each error\n\t\tfor ( const error of errors ) {\n\t\t\terror.total = error.results.length;\n\t\t\tconst times = error.results.map( ( r ) => r.time );\n\t\t\terror.newest = Math.max( ...times );\n\t\t\terror.oldest = Math.min( ...times );\n\n\t\t\tconst testsNames = [\n\t\t\t\t...new Set( error.results.map( ( r ) => r.test ) ),\n\t\t\t];\n\n\t\t\terror.tests = [];\n\n\t\t\tfor ( const testName of testsNames ) {\n\t\t\t\tconst resultsForTest = error.results.filter(\n\t\t\t\t\t( r ) => r.test === testName\n\t\t\t\t);\n\n\t\t\t\terror.tests.push( {\n\t\t\t\t\tname: testName,\n\t\t\t\t\ttimes: resultsForTest.map( ( r ) => r.time ),\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\tconst allErrors = errors.map( ( e ) => e.results ).flat();\n\n\t\tthis.setState( {\n\t\t\terrors: {\n\t\t\t\tlist: errors,\n\t\t\t\tdistinctErrors: errors.length,\n\t\t\t\ttotalErrors: allErrors.length,\n\t\t\t},\n\t\t} );\n\n\t\tthis.sortData();\n\t}\n\n\tsortData() {\n\t\tswitch ( this.state.sort.by ) {\n\t\t\tcase 'recent':\n\t\t\t\tthis.state.errors.list.sort( ( a, b ) =>\n\t\t\t\t\tthis.state.sort.isAsc\n\t\t\t\t\t\t? b.newest - a.newest\n\t\t\t\t\t\t: a.newest - b.newest\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'common':\n\t\t\t\tconsole.log( 'sorting by common' );\n\t\t\t\tthis.state.errors.list.sort( ( a, b ) =>\n\t\t\t\t\tthis.state.sort.isAsc\n\t\t\t\t\t\t? a.results.length - b.results.length\n\t\t\t\t\t\t: b.results.length - a.results.length\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tsetWeeklyStatsData() {\n\t\t// make a copy of raw data object\n\t\t// we don't modify the original data\n\t\tconst weeks = JSON.parse(\n\t\t\tJSON.stringify( this.state.rawData.weeklyData )\n\t\t);\n\n\t\tweeks.forEach( ( week ) => {\n\t\t\tweek.failedRate = ( week.failed / week.total ).toFixed( 2 );\n\t\t} );\n\n\t\tsortArray( weeks, 'date' );\n\n\t\tthis.setState( { weeks } );\n\t}\n\n\tgetListOfTests( tests ) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{ tests.map( ( test, id ) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Badge\n\t\t\t\t\t\t\tkey={ id }\n\t\t\t\t\t\t\tclassName=\"label label-status-skipped\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ test.name }{ ' ' }\n\t\t\t\t\t\t\t<Badge className={ `badge-pill stat-pill` }>\n\t\t\t\t\t\t\t\t{ test.times.length }\n\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t</Badge>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\t\t\t</div>\n\t\t);\n\t}\n\n\tgetListOfFailures( results ) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{ results.map( ( result, id ) => {\n\t\t\t\t\tlet badge = moment( result.time ).format(\n\t\t\t\t\t\t'MMM Do, h:mm a'\n\t\t\t\t\t);\n\n\t\t\t\t\tlet className = 'no-source';\n\n\t\t\t\t\tif ( result.source ) {\n\t\t\t\t\t\tconst url = `${\n\t\t\t\t\t\t\tresult.report\n\t\t\t\t\t\t}/report/#testresult/${ result.source.replace(\n\t\t\t\t\t\t\t/.json/,\n\t\t\t\t\t\t\t''\n\t\t\t\t\t\t) }`;\n\t\t\t\t\t\tbadge = (\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref={ url }\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\tclassName=\"report-link\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ badge }\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tclassName = '';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tkey={ id }\n\t\t\t\t\t\t\tclassName={ `failure-link ${ className }` }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ badge }\n\t\t\t\t\t\t</span>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\t\t\t</div>\n\t\t);\n\t}\n\n\tgetErrorContent( error, id ) {\n\t\tlet details = `${ error.total } times, since ${ moment(\n\t\t\terror.oldest\n\t\t).fromNow() }. Last failed ${ moment( error.newest ).fromNow() }`;\n\n\t\tif ( error.total === 1 ) {\n\t\t\tdetails = `once, ${ moment( error.oldest ).fromNow() }`;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"error-container\" key={ id }>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<pre className=\"error-container-trace\">{ error.trace }</pre>\n\t\t\t\t\t<div>{ details }</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t{ this.getListOfTests( error.tests ) }\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t{ this.getListOfFailures( error.results ) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tgetSortButtons() {\n\t\tconst sortOptions = {\n\t\t\trecent: 'most recent',\n\t\t\tcommon: 'most common',\n\t\t};\n\n\t\tconst klass = this.state.sort.isAsc ? 'sort-by-asc' : 'sort-by-desc';\n\t\treturn Object.keys( sortOptions ).map( ( key, index ) => {\n\t\t\treturn (\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"dark\"\n\t\t\t\t\tkey={ index }\n\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\tthis.setState( {\n\t\t\t\t\t\t\tsort: { by: key, isAsc: ! this.state.sort.isAsc },\n\t\t\t\t\t\t} );\n\t\t\t\t\t} }\n\t\t\t\t>\n\t\t\t\t\t{ sortOptions[ key ].toUpperCase() }\n\t\t\t\t\t{\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\tthis.state.sort.by === key ? klass : ''\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t</Button>\n\t\t\t);\n\t\t} );\n\t}\n\n\tchartOptions() {\n\t\treturn {\n\t\t\tgrid: {\n\t\t\t\tleft: 50,\n\t\t\t\tright: 50,\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\ttrigger: 'axis',\n\t\t\t\taxisPointer: {\n\t\t\t\t\ttype: 'cross',\n\t\t\t\t},\n\t\t\t},\n\t\t\tlegend: {\n\t\t\t\ttextStyle: {\n\t\t\t\t\tcolor: '#6b6d76',\n\t\t\t\t},\n\t\t\t},\n\t\t\txAxis: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'category',\n\t\t\t\t\tdata: this.state.weeks.map( function ( e ) {\n\t\t\t\t\t\treturn e.date;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t],\n\t\t\tyAxis: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\ttype: 'dotted',\n\t\t\t\t\t\t\tcolor: '#6b6d76',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\ttype: 'dashed',\n\t\t\t\t\t\t\tcolor: '#6b6d76',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmin: 0,\n\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\tformatter: '{value} %',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\tseries: [\n\t\t\t\t{\n\t\t\t\t\tname: 'failure rate',\n\t\t\t\t\ttype: 'line',\n\t\t\t\t\tyAxisIndex: 1,\n\t\t\t\t\tcolor: '#e38474',\n\t\t\t\t\tsymbol: 'roundRect',\n\t\t\t\t\tsymbolSize: 7,\n\t\t\t\t\tdata: this.state.weeks.map( function ( e ) {\n\t\t\t\t\t\treturn e.failedRate;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'failed tests',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: '#fd5a3e',\n\t\t\t\t\tdata: this.state.weeks.map( function ( e ) {\n\t\t\t\t\t\treturn e.failed;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t}\n\n\trender() {\n\t\tif ( ! this.state.isDataReady ) return null;\n\n\t\tconst lastUpdate = moment(\n\t\t\tthis.state.rawData.errorsData.lastUpdate\n\t\t).fromNow();\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<ReactEcharts option={ this.chartOptions() } />\n\t\t\t\t<hr />\n\t\t\t\t<div className=\"row text-center\">\n\t\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t\t<div className=\"stat-box\">\n\t\t\t\t\t\t\t<span className=\"stat-number\">\n\t\t\t\t\t\t\t\t{ this.state.errors.totalErrors }\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<span className=\"stat-description\">\n\t\t\t\t\t\t\t\ttotal errors\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t\t<div className=\"stat-box\">\n\t\t\t\t\t\t\t<span className=\"stat-number\">\n\t\t\t\t\t\t\t\t{ this.state.errors.distinctErrors }\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<span className=\"stat-description\">\n\t\t\t\t\t\t\t\tdistinct errors\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<hr />\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-sm filters\">\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"only-master\"\n\t\t\t\t\t\t\tclassName=\"checkbox-container\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tonly master\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tid={ 'only-master' }\n\t\t\t\t\t\t\t\tonChange={ ( e ) =>\n\t\t\t\t\t\t\t\t\tthis.setState( {\n\t\t\t\t\t\t\t\t\t\tisMasterOnly: e.target.checked,\n\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span className=\"checkmark\" />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t{ /*<FormCheck*/ }\n\t\t\t\t\t\t{ /*\ttype={ 'checkbox' }*/ }\n\t\t\t\t\t\t{ /*\tid={ 'only-master' }*/ }\n\t\t\t\t\t\t{ /*\tlabel={ `only master` }*/ }\n\t\t\t\t\t\t{ /*\tonChange={ ( e ) =>*/ }\n\t\t\t\t\t\t{ /*\t\tthis.setState( {*/ }\n\t\t\t\t\t\t{ /*\t\t\tisMasterOnly: e.target.checked,*/ }\n\t\t\t\t\t\t{ /*\t\t} )*/ }\n\t\t\t\t\t\t{ /*\t}*/ }\n\t\t\t\t\t\t{ /*/>*/ }\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-md sort-buttons\">\n\t\t\t\t\t\t{ this.getSortButtons() }\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<hr />\n\t\t\t\t<div>\n\t\t\t\t\t{ this.state.errors.list.map( ( error, id ) =>\n\t\t\t\t\t\tthis.getErrorContent( error, id )\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"text-right col small\">\n\t\t\t\t\t\tupdated { lastUpdate }\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","export function sortArray( data, sortKey, desc = false ) {\n\tconst sorted = data.sort( ( a, b ) =>\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\ta[ sortKey ] > b[ sortKey ] ? 1 : b[ sortKey ] > a[ sortKey ] ? -1 : 0\n\t);\n\n\tif ( desc ) {\n\t\treturn sorted.reverse();\n\t}\n\n\treturn sorted;\n}\n","import React from 'react';\nimport ReactGA from 'react-ga';\n\nimport ReactEcharts from 'echarts-for-react';\n\nexport default class Performance extends React.Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.state = {\n\t\t\trawData: [],\n\t\t\tisDataFetched: false,\n\t\t};\n\t}\n\n\tprepareChartData( jsonData ) {\n\t\tconst result = {};\n\n\t\tconst calcPercent = ( base, comp ) => ( comp / base - 1 ) * 100;\n\n\t\tconst byDate = {};\n\t\tjsonData.forEach( ( record ) => {\n\t\t\tlet date = new Date( record.date );\n\t\t\tdate = date.toISOString().split( 'T' )[ 0 ];\n\t\t\tif ( ! byDate[ date ] ) {\n\t\t\t\tbyDate[ date ] = [];\n\t\t\t}\n\n\t\t\tconst percentage = Object.keys( record.baseAvg ).reduce(\n\t\t\t\t( acc, metric ) => {\n\t\t\t\t\tacc[ metric ] = calcPercent(\n\t\t\t\t\t\trecord.baseAvg[ metric ],\n\t\t\t\t\t\trecord.jetpackAvg[ metric ]\n\t\t\t\t\t);\n\t\t\t\t\treturn acc;\n\t\t\t\t},\n\t\t\t\t{}\n\t\t\t);\n\n\t\t\tbyDate[ date ].push( percentage );\n\t\t} );\n\n\t\tObject.entries( byDate ).forEach( ( [ date, recArry ] ) => {\n\t\t\tconst size = recArry.length;\n\t\t\tresult[ date ] = { date };\n\n\t\t\t// looping through all the keys, and calculating average for specific day\n\t\t\tObject.keys( recArry[ 0 ] ).forEach( ( metric ) => {\n\t\t\t\t// sum\n\t\t\t\tresult[ date ][ metric ] = recArry.reduce(\n\t\t\t\t\t( a, rec ) => a + rec[ metric ],\n\t\t\t\t\t0\n\t\t\t\t);\n\t\t\t\t// calculating average\n\t\t\t\tresult[ date ][ metric ] /= size;\n\t\t\t\t// rounding\n\t\t\t\tresult[ date ][ metric ] =\n\t\t\t\t\tMath.round( result[ date ][ metric ] * 100 ) / 100;\n\t\t\t} );\n\t\t} );\n\n\t\treturn Object.values( result );\n\t}\n\n\tasync componentDidMount() {\n\t\tawait fetch( './data/perf-metrics.json', {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAccept: 'application/json',\n\t\t\t},\n\t\t} )\n\t\t\t.then( ( response ) => response.json() )\n\t\t\t.then( ( jsonData ) => {\n\t\t\t\tthis.setState( {\n\t\t\t\t\trawData: jsonData,\n\t\t\t\t\tisDataFetched: true,\n\t\t\t\t} );\n\t\t\t} )\n\t\t\t.catch( console.log );\n\n\t\tReactGA.pageview( 'performance' );\n\t}\n\n\trender() {\n\t\tif ( ! this.state.isDataFetched ) return null;\n\n\t\tconst chartData = this.prepareChartData( this.state.rawData );\n\n\t\tconst chartOptions = {\n\t\t\tgrid: {\n\t\t\t\tleft: 40,\n\t\t\t\tright: 0,\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\ttrigger: 'axis',\n\t\t\t\taxisPointer: {\n\t\t\t\t\ttype: 'cross',\n\t\t\t\t},\n\t\t\t},\n\t\t\tlegend: {\n\t\t\t\ttextStyle: {\n\t\t\t\t\tcolor: '#6b6d76',\n\t\t\t\t},\n\t\t\t},\n\t\t\txAxis: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'category',\n\t\t\t\t\tdata: chartData.map( function ( e ) {\n\t\t\t\t\t\treturn e.date;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t],\n\t\t\tyAxis: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\ttype: 'dotted',\n\t\t\t\t\t\t\tcolor: '#6b6d76',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\ttype: 'dashed',\n\t\t\t\t\t\t\tcolor: 'rgba(107,109,118,0.47)',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmin: 0,\n\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\tformatter: '{value} %',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\tdataZoom: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'inside',\n\t\t\t\t\tstart: 70,\n\t\t\t\t\tend: 100,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tstart: 70,\n\t\t\t\t\tend: 100,\n\t\t\t\t},\n\t\t\t],\n\t\t\tseries: [\n\t\t\t\t{\n\t\t\t\t\tname: 'loaded',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgba(115, 151, 75, 0.73)',\n\t\t\t\t\tdata: chartData.map( function ( e ) {\n\t\t\t\t\t\treturn e.loaded;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'firstContentfulPaint',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgba(0,123,255,0.73)',\n\t\t\t\t\tdata: chartData.map( function ( e ) {\n\t\t\t\t\t\treturn e.firstContentfulPaint;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'type',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgba(253,90,62,0.71)',\n\t\t\t\t\tdata: chartData.map( function ( e ) {\n\t\t\t\t\t\treturn e.type;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'focus',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgb(107,109,118)',\n\t\t\t\t\tdata: chartData.map( function ( e ) {\n\t\t\t\t\t\treturn e.focus;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'inserterOpen',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgb(160,248,228)',\n\t\t\t\t\tdata: chartData.map( function ( e ) {\n\t\t\t\t\t\treturn e.inserterOpen;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h4>Performance metrics</h4>\n\t\t\t\t<ReactEcharts option={ chartOptions } />\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport ReactGA from 'react-ga';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Navbar, Container, Nav } from 'react-bootstrap';\nimport Reports from './components/Reports';\nimport { HashRouter, Route, Routes } from 'react-router-dom';\nimport Tests from './components/Tests';\nimport Failures from './components/Failures';\nimport Performance from './components/Performance';\n\nconst TRACKING_ID = 'UA-208890082-1';\nReactGA.initialize( TRACKING_ID );\n\nfunction App() {\n\tconst basename = '/jetpack-e2e-reports';\n\n\treturn (\n\t\t<Container fluid className=\"App\">\n\t\t\t<div className=\"App-content\">\n\t\t\t\t<Navbar variant=\"dark\" expand=\"md\" className=\"app-nav-bar\">\n\t\t\t\t\t<Container fluid className=\"app-nav-bar-inner-container\">\n\t\t\t\t\t\t<Navbar.Brand href={ `${ basename }/#/` }>\n\t\t\t\t\t\t\tJetpack test dashboard\n\t\t\t\t\t\t</Navbar.Brand>\n\t\t\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t\t\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t\t\t\t<Nav\n\t\t\t\t\t\t\t\tactiveKey={ location.pathname }\n\t\t\t\t\t\t\t\tclassName=\"ml-auto\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Nav.Link href={ `${ basename }/#/reports` }>\n\t\t\t\t\t\t\t\t\tReports\n\t\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t\t<Nav.Link href={ `${ basename }/#/tests` }>\n\t\t\t\t\t\t\t\t\tTests\n\t\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t\t<Nav.Link href={ `${ basename }/#/failures` }>\n\t\t\t\t\t\t\t\t\tFailures\n\t\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t\t<Nav.Link\n\t\t\t\t\t\t\t\t\thref={ `${ basename }/#/performance` }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tPerformance\n\t\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t</Nav>\n\t\t\t\t\t\t</Navbar.Collapse>\n\t\t\t\t\t</Container>\n\t\t\t\t</Navbar>\n\t\t\t\t<HashRouter>\n\t\t\t\t\t<Routes>\n\t\t\t\t\t\t<Route exact path=\"/\" element={ <Reports /> } />\n\t\t\t\t\t\t<Route exact path=\"/reports\" element={ <Reports /> } />\n\t\t\t\t\t\t<Route exact path=\"/tests\" element={ <Tests /> } />\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tpath=\"/failures\"\n\t\t\t\t\t\t\telement={ <Failures /> }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tpath=\"/performance\"\n\t\t\t\t\t\t\telement={ <Performance /> }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Routes>\n\t\t\t\t</HashRouter>\n\t\t\t</div>\n\t\t\t<footer className=\"App-footer\">\n\t\t\t\t<div>\n\t\t\t\t\t<a\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\thref=\"https://github.com/Automattic/jetpack-e2e-reports/\"\n\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t>\n\t\t\t\t\t\tCode\n\t\t\t\t\t</a>\n\t\t\t\t\t{ ' • ' }\n\t\t\t\t\t<a\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\thref=\"https://github.com/Automattic/jetpack-e2e-reports/actions\"\n\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t>\n\t\t\t\t\t\tActions\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</footer>\n\t\t</Container>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById( 'root' )\n);\n"],"sourceRoot":""}