{"version":3,"sources":["ReportsTable.js","Metrics.js","App.js","index.js"],"names":["ReportsTable","props","updateSorting","sortBy","isSortAsc","setState","state","data","reports","fetch","headers","Accept","then","response","json","jsonData","catch","console","log","this","sortAlphabetically","sortByDate","sortByStatus","sort","r1","r2","Date","parse","lastUpdate","name","statistic","failed","broken","report","metadata","isFailed","totalTests","linkUrl","reportKey","reportTitle","pr_title","prNumber","pr_number","branchUrl","branch","prUrl","statusIcon","faQuestion","statusClassName","faTimes","faCheck","className","icon","href","target","rel","faCodeBranch","counts","map","label","id","count","Badge","runUrl","run_id","toLocaleString","sortDirection","sortTable","total","passed","skipped","renderReportLink","renderResults","renderMetadataCell","head","klass","sortButtons","Object","keys","key","index","Button","variant","onClick","toUpperCase","reportsCount","Table","hover","responsive","size","docsSize","colSpan","renderTableHeader","renderTableData","React","Component","Metrics","stats","failedTests","statsChartData","result","forEach","record","date","time","start","toISOString","split","unknown","assign","values","parseStats","reduce","acc","stat","testCases","JSON","stringify","failureRate","test","fileName","error","statusMessage","statusTrace","substring","LineChart","width","height","margin","top","right","bottom","left","CartesianGrid","stroke","XAxis","dataKey","YAxis","Tooltip","Legend","Line","type","isAnimationActive","renderStatsSummary","renderSummaryChart","NavBar","activeNavbar","setActiveNavbar","Navbar","Brand","Toggle","aria-controls","Collapse","Nav","activeKey","Link","eventKey","onSelect","navbar","AppContent","Header","App","useState","Container","fluid","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f82d01bb.chunk.js","sourcesContent":["import { Table, Badge, Button } from 'react-bootstrap';\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n\tfaCheck,\n\tfaCodeBranch,\n\tfaQuestion,\n\tfaTimes,\n} from '@fortawesome/free-solid-svg-icons';\n\nexport default class ReportsTable extends React.Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.state = {\n\t\t\tdata: { reports: [] },\n\t\t\tsortBy: 'lastUpdate',\n\t\t\tisSortAsc: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch( './summary.json', {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAccept: 'application/json',\n\t\t\t},\n\t\t} )\n\t\t\t.then( ( response ) => response.json() )\n\t\t\t.then( ( jsonData ) => {\n\t\t\t\tthis.setState( { data: jsonData } );\n\t\t\t} )\n\t\t\t.catch( console.log );\n\t}\n\n\tupdateSorting = ( sortBy, isSortAsc ) =>\n\t\tthis.setState( { sortBy, isSortAsc } );\n\n\tsortTable( sortBy, isSortAsc ) {\n\t\tswitch ( sortBy ) {\n\t\t\tcase 'name':\n\t\t\t\treturn this.sortAlphabetically( isSortAsc );\n\t\t\tcase 'lastUpdate':\n\t\t\t\treturn this.sortByDate( isSortAsc );\n\t\t\tcase 'statistic':\n\t\t\t\treturn this.sortByStatus( isSortAsc );\n\t\t}\n\t}\n\n\tsortByDate( isSortAsc ) {\n\t\treturn this.state.data.reports.sort( ( r1, r2 ) => {\n\t\t\tif ( isSortAsc ) {\n\t\t\t\treturn (\n\t\t\t\t\tDate.parse( r1.lastUpdate ) - Date.parse( r2.lastUpdate )\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn Date.parse( r2.lastUpdate ) - Date.parse( r1.lastUpdate );\n\t\t} );\n\t}\n\n\tsortAlphabetically( isSortAsc ) {\n\t\treturn this.state.data.reports.sort( ( r1, r2 ) =>\n\t\t\tisSortAsc ? r1.name - r2.name : r2.name - r1.name\n\t\t);\n\t}\n\n\tsortByStatus( isSortAsc ) {\n\t\treturn this.state.data.reports.sort( ( r1, r2 ) => {\n\t\t\tif ( isSortAsc ) {\n\t\t\t\treturn (\n\t\t\t\t\tr1.statistic.failed +\n\t\t\t\t\tr1.statistic.broken -\n\t\t\t\t\t( r2.statistic.failed + r2.statistic.broken )\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn (\n\t\t\t\tr2.statistic.failed +\n\t\t\t\tr2.statistic.broken -\n\t\t\t\t( r1.statistic.failed + r1.statistic.broken )\n\t\t\t);\n\t\t} );\n\t}\n\n\trenderReportLink( report, metadata, isFailed, totalTests ) {\n\t\tconst linkUrl = `https://automattic.github.io/jetpack-e2e-reports/${ report.name }/report/`;\n\n\t\tconst reportKey = report.name;\n\t\tlet reportTitle = report.name;\n\n\t\tif ( metadata.pr_title ) {\n\t\t\tlet prNumber = '';\n\t\t\tprNumber = `(#${ metadata.pr_number })`;\n\t\t\treportTitle = `${ metadata.pr_title } ${ prNumber }`;\n\t\t}\n\n\t\tconst branchUrl = `https://github.com/Automattic/jetpack/tree/${ metadata.branch }`;\n\t\tconst prUrl = `https://github.com/Automattic/jetpack/pull/${ metadata.pr_number }`;\n\n\t\tlet statusIcon = faQuestion;\n\t\tlet statusClassName = 'warning';\n\t\tif ( totalTests > 0 ) {\n\t\t\tstatusIcon = isFailed ? faTimes : faCheck;\n\t\t\tstatusClassName = isFailed ? 'failed' : 'passed';\n\t\t}\n\n\t\treturn (\n\t\t\t<ul className={ 'list-unstyled' }>\n\t\t\t\t<li>\n\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\tclassName={ statusClassName }\n\t\t\t\t\t\ticon={ statusIcon }\n\t\t\t\t\t/>\n\t\t\t\t\t&nbsp;\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={ linkUrl }\n\t\t\t\t\t\tclassName=\"report-link\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ reportTitle }\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<small>\n\t\t\t\t\t\t#{ reportKey } { ' • ' }\n\t\t\t\t\t\t<FontAwesomeIcon icon={ faCodeBranch } />{ ' ' }\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={ branchUrl }\n\t\t\t\t\t\t\ttarget={ '_blank' }\n\t\t\t\t\t\t\tclassName={ 'report-link' }\n\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ metadata.branch }\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t{ metadata.pr_number ? ' • ' : '' }\n\t\t\t\t\t\t{ metadata.pr_number && (\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref={ prUrl }\n\t\t\t\t\t\t\t\ttarget={ '_blank' }\n\t\t\t\t\t\t\t\tclassName={ 'report-link' }\n\t\t\t\t\t\t\t\trel={ 'noreferrer' }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tPR { metadata.pr_number }\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</small>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t}\n\n\trenderResults( statistic ) {\n\t\tconst counts = [ 'failed', 'passed', 'total' ].map( ( label, id ) => {\n\t\t\tconst count =\n\t\t\t\tlabel === 'failed'\n\t\t\t\t\t? statistic[ label ] + statistic.broken\n\t\t\t\t\t: statistic[ label ];\n\t\t\treturn (\n\t\t\t\t<Badge key={ id } className={ `label label-status-${ label }` }>\n\t\t\t\t\t{ label } { count }\n\t\t\t\t</Badge>\n\t\t\t);\n\t\t} );\n\n\t\treturn <div>{ counts }</div>;\n\t}\n\n\trenderMetadataCell( report ) {\n\t\tconst runUrl = `https://github.com/Automattic/jetpack/actions/runs/${ report.metadata.run_id }`;\n\t\treturn (\n\t\t\t<ul className={ 'list-unstyled' }>\n\t\t\t\t<li>\n\t\t\t\t\t<small>\n\t\t\t\t\t\tlast update:{ ' ' }\n\t\t\t\t\t\t{ new Date(\n\t\t\t\t\t\t\tDate.parse( report.lastUpdate )\n\t\t\t\t\t\t).toLocaleString() }\n\t\t\t\t\t</small>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<small>\n\t\t\t\t\t\tlast run id:{ ' ' }\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={ runUrl }\n\t\t\t\t\t\t\ttarget={ '_blank' }\n\t\t\t\t\t\t\tclassName={ 'report-link' }\n\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ report.metadata.run_id }\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</small>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t}\n\n\trenderTableData( sortBy, sortDirection ) {\n\t\tconst reports = this.sortTable( sortBy, sortDirection );\n\t\treturn reports.map( ( report, id ) => {\n\t\t\tconst { statistic, metadata } = report; //destructuring\n\t\t\tconst isFailed =\n\t\t\t\tstatistic.total !== statistic.passed + statistic.skipped;\n\t\t\treturn (\n\t\t\t\t<tr key={ id }>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t{ this.renderReportLink(\n\t\t\t\t\t\t\treport,\n\t\t\t\t\t\t\tmetadata,\n\t\t\t\t\t\t\tisFailed,\n\t\t\t\t\t\t\tstatistic.total\n\t\t\t\t\t\t) }\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>{ this.renderResults( statistic ) }</td>\n\t\t\t\t\t<td>{ this.renderMetadataCell( report ) }</td>\n\t\t\t\t</tr>\n\t\t\t);\n\t\t} );\n\t}\n\n\trenderTableHeader( updateSorting, sortBy, sortDirection ) {\n\t\tconst head = {\n\t\t\tname: 'report id',\n\t\t\tstatistic: 'results',\n\t\t\tlastUpdate: 'most recent',\n\t\t};\n\n\t\tconst klass = sortDirection ? 'sort-by-asc' : 'sort-by-desc';\n\n\t\tconst sortButtons = Object.keys( head ).map( ( key, index ) => {\n\t\t\treturn (\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"dark\"\n\t\t\t\t\tkey={ index }\n\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\tupdateSorting( key, ! sortDirection );\n\t\t\t\t\t} }\n\t\t\t\t>\n\t\t\t\t\t{ head[ key ].toUpperCase() }\n\t\t\t\t\t<span className={ sortBy === key ? klass : '' } />\n\t\t\t\t</Button>\n\t\t\t);\n\t\t} );\n\n\t\treturn (\n\t\t\t<div className={ 'd-flex justify-content-between' }>\n\t\t\t\t<div>{ this.state.data.reportsCount } reports</div>\n\t\t\t\t<div>{ sortButtons }</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Table\n\t\t\t\thover\n\t\t\t\tresponsive=\"sm\"\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"dark\"\n\t\t\t\tid=\"reportsTable\"\n\t\t\t>\n\t\t\t\t<caption>\n\t\t\t\t\t<small>docs size: { this.state.data.docsSize }</small>\n\t\t\t\t</caption>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colSpan=\"3\" id={ 'sortButtons' }>\n\t\t\t\t\t\t\t{ this.renderTableHeader(\n\t\t\t\t\t\t\t\tthis.updateSorting,\n\t\t\t\t\t\t\t\tthis.state.sortBy,\n\t\t\t\t\t\t\t\tthis.state.isSortAsc\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{ this.renderTableData(\n\t\t\t\t\t\tthis.state.sortBy,\n\t\t\t\t\t\tthis.state.isSortAsc\n\t\t\t\t\t) }\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\t\t);\n\t}\n}\n","import React from 'react';\n\nimport {\n\tLineChart,\n\tLine,\n\tTooltip,\n\tCartesianGrid,\n\tXAxis,\n\tYAxis,\n\tLegend,\n} from 'recharts';\n\nexport default class Metrics extends React.Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.state = {\n\t\t\tdata: { reports: [] },\n\t\t\tsortBy: 'lastUpdate',\n\t\t\tisSortAsc: false,\n\t\t\tstats: [],\n\t\t\tfailedTests: [],\n\t\t\tstatsChartData: [],\n\t\t};\n\t}\n\n\tparseStats() {\n\t\tconst result = {};\n\n\t\tthis.state.stats.forEach( ( record ) => {\n\t\t\tconst dateObj = new Date( record.time.start );\n\t\t\tconst date = dateObj.toISOString().split( 'T' )[ 0 ];\n\n\t\t\tif ( ! result[ date ] ) {\n\t\t\t\tresult[ date ] = Object.assign( {}, record.statistic );\n\t\t\t\tresult[ date ].failed += record.statistic.broken;\n\n\t\t\t\tresult[ date ].date = date;\n\t\t\t} else {\n\t\t\t\tresult[ date ].failed +=\n\t\t\t\t\trecord.statistic.failed + record.statistic.broken;\n\t\t\t\tresult[ date ].skipped += record.statistic.skipped;\n\t\t\t\tresult[ date ].passed += record.statistic.passed;\n\t\t\t\tresult[ date ].unknown += record.statistic.unknown;\n\t\t\t\tresult[ date ].total += record.statistic.total;\n\t\t\t}\n\t\t} );\n\n\t\tthis.setState( { statsChartData: Object.values( result ) } );\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch( './metrics.json', {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAccept: 'application/json',\n\t\t\t},\n\t\t} )\n\t\t\t.then( ( response ) => response.json() )\n\t\t\t.then( ( jsonData ) => {\n\t\t\t\tthis.setState( { stats: jsonData.stats } );\n\t\t\t\tthis.setState( { failedTests: jsonData.failedTests } );\n\t\t\t\tthis.parseStats();\n\t\t\t} )\n\t\t\t.catch( console.log );\n\t}\n\n\trenderStatsSummary() {\n\t\tconst stats = this.state.stats.reduce(\n\t\t\t( acc, stat ) => {\n\t\t\t\tacc.failed += stat.statistic.failed + stat.statistic.broken;\n\t\t\t\tacc.testCases += stat.statistic.total;\n\t\t\t\tacc.total++;\n\t\t\t\treturn acc;\n\t\t\t},\n\t\t\t{ failed: 0, testCases: 0, total: 0 }\n\t\t);\n\t\tconsole.log( JSON.stringify( stats ) );\n\n\t\tconst failureRate = ( stats.failed / stats.testCases ) * 100;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>\n\t\t\t\t\tFailures: { failureRate }% Test case runs:{ ' ' }\n\t\t\t\t\t{ stats.testCases } Total runs: { stats.total }\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trenderFailedTests() {\n\t\tconst failedTests = this.state.failedTests;\n\t\treturn failedTests.map( ( test, id ) => (\n\t\t\t<div key={ id }>\n\t\t\t\t{ test.fileName } { test.name } { test.error.statusMessage }{ ' ' }\n\t\t\t\t{ test.error.statusTrace.substring( 20 ) }\n\t\t\t</div>\n\t\t) );\n\t}\n\n\trenderSummaryChart() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<LineChart\n\t\t\t\t\twidth={ 1200 }\n\t\t\t\t\theight={ 300 }\n\t\t\t\t\tdata={ this.state.statsChartData }\n\t\t\t\t\tmargin={ { top: 5, right: 60, bottom: 5, left: 60 } }\n\t\t\t\t>\n\t\t\t\t\t<CartesianGrid stroke=\"white\" />\n\t\t\t\t\t<XAxis dataKey=\"date\" stroke=\"white\" />\n\t\t\t\t\t<YAxis stroke=\"white\" />\n\t\t\t\t\t<Tooltip />\n\t\t\t\t\t<Legend />\n\t\t\t\t\t<Line\n\t\t\t\t\t\ttype=\"monotone\"\n\t\t\t\t\t\tdataKey=\"passed\"\n\t\t\t\t\t\tstroke=\"#8884d8\"\n\t\t\t\t\t\tisAnimationActive={ false }\n\t\t\t\t\t/>\n\t\t\t\t\t<Line\n\t\t\t\t\t\ttype=\"monotone\"\n\t\t\t\t\t\tdataKey=\"failed\"\n\t\t\t\t\t\tstroke=\"#82ca9d\"\n\t\t\t\t\t\tisAnimationActive={ false }\n\t\t\t\t\t/>\n\t\t\t\t</LineChart>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<span>METRICS</span>\n\t\t\t\t{ this.renderStatsSummary() }\n\t\t\t\t{ this.renderSummaryChart() }\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { useState } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport ReportsTable from './ReportsTable';\nimport { Navbar, Container, Nav } from 'react-bootstrap';\nimport Metrics from './Metrics';\n\nfunction NavBar( { activeNavbar, setActiveNavbar } ) {\n\treturn (\n\t\t<Navbar variant=\"dark\" className=\"App-nav\">\n\t\t\t<Navbar.Brand href=\"#\">Jetpack E2E Dashboard</Navbar.Brand>\n\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t<Nav className=\"me-auto\" activeKey={ activeNavbar }>\n\t\t\t\t\t<Nav.Link\n\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\teventKey=\"0\"\n\t\t\t\t\t\tonSelect={ ( navbar ) => setActiveNavbar( navbar ) }\n\t\t\t\t\t>\n\t\t\t\t\t\tRecent reports\n\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t<Nav.Link\n\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\teventKey=\"1\"\n\t\t\t\t\t\tonSelect={ ( navbar ) => setActiveNavbar( navbar ) }\n\t\t\t\t\t>\n\t\t\t\t\t\tMetrics\n\t\t\t\t\t</Nav.Link>\n\t\t\t\t</Nav>\n\t\t\t</Navbar.Collapse>\n\t\t</Navbar>\n\t);\n}\n\nfunction AppContent( { activeNavbar } ) {\n\tconsole.log( 'QQQQQQ', activeNavbar );\n\treturn (\n\t\t<div className=\"App-content\">\n\t\t\t{ activeNavbar === '0' ? <ReportsTable /> : <Metrics /> }\n\t\t</div>\n\t);\n}\n\nfunction Header( { activeNavbar, setActiveNavbar } ) {\n\treturn (\n\t\t<div>\n\t\t\t<header className=\"App-header\">&nbsp;</header>\n\t\t\t<NavBar\n\t\t\t\tactiveNavbar={ activeNavbar }\n\t\t\t\tsetActiveNavbar={ setActiveNavbar }\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nfunction footer() {\n\treturn (\n\t\t<footer className=\"App-footer\">\n\t\t\t<div>\n\t\t\t\t<a\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\thref=\"https://github.com/Automattic/jetpack-e2e-reports/\"\n\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t>\n\t\t\t\t\tCode\n\t\t\t\t</a>\n\t\t\t\t{ ' • ' }\n\t\t\t\t<a\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\thref=\"https://github.com/Automattic/jetpack-e2e-reports/actions\"\n\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t>\n\t\t\t\t\tActions\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</footer>\n\t);\n}\n\nfunction App() {\n\tconst [ activeNavbar, setActiveNavbar ] = useState( 0 );\n\n\treturn (\n\t\t<Container fluid className=\"App\">\n\t\t\t<Header\n\t\t\t\tactiveNavbar={ activeNavbar }\n\t\t\t\tsetActiveNavbar={ setActiveNavbar }\n\t\t\t/>\n\t\t\t<AppContent activeNavbar={ activeNavbar } />\n\t\t\t{ footer() }\n\t\t</Container>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById( 'root' )\n);\n"],"sourceRoot":""}