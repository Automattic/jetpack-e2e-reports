{"version":3,"sources":["components/ReportsTable.js","components/Reports.js","utils/fetch.js","utils/sort.js","components/BaseComponent.js","components/Tests.js","components/Failures.js","components/Performance.js","App.js","index.js"],"names":["ReportsTable","state","reports","props","sort","by","isAsc","this","sortTable","setState","sortByName","sortByDate","sortByStatus","isSortAsc","r1","r2","Date","parse","lastUpdate","name","statistic","failed","broken","sortButtons","reportCount","head","klass","options","Object","keys","map","key","index","Button","variant","onClick","toUpperCase","className","length","colSpan","report","id","metadata","isFailed","total","passed","skipped","getReportLinkCell","getTestResultsCell","getMetadataCell","totalTests","linkUrl","reportKey","reportTitle","pr_title","prNumber","pr_number","branchUrl","branch","prUrl","statusIcon","faQuestion","statusClassName","faTimes","faCheck","icon","href","target","rel","ReactGA","pageview","faCodeBranch","counts","label","count","Badge","runUrl","run_id","moment","fromNow","Table","hover","responsive","size","getTableHeader","getReportRow","React","Component","Reports","pinnedReports","docsSize","undefined","reportsCount","isDataFetched","fetch","headers","Accept","then","response","json","jsonData","prReports","configData","permanent","includes","push","catch","console","log","fetchJsonData","url","a","ok","error","status","sortArray","data","sortKey","desc","sorted","b","reverse","BaseComponent","sortOptions","currentSortStateBy","currentSortStateIsAsc","cssClass","sortData","filters","isMasterOnly","faCheckSquare","faSquare","dateFormat","getValidDate","controlId","fallbackValue","element","document","getElementById","value","InputGroup","e","setDatePickersValues","subtract","format","startDate","endDate","FormControl","type","max","onChange","endDateElement","minDate","setAttribute","start","end","Tests","rawData","testsData","dailyData","tests","list","distinctTests","totalTestResults","failedResults","failedRate","days","isDataReady","setTestsData","setDailyStatsData","prevProps","prevState","JSON","stringify","forEach","t","results","filter","r","time","isBetween","masterRuns","test","toFixed","d","date","day","grid","left","right","dataZoom","tooltip","trigger","axisPointer","legend","textStyle","color","xAxis","yAxis","splitLine","lineStyle","min","axisLabel","formatter","series","yAxisIndex","symbol","symbolSize","stack","emphasis","focus","badges","classHide","rate","isNaN","slice","result","classHasSource","source","replace","window","open","getTotalsBadges","getResultsLine","getFilterByDateFields","option","chartOptions","getMasterOnlyFilterButton","getSortButtons","getTestContent","Failures","errorsData","weeklyData","errors","totalErrors","distinctErrors","weeks","setErrorsData","setWeeklyStatsData","times","newest","Math","oldest","testsNames","Set","testName","resultsForTest","allErrors","flat","week","badge","details","trace","getListOfTests","getListOfFailures","recent","common","getErrorContent","Performance","byDate","record","toISOString","split","percentage","baseAvg","reduce","acc","metric","base","jetpackAvg","entries","recArry","rec","round","values","chartData","prepareChartData","loaded","firstContentfulPaint","inserterOpen","initialize","App","basename","Container","fluid","Navbar","expand","Brand","Toggle","aria-controls","Collapse","Nav","activeKey","location","pathname","Link","exact","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8a2d1ed0.chunk.js","sourcesContent":["import { Table, Badge, Button } from 'react-bootstrap';\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n\tfaCheck,\n\tfaCodeBranch,\n\tfaQuestion,\n\tfaTimes,\n} from '@fortawesome/free-solid-svg-icons';\nimport ReactGA from 'react-ga';\nimport moment from 'moment';\n\nexport default class ReportsTable extends React.Component {\n\tstate = {\n\t\treports: this.props.reports,\n\t\tsort: { by: 'lastUpdate', isAsc: false },\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.sortTable( this.state.sort.by, this.state.sort.isAsc );\n\t}\n\n\tsortTable( by, isAsc ) {\n\t\tthis.setState( { sort: { by, isAsc } } );\n\n\t\tswitch ( by ) {\n\t\t\tcase 'name':\n\t\t\t\treturn this.sortByName( isAsc );\n\t\t\tcase 'lastUpdate':\n\t\t\t\treturn this.sortByDate( isAsc );\n\t\t\tcase 'statistic':\n\t\t\t\treturn this.sortByStatus( isAsc );\n\t\t}\n\t}\n\n\tsortByDate( isSortAsc ) {\n\t\treturn this.state.reports.sort( ( r1, r2 ) => {\n\t\t\tif ( isSortAsc ) {\n\t\t\t\treturn (\n\t\t\t\t\tDate.parse( r1.lastUpdate ) - Date.parse( r2.lastUpdate )\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn Date.parse( r2.lastUpdate ) - Date.parse( r1.lastUpdate );\n\t\t} );\n\t}\n\n\tsortByName( isSortAsc ) {\n\t\treturn this.state.reports.sort( ( r1, r2 ) =>\n\t\t\tisSortAsc ? r1.name - r2.name : r2.name - r1.name\n\t\t);\n\t}\n\n\tsortByStatus( isSortAsc ) {\n\t\treturn this.state.reports.sort( ( r1, r2 ) => {\n\t\t\tif ( isSortAsc ) {\n\t\t\t\treturn (\n\t\t\t\t\tr1.statistic.failed +\n\t\t\t\t\tr1.statistic.broken -\n\t\t\t\t\t( r2.statistic.failed + r2.statistic.broken )\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn (\n\t\t\t\tr2.statistic.failed +\n\t\t\t\tr2.statistic.broken -\n\t\t\t\t( r1.statistic.failed + r1.statistic.broken )\n\t\t\t);\n\t\t} );\n\t}\n\n\tgetTableHeader() {\n\t\tconst head = {\n\t\t\tname: 'report id',\n\t\t\tstatistic: 'no of failures',\n\t\t\tlastUpdate: 'most recent',\n\t\t};\n\n\t\tconst klass = this.state.sort.isAsc ? 'sort-by-asc' : 'sort-by-desc';\n\t\tlet sortButtons;\n\n\t\tif ( this.props.options.sortButtons ) {\n\t\t\tsortButtons = Object.keys( head ).map( ( key, index ) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"dark\"\n\t\t\t\t\t\tkey={ index }\n\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\tthis.sortTable( key, ! this.state.sort.isAsc );\n\t\t\t\t\t\t} }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ head[ key ].toUpperCase() }\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\tthis.state.sort.by === key ? klass : ''\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Button>\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\tlet reportCount;\n\t\tif ( this.props.reportCount ) {\n\t\t\treportCount = `${ this.state.reports.length } reports`;\n\t\t}\n\n\t\treturn (\n\t\t\t<thead>\n\t\t\t\t<tr className={ 'headerRow' }>\n\t\t\t\t\t<td colSpan=\"3\" className={ 'sort-buttons' }>\n\t\t\t\t\t\t<div className={ 'd-flex justify-content-between' }>\n\t\t\t\t\t\t\t<div>{ reportCount }</div>\n\t\t\t\t\t\t\t<div>{ sortButtons }</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t);\n\t}\n\n\tgetReportRow( report, id ) {\n\t\tconst { statistic, metadata } = report; //destructuring\n\t\tconst isFailed =\n\t\t\tstatistic.total !== statistic.passed + statistic.skipped;\n\t\treturn (\n\t\t\t<tr key={ id }>\n\t\t\t\t<td className={ 'reportNameCell' }>\n\t\t\t\t\t{ this.getReportLinkCell(\n\t\t\t\t\t\treport,\n\t\t\t\t\t\tmetadata,\n\t\t\t\t\t\tisFailed,\n\t\t\t\t\t\tstatistic.total\n\t\t\t\t\t) }\n\t\t\t\t</td>\n\t\t\t\t<td>{ this.getTestResultsCell( statistic ) }</td>\n\t\t\t\t<td>{ this.getMetadataCell( report ) }</td>\n\t\t\t</tr>\n\t\t);\n\t}\n\n\tgetReportLinkCell( report, metadata, isFailed, totalTests ) {\n\t\tconst linkUrl = `https://automattic.github.io/jetpack-e2e-reports/${ report.name }/report/`;\n\n\t\tconst reportKey = report.name;\n\t\tlet reportTitle = report.name;\n\n\t\tif ( metadata.pr_title ) {\n\t\t\tconst prNumber = `(#${ metadata.pr_number })`;\n\t\t\treportTitle = `${ metadata.pr_title } ${ prNumber }`;\n\t\t}\n\n\t\tconst branchUrl = `https://github.com/Automattic/jetpack/tree/${ metadata.branch }`;\n\t\tconst prUrl = `https://github.com/Automattic/jetpack/pull/${ metadata.pr_number }`;\n\n\t\tlet statusIcon = faQuestion;\n\t\tlet statusClassName = 'warning';\n\t\tif ( totalTests > 0 ) {\n\t\t\tstatusIcon = isFailed ? faTimes : faCheck;\n\t\t\tstatusClassName = isFailed ? 'failed' : 'passed';\n\t\t}\n\n\t\treturn (\n\t\t\t<ul className={ 'list-unstyled' }>\n\t\t\t\t<li>\n\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\tclassName={ statusClassName }\n\t\t\t\t\t\ticon={ statusIcon }\n\t\t\t\t\t/>\n\t\t\t\t\t&nbsp;\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={ linkUrl }\n\t\t\t\t\t\tclassName=\"report-link\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\tonClick={ () => ReactGA.pageview( '/' + report.name ) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ reportTitle }\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<small>\n\t\t\t\t\t\t#{ reportKey } { ' • ' }\n\t\t\t\t\t\t<FontAwesomeIcon icon={ faCodeBranch } />{ ' ' }\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={ branchUrl }\n\t\t\t\t\t\t\ttarget={ '_blank' }\n\t\t\t\t\t\t\tclassName={ 'report-link' }\n\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ metadata.branch }\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t{ metadata.pr_number ? ' • ' : '' }\n\t\t\t\t\t\t{ metadata.pr_number && (\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref={ prUrl }\n\t\t\t\t\t\t\t\ttarget={ '_blank' }\n\t\t\t\t\t\t\t\tclassName={ 'report-link' }\n\t\t\t\t\t\t\t\trel={ 'noreferrer' }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tPR { metadata.pr_number }\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</small>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t}\n\n\tgetTestResultsCell( statistic ) {\n\t\tconst counts = [ 'failed', 'passed', 'total' ].map( ( label, id ) => {\n\t\t\tconst count =\n\t\t\t\tlabel === 'failed'\n\t\t\t\t\t? statistic[ label ] + statistic.broken\n\t\t\t\t\t: statistic[ label ];\n\t\t\treturn (\n\t\t\t\t<Badge key={ id } className={ `label label-status-${ label }` }>\n\t\t\t\t\t{ label } { count }\n\t\t\t\t</Badge>\n\t\t\t);\n\t\t} );\n\n\t\treturn <div>{ counts }</div>;\n\t}\n\n\tgetMetadataCell( report ) {\n\t\tconst runUrl = `https://github.com/Automattic/jetpack/actions/runs/${ report.metadata.run_id }`;\n\t\treturn (\n\t\t\t<ul className={ 'list-unstyled' }>\n\t\t\t\t<li>\n\t\t\t\t\t<small>\n\t\t\t\t\t\tlast update: { moment( report.lastUpdate ).fromNow() }\n\t\t\t\t\t</small>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<small>\n\t\t\t\t\t\tlast run id:{ ' ' }\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={ runUrl }\n\t\t\t\t\t\t\ttarget={ '_blank' }\n\t\t\t\t\t\t\tclassName={ 'report-link' }\n\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ report.metadata.run_id }\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</small>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Table\n\t\t\t\thover\n\t\t\t\tresponsive=\"sm\"\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"dark\"\n\t\t\t\tclassName=\"reportsTable\"\n\t\t\t>\n\t\t\t\t{ this.getTableHeader() }\n\t\t\t\t<tbody>\n\t\t\t\t\t{ this.state.reports.map( ( report, id ) =>\n\t\t\t\t\t\tthis.getReportRow( report, id )\n\t\t\t\t\t) }\n\t\t\t\t</tbody>\n\t\t\t\t<tfoot>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colSpan={ 3 } />\n\t\t\t\t\t</tr>\n\t\t\t\t</tfoot>\n\t\t\t</Table>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport ReactGA from 'react-ga';\nimport configData from '../config.json';\nimport ReportsTable from './ReportsTable';\n\nexport default class Reports extends React.Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.state = {\n\t\t\treports: [],\n\t\t\tpinnedReports: [],\n\t\t\tdocsSize: undefined,\n\t\t\treportsCount: undefined,\n\t\t\tisDataFetched: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch( './data/reports.json', {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAccept: 'application/json',\n\t\t\t},\n\t\t} )\n\t\t\t.then( ( response ) => response.json() )\n\t\t\t.then( ( jsonData ) => {\n\t\t\t\tconst prReports = { reports: [] };\n\t\t\t\tconst pinnedReports = { reports: [] };\n\n\t\t\t\tfor ( const report of jsonData.reports ) {\n\t\t\t\t\tif ( configData.permanent.includes( report.name ) ) {\n\t\t\t\t\t\tpinnedReports.reports.push( report );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprReports.reports.push( report );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.setState( {\n\t\t\t\t\treports: prReports.reports,\n\t\t\t\t\tpinnedReports: pinnedReports.reports,\n\t\t\t\t\tdocsSize: jsonData.docsSize,\n\t\t\t\t\treportsCount: jsonData.reportsCount,\n\t\t\t\t\tisDataFetched: true,\n\t\t\t\t} );\n\t\t\t} )\n\t\t\t.catch( console.log );\n\t\tReactGA.pageview( '/reports' );\n\t}\n\n\trender() {\n\t\tif ( ! this.state.isDataFetched ) return null;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className={ 'reports-header' }>\n\t\t\t\t\t{ this.state.reportsCount } reports\n\t\t\t\t</div>\n\t\t\t\t<ReportsTable\n\t\t\t\t\treports={ this.state.pinnedReports }\n\t\t\t\t\toptions={ {\n\t\t\t\t\t\treportCount: false,\n\t\t\t\t\t\tsortButtons: false,\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t\t<ReportsTable\n\t\t\t\t\treports={ this.state.reports }\n\t\t\t\t\toptions={ {\n\t\t\t\t\t\treportCount: false,\n\t\t\t\t\t\tsortButtons: true,\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t\t<small className={ 'footnote' }>\n\t\t\t\t\tdocs size: { this.state.docsSize }\n\t\t\t\t</small>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","export async function fetchJsonData( url ) {\n\tconst response = await fetch( url );\n\tif ( ! response.ok ) {\n\t\tconsole.error(\n\t\t\t`Error fetching data from ${ url } ${ response.status }`\n\t\t);\n\t}\n\treturn await response.json();\n}\n","export function sortArray( data, sortKey, desc = false ) {\n\tconst sorted = data.sort( ( a, b ) =>\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\ta[ sortKey ] > b[ sortKey ] ? 1 : b[ sortKey ] > a[ sortKey ] ? -1 : 0\n\t);\n\n\tif ( desc ) {\n\t\treturn sorted.reverse();\n\t}\n\n\treturn sorted;\n}\n","import React from 'react';\nimport { Button, FormControl, InputGroup } from 'react-bootstrap';\nimport { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport moment from 'moment';\n\nexport default class BaseComponent extends React.Component {\n\tgetSortButtons( sortOptions, currentSortStateBy, currentSortStateIsAsc ) {\n\t\tconst cssClass = currentSortStateIsAsc ? 'sort-by-asc' : 'sort-by-desc';\n\n\t\treturn Object.keys( sortOptions ).map( ( key, index ) => {\n\t\t\treturn (\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"dark\"\n\t\t\t\t\tkey={ index }\n\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\tthis.sortData( key, ! currentSortStateIsAsc );\n\t\t\t\t\t} }\n\t\t\t\t>\n\t\t\t\t\t{ sortOptions[ key ].toUpperCase() }\n\t\t\t\t\t{\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\tcurrentSortStateBy === key ? cssClass : ''\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t</Button>\n\t\t\t);\n\t\t} );\n\t}\n\n\tgetMasterOnlyFilterButton() {\n\t\tconst icon = this.state.filters.isMasterOnly ? faCheckSquare : faSquare;\n\n\t\treturn (\n\t\t\t<Button\n\t\t\t\tvariant=\"dark\"\n\t\t\t\tclassName=\"filter-btn\"\n\t\t\t\tonClick={ () => {\n\t\t\t\t\tthis.setState( {\n\t\t\t\t\t\tfilters: { isMasterOnly: ! this.state.filters.isMasterOnly },\n\t\t\t\t\t} );\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t<FontAwesomeIcon icon={ icon } /> master only\n\t\t\t</Button>\n\t\t);\n\t}\n\n\tgetFilterByDateFields() {\n\t\tconst dateFormat = 'YYYY-MM-DD';\n\n\t\tfunction getValidDate( controlId, fallbackValue ) {\n\t\t\tconst element = document.getElementById( controlId );\n\t\t\treturn element.value ? element.value : fallbackValue;\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"col filters\">\n\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t{ [ [ 'today', 0 ], [ 'last week', 7 ], [ 'last 2 weeks', 14 ] ].map( ( e, index ) =>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tkey={ index }\n\t\t\t\t\t\t\t\tvariant=\"dark\"\n\t\t\t\t\t\t\t\tclassName=\"filter-btn\"\n\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\tthis.setDatePickersValues( moment().subtract( e[ 1 ], 'd' ).format( dateFormat ), moment().format( dateFormat ) );\n\t\t\t\t\t\t\t\t\tthis.setState( {\n\t\t\t\t\t\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\t\t\t\t\tstartDate: getValidDate( 'startDate', '1970-01-01' ),\n\t\t\t\t\t\t\t\t\t\t\tendDate: getValidDate( 'endDate', moment().format( dateFormat ) ),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t>{ e[ 0 ] }</Button>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t<FormControl type=\"date\" id=\"startDate\"\n\t\t\t\t\t\t\tmax={ moment().format( dateFormat ) }\n\t\t\t\t\t\t\tonChange={ () => {\n\t\t\t\t\t\t\t\tconst endDateElement = document.getElementById( 'endDate' );\n\t\t\t\t\t\t\t\tconst minDate = getValidDate( 'startDate', '1970-01-01' );\n\t\t\t\t\t\t\t\tendDateElement.setAttribute( 'min', minDate );\n\t\t\t\t\t\t\t\tif ( moment( endDateElement.value ).format( dateFormat ) < moment( minDate ).format( dateFormat ) ) {\n\t\t\t\t\t\t\t\t\tendDateElement.value = minDate;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormControl type=\"date\" id=\"endDate\"\n\t\t\t\t\t\t\tmax={ moment().format( 'YYYY-MM-DD' ) } />\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"dark\"\n\t\t\t\t\t\t\tclassName=\"filter-btn\"\n\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\tthis.setState( {\n\t\t\t\t\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\t\t\t\tstartDate: getValidDate( 'startDate', '1970-01-01' ),\n\t\t\t\t\t\t\t\t\t\tendDate: getValidDate( 'endDate', moment().format( dateFormat ) ),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t>Apply</Button>\n\t\t\t\t\t</InputGroup>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tsetDatePickersValues( start, end ) {\n\t\tconst startDate = document.getElementById( 'startDate' );\n\t\tconst endDate = document.getElementById( 'endDate' );\n\t\tstartDate.value = start;\n\t\tendDate.value = end;\n\t}\n}\n","import React from 'react';\nimport { Badge } from 'react-bootstrap';\nimport ReactGA from 'react-ga';\nimport ReactEcharts from 'echarts-for-react';\nimport moment from 'moment';\nimport { fetchJsonData } from '../utils/fetch';\nimport { sortArray } from '../utils/sort';\nimport { masterRuns } from '../config.json';\nimport BaseComponent from './BaseComponent';\n\nexport default class Tests extends BaseComponent {\n\tstate = {\n\t\trawData: {\n\t\t\ttestsData: {},\n\t\t\tdailyData: [],\n\t\t},\n\t\ttests: {\n\t\t\tlist: [],\n\t\t\tdistinctTests: 0,\n\t\t\ttotalTestResults: 0,\n\t\t\tfailedResults: 0,\n\t\t\tfailedRate: 0,\n\t\t},\n\t\tdays: [],\n\t\tfilters: { isMasterOnly: false, startDate: moment().subtract( 14, 'd' ).format( 'YYYY-MM-DD' ), endDate: moment().format( 'YYYY-MM-DD' ) },\n\t\tsort: { by: 'total', isAsc: false },\n\t\tisDataReady: false,\n\t};\n\n\tasync componentDidMount() {\n\t\tthis.setState( {\n\t\t\trawData: {\n\t\t\t\ttestsData: await fetchJsonData( './data/tests.json' ),\n\t\t\t\tdailyData: await fetchJsonData( './data/daily.json' ),\n\t\t\t},\n\t\t} );\n\n\t\tthis.setTestsData();\n\t\tthis.setDailyStatsData();\n\n\t\tthis.setState( {\n\t\t\tisDataReady: true,\n\t\t} );\n\n\t\tthis.setDatePickersValues( this.state.filters.startDate, this.state.filters.endDate );\n\t\tReactGA.pageview( '/tests' );\n\t}\n\n\tcomponentDidUpdate( prevProps, prevState ) {\n\t\tif ( this.state.filters !== prevState.filters ) {\n\t\t\tthis.setTestsData();\n\t\t\tthis.setDailyStatsData();\n\t\t}\n\n\t\tif ( this.state.tests.list !== prevState.tests.list ) {\n\t\t\tthis.sortData( this.state.sort.by, this.state.sort.isAsc );\n\t\t}\n\t}\n\n\tsetTestsData() {\n\t\t// make a copy of raw data object to process\n\t\t// wwe don't modify the original data\n\t\tlet tests = JSON.parse(\n\t\t\tJSON.stringify( this.state.rawData.testsData.tests )\n\t\t);\n\n\t\tif ( this.state.filters.startDate && this.state.filters.endDate ) {\n\t\t\ttests.forEach( ( t ) => {\n\t\t\t\tt.results = t.results.filter( ( r ) =>\n\t\t\t\t\tmoment( r.time ).isBetween( moment( this.state.filters.startDate, 'YYYY-MM-DD' ), moment( this.state.filters.endDate, 'YYYY-MM-DD' ), 'd', '[]' )\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\tif ( this.state.filters.isMasterOnly ) {\n\t\t\ttests.forEach( ( t ) => {\n\t\t\t\tt.results = t.results.filter( ( r ) =>\n\t\t\t\t\tmasterRuns.includes( r.report )\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\t// filter out tests with 0 results\n\t\ttests = tests.filter( ( e ) => e.results.length > 0 );\n\n\t\tfor ( const test of tests ) {\n\t\t\ttest.total = 0;\n\t\t\tfor ( const status of [ 'passed', 'failed', 'skipped' ] ) {\n\t\t\t\ttest[ status ] = test.results.filter(\n\t\t\t\t\t( t ) => t.status === status\n\t\t\t\t).length;\n\t\t\t\ttest.total += test[ status ];\n\t\t\t}\n\n\t\t\ttest.results.sort( ( a, b ) => {\n\t\t\t\treturn a.time - b.time;\n\t\t\t} );\n\t\t}\n\n\t\tlet totalTestResults = 0;\n\t\tlet failedResults = 0;\n\t\ttests.forEach( ( t ) => {\n\t\t\ttotalTestResults += t.total;\n\t\t\tfailedResults += t.failed;\n\t\t} );\n\t\tconst failedRate = ( failedResults / totalTestResults ).toFixed( 2 );\n\n\t\tthis.setState( {\n\t\t\ttests: {\n\t\t\t\tlist: tests,\n\t\t\t\tdistinctTests: tests.length,\n\t\t\t\ttotalTestResults,\n\t\t\t\tfailedResults,\n\t\t\t\tfailedRate,\n\t\t\t},\n\t\t} );\n\t}\n\n\tsortData( by, isAsc ) {\n\t\tthis.state.tests.list.sort( ( a, b ) =>\n\t\t\tisAsc ? a[ by ] - b[ by ] : b[ by ] - a[ by ]\n\t\t);\n\n\t\tthis.setState( {\n\t\t\tsort: { by, isAsc },\n\t\t} );\n\t}\n\n\tsetDailyStatsData() {\n\t\t// make a copy of raw data object\n\t\t// we don't modify the original data\n\t\tlet days = JSON.parse(\n\t\t\tJSON.stringify( this.state.rawData.dailyData )\n\t\t);\n\n\t\tif ( this.state.filters.startDate && this.state.filters.endDate ) {\n\t\t\tdays = days.filter( ( d ) =>\n\t\t\t\tmoment( d.date ).isBetween( moment( this.state.filters.startDate, 'YYYY-MM-DD' ), moment( this.state.filters.endDate, 'YYYY-MM-DD' ), 'd', '[]' )\n\t\t\t);\n\t\t}\n\n\t\tdays.forEach( ( day ) => {\n\t\t\tday.failedRate = ( day.failed / day.total ).toFixed( 2 );\n\t\t} );\n\n\t\tsortArray( days, 'date', false );\n\n\t\tthis.setState( { days } );\n\t}\n\n\tchartOptions() {\n\t\t// chart options\n\t\treturn {\n\t\t\tgrid: {\n\t\t\t\tleft: 50,\n\t\t\t\tright: 50,\n\t\t\t},\n\t\t\tdataZoom: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'slider',\n\t\t\t\t},\n\t\t\t],\n\t\t\ttooltip: {\n\t\t\t\ttrigger: 'axis',\n\t\t\t\taxisPointer: {\n\t\t\t\t\ttype: 'cross',\n\t\t\t\t},\n\t\t\t},\n\t\t\tlegend: {\n\t\t\t\ttextStyle: {\n\t\t\t\t\tcolor: '#6b6d76',\n\t\t\t\t},\n\t\t\t},\n\t\t\txAxis: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'category',\n\t\t\t\t\tdata: this.state.days.map( function( e ) {\n\t\t\t\t\t\treturn e.date;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t],\n\t\t\tyAxis: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\ttype: 'dotted',\n\t\t\t\t\t\t\tcolor: '#6b6d76',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\ttype: 'dashed',\n\t\t\t\t\t\t\tcolor: 'rgba(107,109,118,0.47)',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmin: 0,\n\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\tformatter: '{value} %',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\tseries: [\n\t\t\t\t{\n\t\t\t\t\tname: 'failure rate',\n\t\t\t\t\ttype: 'line',\n\t\t\t\t\tyAxisIndex: 1,\n\t\t\t\t\tcolor: '#e38474',\n\t\t\t\t\tsymbol: 'roundRect',\n\t\t\t\t\tsymbolSize: 7,\n\t\t\t\t\tdata: this.state.days.map( function( e ) {\n\t\t\t\t\t\treturn e.failedRate;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'passed tests',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\tstack: '1',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgba(115, 151, 75, 0.73)',\n\t\t\t\t\tdata: this.state.days.map( function( e ) {\n\t\t\t\t\t\treturn e.passed;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'failed tests',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\tstack: '1',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgba(253, 90, 62, 0.71)',\n\t\t\t\t\tdata: this.state.days.map( function( e ) {\n\t\t\t\t\t\treturn e.failed;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'skipped tests',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\tstack: '1',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgba(170, 170, 170, 0.73)',\n\t\t\t\t\tdata: this.state.days.map( function( e ) {\n\t\t\t\t\t\treturn e.skipped;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t}\n\n\tgetTotalsBadges( test ) {\n\t\tconst badges = [ 'failed', 'passed', 'skipped', 'total' ].map(\n\t\t\t( label, id ) => {\n\t\t\t\tconst count = test[ label ];\n\n\t\t\t\t// hide statuses with no results\n\t\t\t\tconst classHide = count === 0 ? 'hide' : '';\n\n\t\t\t\tlet rate = (\n\t\t\t\t\t( count /\n\t\t\t\t\t\t( test.total -\n\t\t\t\t\t\t\t( label === 'skipped' ? 0 : test.skipped ) ) ) *\n\t\t\t\t\t100\n\t\t\t\t).toFixed( 1 );\n\n\t\t\t\tif ( label === 'total' ) {\n\t\t\t\t\trate = '';\n\t\t\t\t} else {\n\t\t\t\t\trate = isNaN( rate ) ? '' : `${ rate }%`;\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<li key={ id }>\n\t\t\t\t\t\t<Badge\n\t\t\t\t\t\t\tkey={ id }\n\t\t\t\t\t\t\tclassName={ `label label-fill label-status-${ label } ${ classHide }` }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ count } { label }\n\t\t\t\t\t\t\t<Badge className={ `badge-pill stat-pill` }>\n\t\t\t\t\t\t\t\t{ rate }\n\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t</Badge>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\n\t\treturn <ul className=\"list-unstyled\">{ badges }</ul>;\n\t}\n\n\tgetResultsLine( test ) {\n\t\tconst badges = test.results.slice( -500 ).map( ( result, id ) => {\n\t\t\tlet classHasSource = 'no-source';\n\t\t\tlet url;\n\n\t\t\tif ( result.source ) {\n\t\t\t\tclassHasSource = '';\n\t\t\t\turl = `${\n\t\t\t\t\tresult.report\n\t\t\t\t}/report/#testresult/${ result.source.replace( /.json/, '' ) }`;\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<Badge\n\t\t\t\t\tkey={ id }\n\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\tif ( url ) {\n\t\t\t\t\t\t\twindow.open( url, '_blank' );\n\t\t\t\t\t\t}\n\t\t\t\t\t} }\n\t\t\t\t\tclassName={ `has-tooltip label label-small label-status-${ result.status } ${ classHasSource }` }\n\t\t\t\t>\n\t\t\t\t\t&nbsp;\n\t\t\t\t\t<span className=\"tooltip-content\">\n\t\t\t\t\t\t{ moment( result.time ).format( 'MMM Do, h:mm a' ) }\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t{ result.source }\n\t\t\t\t\t</span>\n\t\t\t\t</Badge>\n\t\t\t);\n\t\t} );\n\t\treturn <div>{ badges }</div>;\n\t}\n\n\tgetTestContent( test, id ) {\n\t\treturn (\n\t\t\t<div key={ id } className=\"test-container\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-sm-auto\">\n\t\t\t\t\t\t<h1>{ test.name }</h1>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-sm-auto\">\n\t\t\t\t\t\t{ this.getTotalsBadges( test ) }\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col\">{ this.getResultsLine( test ) }</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\tif ( ! this.state.isDataReady ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t{ this.getFilterByDateFields() }\n\t\t\t\t</div>\n\t\t\t\t<ReactEcharts option={ this.chartOptions() } />\n\t\t\t\t<hr />\n\t\t\t\t<div className=\"row text-center\">\n\t\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t\t<div className=\"stat-box\">\n\t\t\t\t\t\t\t<span className=\"stat-number\">\n\t\t\t\t\t\t\t\t{ this.state.tests.distinctTests }\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<span className=\"stat-description\">tests</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t\t<div className=\"stat-box\">\n\t\t\t\t\t\t\t<span className=\"stat-number\">\n\t\t\t\t\t\t\t\t{ this.state.tests.totalTestResults }\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<span className=\"stat-description\">results</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t\t<div className=\"stat-box\">\n\t\t\t\t\t\t\t<span className=\"stat-number\">\n\t\t\t\t\t\t\t\t{ this.state.tests.failedResults }\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<span className=\"stat-description\">failures</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t\t<div className=\"stat-box\">\n\t\t\t\t\t\t\t<span className=\"stat-number\">\n\t\t\t\t\t\t\t\t{ this.state.tests.failedRate }%\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<span className=\"stat-description\">\n\t\t\t\t\t\t\t\tfailure rate\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<hr />\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-sm filters\">\n\t\t\t\t\t\t{ this.getMasterOnlyFilterButton() }\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-md sort-buttons\">\n\t\t\t\t\t\t{ this.getSortButtons(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttotal: 'most runs',\n\t\t\t\t\t\t\t\tfailed: 'most failures',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tthis.state.sort.by,\n\t\t\t\t\t\t\tthis.state.sort.isAsc\n\t\t\t\t\t\t) }\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<hr />\n\t\t\t\t<div>\n\t\t\t\t\t{ this.state.tests.list.map( ( test, id ) =>\n\t\t\t\t\t\tthis.getTestContent( test, id )\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport ReactGA from 'react-ga';\nimport moment from 'moment';\nimport ReactEcharts from 'echarts-for-react';\nimport { Badge } from 'react-bootstrap';\nimport { fetchJsonData } from '../utils/fetch';\nimport { sortArray } from '../utils/sort';\nimport { masterRuns } from '../config.json';\nimport BaseComponent from './BaseComponent';\n\nexport default class Failures extends BaseComponent {\n\tstate = {\n\t\trawData: {\n\t\t\terrorsData: {},\n\t\t\tweeklyData: [],\n\t\t},\n\t\terrors: {\n\t\t\tlist: [],\n\t\t\ttotalErrors: 0,\n\t\t\tdistinctErrors: 0,\n\t\t},\n\t\tweeks: [],\n\t\tfilters: { isMasterOnly: false, startDate: moment().subtract( 14, 'd' ).format( 'YYYY-MM-DD' ), endDate: moment().format( 'YYYY-MM-DD' ) },\n\t\tsort: { by: 'common', isAsc: false },\n\t\tisDataReady: false,\n\t};\n\n\tasync componentDidMount() {\n\t\tthis.setState( {\n\t\t\trawData: {\n\t\t\t\terrorsData: await fetchJsonData( './data/errors.json' ),\n\t\t\t\tweeklyData: await fetchJsonData( './data/weekly.json' ),\n\t\t\t},\n\t\t} );\n\n\t\tthis.setErrorsData();\n\t\tthis.setWeeklyStatsData();\n\n\t\tthis.setState( {\n\t\t\tisDataReady: true,\n\t\t} );\n\t\tthis.setDatePickersValues( this.state.filters.startDate, this.state.filters.endDate );\n\t\tReactGA.pageview( '/failures' );\n\t}\n\n\tcomponentDidUpdate( prevProps, prevState ) {\n\t\tif ( this.state.filters !== prevState.filters ) {\n\t\t\tthis.setErrorsData();\n\t\t}\n\n\t\tif ( this.state.errors.list !== prevState.errors.list ) {\n\t\t\tthis.sortData( this.state.sort.by, this.state.sort.isAsc );\n\t\t}\n\t}\n\n\tsetErrorsData() {\n\t\t// make a copy of raw data errors object to process\n\t\t// wwe don't modify the original data\n\t\tlet errors = JSON.parse(\n\t\t\tJSON.stringify( this.state.rawData.errorsData.errors )\n\t\t);\n\n\t\tif ( this.state.filters.startDate && this.state.filters.endDate ) {\n\t\t\terrors.forEach( ( e ) => {\n\t\t\t\te.results = e.results.filter( ( r ) =>\n\t\t\t\t\tmoment( r.time ).isBetween( moment( this.state.filters.startDate, 'YYYY-MM-DD' ), moment( this.state.filters.endDate, 'YYYY-MM-DD' ), 'd', '[]' )\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\tif ( this.state.filters.isMasterOnly ) {\n\t\t\terrors.forEach( ( e ) => {\n\t\t\t\te.results = e.results.filter( ( r ) =>\n\t\t\t\t\tmasterRuns.includes( r.report )\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\t// filter out errors with 0 occurrences\n\t\terrors = errors.filter( ( e ) => e.results.length > 0 );\n\n\t\t// calculate some stats for each error\n\t\tfor ( const error of errors ) {\n\t\t\terror.total = error.results.length;\n\t\t\tconst times = error.results.map( ( r ) => r.time );\n\t\t\terror.newest = Math.max( ...times );\n\t\t\terror.oldest = Math.min( ...times );\n\n\t\t\tconst testsNames = [\n\t\t\t\t...new Set( error.results.map( ( r ) => r.test ) ),\n\t\t\t];\n\n\t\t\terror.tests = [];\n\n\t\t\tfor ( const testName of testsNames ) {\n\t\t\t\tconst resultsForTest = error.results.filter(\n\t\t\t\t\t( r ) => r.test === testName\n\t\t\t\t);\n\n\t\t\t\terror.tests.push( {\n\t\t\t\t\tname: testName,\n\t\t\t\t\ttimes: resultsForTest.map( ( r ) => r.time ),\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\tconst allErrors = errors.map( ( e ) => e.results ).flat();\n\n\t\tthis.setState( {\n\t\t\terrors: {\n\t\t\t\tlist: errors,\n\t\t\t\tdistinctErrors: errors.length,\n\t\t\t\ttotalErrors: allErrors.length,\n\t\t\t},\n\t\t} );\n\t}\n\n\tsortData( by, isAsc ) {\n\t\tswitch ( by ) {\n\t\t\tcase 'recent':\n\t\t\t\tthis.state.errors.list.sort( ( a, b ) =>\n\t\t\t\t\tisAsc ? a.newest - b.newest : b.newest - a.newest\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'common':\n\t\t\t\tthis.state.errors.list.sort( ( a, b ) =>\n\t\t\t\t\tisAsc\n\t\t\t\t\t\t? a.results.length - b.results.length\n\t\t\t\t\t\t: b.results.length - a.results.length\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.setState( {\n\t\t\tsort: { by, isAsc },\n\t\t} );\n\t}\n\n\tsetWeeklyStatsData() {\n\t\t// make a copy of raw data object\n\t\t// we don't modify the original data\n\t\tconst weeks = JSON.parse(\n\t\t\tJSON.stringify( this.state.rawData.weeklyData )\n\t\t);\n\n\t\tweeks.forEach( ( week ) => {\n\t\t\tweek.failedRate = ( week.failed / week.total ).toFixed( 2 );\n\t\t} );\n\n\t\tsortArray( weeks, 'date' );\n\n\t\tthis.setState( { weeks } );\n\t}\n\n\tgetListOfTests( tests ) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{ tests.map( ( test, id ) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Badge\n\t\t\t\t\t\t\tkey={ id }\n\t\t\t\t\t\t\tclassName=\"label label-status-skipped\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ test.name }{ ' ' }\n\t\t\t\t\t\t\t<Badge className={ `badge-pill stat-pill` }>\n\t\t\t\t\t\t\t\t{ test.times.length }\n\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t</Badge>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\t\t\t</div>\n\t\t);\n\t}\n\n\tgetListOfFailures( results ) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{ results.map( ( result, id ) => {\n\t\t\t\t\tlet badge = moment( result.time ).format(\n\t\t\t\t\t\t'MMM Do, h:mm a'\n\t\t\t\t\t);\n\n\t\t\t\t\tlet className = 'no-source';\n\n\t\t\t\t\tif ( result.source ) {\n\t\t\t\t\t\tconst url = `${\n\t\t\t\t\t\t\tresult.report\n\t\t\t\t\t\t}/report/#testresult/${ result.source.replace(\n\t\t\t\t\t\t\t/.json/,\n\t\t\t\t\t\t\t''\n\t\t\t\t\t\t) }`;\n\t\t\t\t\t\tbadge = (\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref={ url }\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\tclassName=\"report-link\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ badge }\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tclassName = '';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tkey={ id }\n\t\t\t\t\t\t\tclassName={ `failure-link ${ className }` }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ badge }\n\t\t\t\t\t\t</span>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\t\t\t</div>\n\t\t);\n\t}\n\n\tgetErrorContent( error, id ) {\n\t\tlet details = `${ error.total } times, since ${ moment(\n\t\t\terror.oldest\n\t\t).fromNow() }. Last failed ${ moment( error.newest ).fromNow() }`;\n\n\t\tif ( error.total === 1 ) {\n\t\t\tdetails = `once, ${ moment( error.oldest ).fromNow() }`;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"error-container\" key={ id }>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<pre className=\"error-container-trace\">{ error.trace }</pre>\n\t\t\t\t\t<div>{ details }</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t{ this.getListOfTests( error.tests ) }\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t{ this.getListOfFailures( error.results ) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tchartOptions() {\n\t\treturn {\n\t\t\tgrid: {\n\t\t\t\tleft: 50,\n\t\t\t\tright: 50,\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\ttrigger: 'axis',\n\t\t\t\taxisPointer: {\n\t\t\t\t\ttype: 'cross',\n\t\t\t\t},\n\t\t\t},\n\t\t\tlegend: {\n\t\t\t\ttextStyle: {\n\t\t\t\t\tcolor: '#6b6d76',\n\t\t\t\t},\n\t\t\t},\n\t\t\txAxis: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'category',\n\t\t\t\t\tdata: this.state.weeks.map( function( e ) {\n\t\t\t\t\t\treturn e.date;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t],\n\t\t\tyAxis: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\ttype: 'dotted',\n\t\t\t\t\t\t\tcolor: '#6b6d76',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\ttype: 'dashed',\n\t\t\t\t\t\t\tcolor: '#6b6d76',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmin: 0,\n\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\tformatter: '{value} %',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\tseries: [\n\t\t\t\t{\n\t\t\t\t\tname: 'failure rate',\n\t\t\t\t\ttype: 'line',\n\t\t\t\t\tyAxisIndex: 1,\n\t\t\t\t\tcolor: '#e38474',\n\t\t\t\t\tsymbol: 'roundRect',\n\t\t\t\t\tsymbolSize: 7,\n\t\t\t\t\tdata: this.state.weeks.map( function( e ) {\n\t\t\t\t\t\treturn e.failedRate;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'failed tests',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: '#fd5a3e',\n\t\t\t\t\tdata: this.state.weeks.map( function( e ) {\n\t\t\t\t\t\treturn e.failed;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t}\n\n\trender() {\n\t\tif ( ! this.state.isDataReady ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst lastUpdate = moment(\n\t\t\tthis.state.rawData.errorsData.lastUpdate\n\t\t).fromNow();\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<ReactEcharts option={ this.chartOptions() } />\n\t\t\t\t<hr />\n\t\t\t\t<div className=\"row text-center\">\n\t\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t\t<div className=\"stat-box\">\n\t\t\t\t\t\t\t<span className=\"stat-number\">\n\t\t\t\t\t\t\t\t{ this.state.errors.totalErrors }\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<span className=\"stat-description\">\n\t\t\t\t\t\t\t\ttotal errors\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t\t<div className=\"stat-box\">\n\t\t\t\t\t\t\t<span className=\"stat-number\">\n\t\t\t\t\t\t\t\t{ this.state.errors.distinctErrors }\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<span className=\"stat-description\">\n\t\t\t\t\t\t\t\tdistinct errors\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<hr />\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t{ this.getFilterByDateFields() }\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-sm filters\">\n\t\t\t\t\t\t{ this.getMasterOnlyFilterButton() }\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-md sort-buttons\">\n\t\t\t\t\t\t{ this.getSortButtons(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trecent: 'most recent',\n\t\t\t\t\t\t\t\tcommon: 'most common',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tthis.state.sort.by,\n\t\t\t\t\t\t\tthis.state.sort.isAsc\n\t\t\t\t\t\t) }\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<hr />\n\t\t\t\t<div>\n\t\t\t\t\t{ this.state.errors.list.map( ( error, id ) =>\n\t\t\t\t\t\tthis.getErrorContent( error, id )\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"text-right col small\">\n\t\t\t\t\t\tupdated { lastUpdate }\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport ReactGA from 'react-ga';\n\nimport ReactEcharts from 'echarts-for-react';\n\nexport default class Performance extends React.Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.state = {\n\t\t\trawData: [],\n\t\t\tisDataFetched: false,\n\t\t};\n\t}\n\n\tprepareChartData( jsonData ) {\n\t\tconst result = {};\n\n\t\tconst calcPercent = ( base, comp ) => ( comp / base - 1 ) * 100;\n\n\t\tconst byDate = {};\n\t\tjsonData.forEach( ( record ) => {\n\t\t\tlet date = new Date( record.date );\n\t\t\tdate = date.toISOString().split( 'T' )[ 0 ];\n\t\t\tif ( ! byDate[ date ] ) {\n\t\t\t\tbyDate[ date ] = [];\n\t\t\t}\n\n\t\t\tconst percentage = Object.keys( record.baseAvg ).reduce(\n\t\t\t\t( acc, metric ) => {\n\t\t\t\t\tacc[ metric ] = calcPercent(\n\t\t\t\t\t\trecord.baseAvg[ metric ],\n\t\t\t\t\t\trecord.jetpackAvg[ metric ]\n\t\t\t\t\t);\n\t\t\t\t\treturn acc;\n\t\t\t\t},\n\t\t\t\t{}\n\t\t\t);\n\n\t\t\tbyDate[ date ].push( percentage );\n\t\t} );\n\n\t\tObject.entries( byDate ).forEach( ( [ date, recArry ] ) => {\n\t\t\tconst size = recArry.length;\n\t\t\tresult[ date ] = { date };\n\n\t\t\t// looping through all the keys, and calculating average for specific day\n\t\t\tObject.keys( recArry[ 0 ] ).forEach( ( metric ) => {\n\t\t\t\t// sum\n\t\t\t\tresult[ date ][ metric ] = recArry.reduce(\n\t\t\t\t\t( a, rec ) => a + rec[ metric ],\n\t\t\t\t\t0\n\t\t\t\t);\n\t\t\t\t// calculating average\n\t\t\t\tresult[ date ][ metric ] /= size;\n\t\t\t\t// rounding\n\t\t\t\tresult[ date ][ metric ] =\n\t\t\t\t\tMath.round( result[ date ][ metric ] * 100 ) / 100;\n\t\t\t} );\n\t\t} );\n\n\t\treturn Object.values( result );\n\t}\n\n\tasync componentDidMount() {\n\t\tawait fetch( './data/perf-metrics.json', {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAccept: 'application/json',\n\t\t\t},\n\t\t} )\n\t\t\t.then( ( response ) => response.json() )\n\t\t\t.then( ( jsonData ) => {\n\t\t\t\tthis.setState( {\n\t\t\t\t\trawData: jsonData,\n\t\t\t\t\tisDataFetched: true,\n\t\t\t\t} );\n\t\t\t} )\n\t\t\t.catch( console.log );\n\n\t\tReactGA.pageview( 'performance' );\n\t}\n\n\trender() {\n\t\tif ( ! this.state.isDataFetched ) return null;\n\n\t\tconst chartData = this.prepareChartData( this.state.rawData );\n\n\t\tconst chartOptions = {\n\t\t\tgrid: {\n\t\t\t\tleft: 40,\n\t\t\t\tright: 0,\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\ttrigger: 'axis',\n\t\t\t\taxisPointer: {\n\t\t\t\t\ttype: 'cross',\n\t\t\t\t},\n\t\t\t},\n\t\t\tlegend: {\n\t\t\t\ttextStyle: {\n\t\t\t\t\tcolor: '#6b6d76',\n\t\t\t\t},\n\t\t\t},\n\t\t\txAxis: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'category',\n\t\t\t\t\tdata: chartData.map( function ( e ) {\n\t\t\t\t\t\treturn e.date;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t],\n\t\t\tyAxis: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\ttype: 'dotted',\n\t\t\t\t\t\t\tcolor: '#6b6d76',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\ttype: 'dashed',\n\t\t\t\t\t\t\tcolor: 'rgba(107,109,118,0.47)',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmin: 0,\n\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\tformatter: '{value} %',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\tdataZoom: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'inside',\n\t\t\t\t\tstart: 70,\n\t\t\t\t\tend: 100,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tstart: 70,\n\t\t\t\t\tend: 100,\n\t\t\t\t},\n\t\t\t],\n\t\t\tseries: [\n\t\t\t\t{\n\t\t\t\t\tname: 'loaded',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgba(115, 151, 75, 0.73)',\n\t\t\t\t\tdata: chartData.map( function ( e ) {\n\t\t\t\t\t\treturn e.loaded;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'firstContentfulPaint',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgba(0,123,255,0.73)',\n\t\t\t\t\tdata: chartData.map( function ( e ) {\n\t\t\t\t\t\treturn e.firstContentfulPaint;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'type',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgba(253,90,62,0.71)',\n\t\t\t\t\tdata: chartData.map( function ( e ) {\n\t\t\t\t\t\treturn e.type;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'focus',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgb(107,109,118)',\n\t\t\t\t\tdata: chartData.map( function ( e ) {\n\t\t\t\t\t\treturn e.focus;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'inserterOpen',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgb(160,248,228)',\n\t\t\t\t\tdata: chartData.map( function ( e ) {\n\t\t\t\t\t\treturn e.inserterOpen;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h4>Performance metrics</h4>\n\t\t\t\t<ReactEcharts option={ chartOptions } />\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport ReactGA from 'react-ga';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Navbar, Container, Nav } from 'react-bootstrap';\nimport Reports from './components/Reports';\nimport { HashRouter, Route, Routes } from 'react-router-dom';\nimport Tests from './components/Tests';\nimport Failures from './components/Failures';\nimport Performance from './components/Performance';\n\nconst TRACKING_ID = 'UA-208890082-1';\nReactGA.initialize( TRACKING_ID );\n\nfunction App() {\n\tconst basename = '/jetpack-e2e-reports';\n\n\treturn (\n\t\t<Container fluid className=\"App\">\n\t\t\t<div className=\"App-content\">\n\t\t\t\t<Navbar variant=\"dark\" expand=\"md\" className=\"app-nav-bar\">\n\t\t\t\t\t<Container fluid className=\"app-nav-bar-inner-container\">\n\t\t\t\t\t\t<Navbar.Brand href={ `${ basename }/#/` }>\n\t\t\t\t\t\t\tJetpack test dashboard\n\t\t\t\t\t\t</Navbar.Brand>\n\t\t\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t\t\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t\t\t\t<Nav\n\t\t\t\t\t\t\t\tactiveKey={ location.pathname }\n\t\t\t\t\t\t\t\tclassName=\"ml-auto\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Nav.Link href={ `${ basename }/#/reports` }>\n\t\t\t\t\t\t\t\t\tReports\n\t\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t\t<Nav.Link href={ `${ basename }/#/tests` }>\n\t\t\t\t\t\t\t\t\tTests\n\t\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t\t<Nav.Link href={ `${ basename }/#/failures` }>\n\t\t\t\t\t\t\t\t\tFailures\n\t\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t\t<Nav.Link\n\t\t\t\t\t\t\t\t\thref={ `${ basename }/#/performance` }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tPerformance\n\t\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t</Nav>\n\t\t\t\t\t\t</Navbar.Collapse>\n\t\t\t\t\t</Container>\n\t\t\t\t</Navbar>\n\t\t\t\t<HashRouter>\n\t\t\t\t\t<Routes>\n\t\t\t\t\t\t<Route exact path=\"/\" element={ <Reports /> } />\n\t\t\t\t\t\t<Route exact path=\"/reports\" element={ <Reports /> } />\n\t\t\t\t\t\t<Route exact path=\"/tests\" element={ <Tests /> } />\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tpath=\"/failures\"\n\t\t\t\t\t\t\telement={ <Failures /> }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tpath=\"/performance\"\n\t\t\t\t\t\t\telement={ <Performance /> }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Routes>\n\t\t\t\t</HashRouter>\n\t\t\t</div>\n\t\t\t<footer className=\"App-footer\">\n\t\t\t\t<div>\n\t\t\t\t\t<a\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\thref=\"https://github.com/Automattic/jetpack-e2e-reports/\"\n\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t>\n\t\t\t\t\t\tCode\n\t\t\t\t\t</a>\n\t\t\t\t\t{ ' • ' }\n\t\t\t\t\t<a\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\thref=\"https://github.com/Automattic/jetpack-e2e-reports/actions\"\n\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t>\n\t\t\t\t\t\tActions\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</footer>\n\t\t</Container>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById( 'root' )\n);\n"],"sourceRoot":""}