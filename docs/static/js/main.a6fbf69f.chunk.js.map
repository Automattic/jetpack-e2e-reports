{"version":3,"sources":["ReportsTable.js","App.js","index.js"],"names":["ReportsTable","props","updateSorting","sortBy","isSortAsc","setState","state","data","reports","fetch","headers","Accept","then","response","json","jsonData","catch","console","log","this","sortAlphabetically","sortByDate","sortByStatus","sort","r1","r2","Date","parse","lastUpdate","name","statistic","failed","broken","report","metadata","isFailed","linkUrl","reportKey","reportTitle","pr_title","prNumber","pr_number","branchUrl","branch","prUrl","className","icon","faTimes","faCheck","href","target","rel","faCodeBranch","counts","map","label","id","count","Badge","runUrl","run_id","toLocaleString","sortDirection","sortTable","total","passed","skipped","renderReportLink","renderResults","renderMetadataCell","head","klass","sortButtons","Object","keys","key","index","Button","variant","onClick","toUpperCase","reportsCount","Table","hover","responsive","size","docsSize","colSpan","renderTableHeader","renderTableData","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6fbf69f.chunk.js","sourcesContent":["import { Table, Badge, Button } from 'react-bootstrap';\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n\tfaCheck,\n\tfaCodeBranch,\n\tfaTimes,\n} from '@fortawesome/free-solid-svg-icons';\n\nexport default class ReportsTable extends React.Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.state = {\n\t\t\tdata: { reports: [] },\n\t\t\tsortBy: 'lastUpdate',\n\t\t\tisSortAsc: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch( './summary.json', {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAccept: 'application/json',\n\t\t\t},\n\t\t} )\n\t\t\t.then( ( response ) => response.json() )\n\t\t\t.then( ( jsonData ) => {\n\t\t\t\tthis.setState( { data: jsonData } );\n\t\t\t} )\n\t\t\t.catch( console.log );\n\t}\n\n\tupdateSorting = ( sortBy, isSortAsc ) =>\n\t\tthis.setState( { sortBy, isSortAsc } );\n\n\tsortTable( sortBy, isSortAsc ) {\n\t\tswitch ( sortBy ) {\n\t\t\tcase 'name':\n\t\t\t\treturn this.sortAlphabetically( isSortAsc );\n\t\t\tcase 'lastUpdate':\n\t\t\t\treturn this.sortByDate( isSortAsc );\n\t\t\tcase 'statistic':\n\t\t\t\treturn this.sortByStatus( isSortAsc );\n\t\t}\n\t}\n\n\tsortByDate( isSortAsc ) {\n\t\treturn this.state.data.reports.sort( ( r1, r2 ) => {\n\t\t\tif ( isSortAsc ) {\n\t\t\t\treturn (\n\t\t\t\t\tDate.parse( r1.lastUpdate ) - Date.parse( r2.lastUpdate )\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn Date.parse( r2.lastUpdate ) - Date.parse( r1.lastUpdate );\n\t\t} );\n\t}\n\n\tsortAlphabetically( isSortAsc ) {\n\t\treturn this.state.data.reports.sort( ( r1, r2 ) =>\n\t\t\tisSortAsc ? r1.name - r2.name : r2.name - r1.name\n\t\t);\n\t}\n\n\tsortByStatus( isSortAsc ) {\n\t\treturn this.state.data.reports.sort( ( r1, r2 ) => {\n\t\t\tif ( isSortAsc ) {\n\t\t\t\treturn (\n\t\t\t\t\tr1.statistic.failed +\n\t\t\t\t\tr1.statistic.broken -\n\t\t\t\t\t( r2.statistic.failed + r2.statistic.broken )\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn (\n\t\t\t\tr2.statistic.failed +\n\t\t\t\tr2.statistic.broken -\n\t\t\t\t( r1.statistic.failed + r1.statistic.broken )\n\t\t\t);\n\t\t} );\n\t}\n\n\trenderReportLink( report, metadata, isFailed ) {\n\t\tconst linkUrl = `https://automattic.github.io/jetpack-e2e-reports/${ report.name }/report/`;\n\n\t\tconst reportKey = report.name;\n\t\tlet reportTitle = report.name;\n\n\t\tif ( metadata.pr_title ) {\n\t\t\tlet prNumber = '';\n\t\t\tprNumber = `(#${ metadata.pr_number })`;\n\t\t\treportTitle = `${ metadata.pr_title } ${ prNumber }`;\n\t\t}\n\n\t\tconst branchUrl = `https://github.com/Automattic/jetpack/tree/${ metadata.branch }`;\n\t\tconst prUrl = `https://github.com/Automattic/jetpack/pull/${ metadata.pr_number }`;\n\n\t\treturn (\n\t\t\t<ul className={ 'list-unstyled' }>\n\t\t\t\t<li>\n\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\tclassName={ isFailed ? 'failed' : 'passed' }\n\t\t\t\t\t\ticon={ isFailed ? faTimes : faCheck }\n\t\t\t\t\t/>\n\t\t\t\t\t&nbsp;\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={ linkUrl }\n\t\t\t\t\t\tclassName=\"report-link\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ reportTitle }\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<small>\n\t\t\t\t\t\t#{ reportKey } { ' • ' }\n\t\t\t\t\t\t<FontAwesomeIcon icon={ faCodeBranch } />{ ' ' }\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={ branchUrl }\n\t\t\t\t\t\t\ttarget={ '_blank' }\n\t\t\t\t\t\t\tclassName={ 'report-link' }\n\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ metadata.branch }\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t{ metadata.pr_number ? ' • ' : '' }\n\t\t\t\t\t\t{ metadata.pr_number && (\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref={ prUrl }\n\t\t\t\t\t\t\t\ttarget={ '_blank' }\n\t\t\t\t\t\t\t\tclassName={ 'report-link' }\n\t\t\t\t\t\t\t\trel={ 'noreferrer' }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tPR { metadata.pr_number }\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</small>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t}\n\n\trenderResults( statistic ) {\n\t\tconst counts = [ 'failed', 'passed', 'total' ].map( ( label, id ) => {\n\t\t\tconst count =\n\t\t\t\tlabel === 'failed'\n\t\t\t\t\t? statistic[ label ] + statistic.broken\n\t\t\t\t\t: statistic[ label ];\n\t\t\treturn (\n\t\t\t\t<Badge key={ id } className={ `label label-status-${ label }` }>\n\t\t\t\t\t{ label } { count }\n\t\t\t\t</Badge>\n\t\t\t);\n\t\t} );\n\n\t\treturn <div>{ counts }</div>;\n\t}\n\n\trenderMetadataCell( report ) {\n\t\tconst runUrl = `https://github.com/Automattic/jetpack/actions/runs/${ report.metadata.run_id }`;\n\t\treturn (\n\t\t\t<ul className={ 'list-unstyled' }>\n\t\t\t\t<li>\n\t\t\t\t\t<small>\n\t\t\t\t\t\tlast update:{ ' ' }\n\t\t\t\t\t\t{ new Date(\n\t\t\t\t\t\t\tDate.parse( report.lastUpdate )\n\t\t\t\t\t\t).toLocaleString() }\n\t\t\t\t\t</small>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<small>\n\t\t\t\t\t\tlast run id:{ ' ' }\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={ runUrl }\n\t\t\t\t\t\t\ttarget={ '_blank' }\n\t\t\t\t\t\t\tclassName={ 'report-link' }\n\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ report.metadata.run_id }\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</small>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t}\n\n\trenderTableData( sortBy, sortDirection ) {\n\t\tconst reports = this.sortTable( sortBy, sortDirection );\n\t\treturn reports.map( ( report, id ) => {\n\t\t\tconst { statistic, metadata } = report; //destructuring\n\t\t\tconst isFailed = statistic.total !== statistic.passed + statistic.skipped;\n\t\t\treturn (\n\t\t\t\t<tr key={ id }>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t{ this.renderReportLink( report, metadata, isFailed ) }\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>{ this.renderResults( statistic ) }</td>\n\t\t\t\t\t<td>{ this.renderMetadataCell( report ) }</td>\n\t\t\t\t</tr>\n\t\t\t);\n\t\t} );\n\t}\n\n\trenderTableHeader( updateSorting, sortBy, sortDirection ) {\n\t\tconst head = {\n\t\t\tname: 'report id',\n\t\t\tstatistic: 'results',\n\t\t\tlastUpdate: 'most recent',\n\t\t};\n\n\t\tconst klass = sortDirection ? 'sort-by-asc' : 'sort-by-desc';\n\n\t\tconst sortButtons = Object.keys( head ).map( ( key, index ) => {\n\t\t\treturn (\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"dark\"\n\t\t\t\t\tkey={ index }\n\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\tupdateSorting( key, ! sortDirection );\n\t\t\t\t\t} }\n\t\t\t\t>\n\t\t\t\t\t{ head[ key ].toUpperCase() }\n\t\t\t\t\t<span className={ sortBy === key ? klass : '' } />\n\t\t\t\t</Button>\n\t\t\t);\n\t\t} );\n\n\t\treturn (\n\t\t\t<div className={ 'd-flex justify-content-between' }>\n\t\t\t\t<div>{ this.state.data.reportsCount } reports</div>\n\t\t\t\t<div>{ sortButtons }</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Table\n\t\t\t\thover\n\t\t\t\tresponsive=\"sm\"\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"dark\"\n\t\t\t\tid=\"reportsTable\"\n\t\t\t>\n\t\t\t\t<caption>\n\t\t\t\t\t<small>docs size: { this.state.data.docsSize }</small>\n\t\t\t\t</caption>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th colSpan=\"3\">\n\t\t\t\t\t\t\t<h1 className={ 'display-4' }>\n\t\t\t\t\t\t\t\tJetpack e2e test reports\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colSpan=\"3\" id={ 'sortButtons' }>\n\t\t\t\t\t\t\t{ this.renderTableHeader(\n\t\t\t\t\t\t\t\tthis.updateSorting,\n\t\t\t\t\t\t\t\tthis.state.sortBy,\n\t\t\t\t\t\t\t\tthis.state.isSortAsc\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{ this.renderTableData(\n\t\t\t\t\t\tthis.state.sortBy,\n\t\t\t\t\t\tthis.state.isSortAsc\n\t\t\t\t\t) }\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\t\t);\n\t}\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport ReportsTable from './ReportsTable';\n\nfunction reportsList() {\n\treturn (\n\t\t<div className=\"App-content\">\n\t\t\t<ReportsTable />\n\t\t</div>\n\t);\n}\n\nfunction header() {\n\treturn <header className=\"App-header\">&nbsp;</header>;\n}\n\nfunction footer() {\n\treturn (\n\t\t<footer className=\"App-footer\">\n\t\t\t<div>\n\t\t\t\t<a\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\thref=\"https://github.com/Automattic/jetpack-e2e-reports/\"\n\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t>\n\t\t\t\t\tCode\n\t\t\t\t</a>\n\t\t\t\t{ ' • ' }\n\t\t\t\t<a\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\thref=\"https://github.com/Automattic/jetpack-e2e-reports/actions\"\n\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t>\n\t\t\t\t\tActions\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</footer>\n\t);\n}\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{ header() }\n\t\t\t{ reportsList() }\n\t\t\t{ footer() }\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById( 'root' )\n);\n"],"sourceRoot":""}