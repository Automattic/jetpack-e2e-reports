{"version":3,"sources":["utils.js","components/ReportsTable.js","components/Reports.js","components/Tests.js","components/Failures.js","components/Performance.js","App.js","index.js"],"names":["fs","require","path","module","exports","getReportsDirs","excluded","ignore","console","log","readdirSync","withFileTypes","filter","dirent","isDirectory","includes","name","map","getFilesFromDir","dirPath","fileExtension","isFile","endsWith","getTestInfoFromTestCaseFile","reportName","fileName","filePath","JSON","parse","readFileSync","toString","cleanStacktrace","message","trace","split","line","join","replace","writeJson","jsonData","pretty","writeFileSync","resolve","stringify","sort","data","sortKey","desc","sorted","a","b","reverse","ReportsTable","state","reports","props","by","isAsc","this","sortTable","setState","sortByName","sortByDate","sortByStatus","isSortAsc","r1","r2","Date","lastUpdate","statistic","failed","broken","sortButtons","reportCount","head","klass","options","Object","keys","key","index","Button","variant","onClick","toUpperCase","className","length","colSpan","report","id","metadata","isFailed","total","passed","skipped","getReportLinkCell","getTestResultsCell","getMetadataCell","totalTests","linkUrl","reportKey","reportTitle","pr_title","prNumber","pr_number","branchUrl","branch","prUrl","statusIcon","faQuestion","statusClassName","faTimes","faCheck","icon","href","target","rel","ReactGA","pageview","faCodeBranch","counts","label","count","Badge","runUrl","run_id","moment","fromNow","Table","hover","responsive","size","getTableHeader","getReportRow","React","Component","Reports","pinnedReports","docsSize","undefined","reportsCount","isDataFetched","fetch","headers","Accept","then","response","json","prReports","configData","permanent","push","catch","Tests","tests","daily","test","badges","classHide","rate","toFixed","isNaN","results","slice","result","classHasSource","source","status","time","format","getTotalsBadges","getResultsLine","t","totalTestResults","distinctTests","failedResults","forEach","failedRate","dailyStats","day","chartOptions","grid","left","right","tooltip","trigger","axisPointer","type","legend","textStyle","color","xAxis","e","date","yAxis","splitLine","lineStyle","min","axisLabel","formatter","dataZoom","start","end","series","yAxisIndex","symbol","symbolSize","stack","emphasis","focus","option","getTestContent","Failures","errorsData","weeklyData","times","badge","url","error","details","oldest","newest","getListOfTests","getListOfFailures","errors","r","Math","max","testsNames","Set","testName","resultsForTest","distinctErrors","totalErrors","flat","weeklyStats","week","getErrorContent","Performance","rawData","byDate","record","toISOString","percentage","baseAvg","reduce","acc","metric","base","jetpackAvg","entries","recArry","rec","round","values","chartData","prepareChartData","loaded","firstContentfulPaint","inserterOpen","initialize","App","basename","Container","fluid","Navbar","expand","Brand","Toggle","aria-controls","Collapse","Nav","activeKey","location","pathname","Link","exact","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69f32bcf.chunk.js","sourcesContent":["const fs = require( 'fs' );\nconst path = require( 'path' );\n\nfunction getReportsDirs() {\n\tconst excluded = require( '../src/config.json' ).ignore;\n\tconsole.log( `Excluded dirs: ${ excluded }` );\n\n\treturn fs\n\t\t.readdirSync( 'docs', { withFileTypes: true } )\n\t\t.filter(\n\t\t\t( dirent ) =>\n\t\t\t\tdirent.isDirectory() && ! excluded.includes( dirent.name )\n\t\t)\n\t\t.map( ( dirent ) => dirent.name );\n}\n\nfunction getFilesFromDir( dirPath, fileExtension = '' ) {\n\treturn fs\n\t\t.readdirSync( dirPath, {\n\t\t\twithFileTypes: true,\n\t\t} )\n\t\t.filter(\n\t\t\t( dirent ) =>\n\t\t\t\tdirent.isFile() && dirent.name.endsWith( fileExtension )\n\t\t)\n\t\t.map( ( dirent ) => dirent.name );\n}\n\nfunction cleanStacktrace( message, trace ) {\n\ttrace = trace\n\t\t.split( '\\n' )\n\t\t.filter( ( line ) => ! line.includes( '=====' ) )\n\t\t.filter( ( line ) => ! line.includes( 'Playwright logs' ) )\n\t\t.join( '\\n' )\n\t\t.replace( /\\n+/g, '\\n' )\n\t\t.replace( /https:\\/\\/.+.a8c-localtunnel.cyou/g, 'SITE-URL' )\n\t\t.replace(\n\t\t\t/waiting for selector \"\\.wp-block-jetpack-.+ \\.components-sandbox\" to be visible/g,\n\t\t\t'waiting for selector \".wp-block-jetpack-BLOCK .components-sandbox\" to be visible'\n\t\t);\n\n\treturn `${ message }\\n${ trace }`;\n}\n\nfunction getTestInfoFromTestCaseFile( reportName, fileName ) {\n\tconst filePath = `./docs/${ reportName }/report/data/test-cases/${ fileName }`;\n\treturn JSON.parse( fs.readFileSync( filePath ).toString() );\n}\n\nfunction writeJson( jsonData, filePath, pretty = false ) {\n\tfs.writeFileSync(\n\t\tpath.resolve( filePath ),\n\t\tJSON.stringify( jsonData, null, pretty ? 2 : 0 )\n\t);\n}\n\nfunction sort( data, sortKey, desc = false ) {\n\tconst sorted = data.sort( ( a, b ) =>\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\ta[ sortKey ] > b[ sortKey ] ? 1 : b[ sortKey ] > a[ sortKey ] ? -1 : 0\n\t);\n\n\tif ( desc ) {\n\t\treturn sorted.reverse();\n\t}\n\n\treturn sorted;\n}\n\nmodule.exports = {\n\tgetReportsDirs,\n\tgetFilesFromDir,\n\tgetTestInfoFromTestCaseFile,\n\tcleanStacktrace,\n\twriteJson,\n\tsort,\n};\n","import { Table, Badge, Button } from 'react-bootstrap';\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n\tfaCheck,\n\tfaCodeBranch,\n\tfaQuestion,\n\tfaTimes,\n} from '@fortawesome/free-solid-svg-icons';\nimport ReactGA from 'react-ga';\nimport moment from 'moment';\n\nexport default class ReportsTable extends React.Component {\n\tstate = {\n\t\treports: this.props.reports,\n\t\tsort: { by: 'lastUpdate', isAsc: false },\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.sortTable( this.state.sort.by, this.state.sort.isAsc );\n\t}\n\n\tsortTable( by, isAsc ) {\n\t\tthis.setState( { sort: { by, isAsc } } );\n\n\t\tswitch ( by ) {\n\t\t\tcase 'name':\n\t\t\t\treturn this.sortByName( isAsc );\n\t\t\tcase 'lastUpdate':\n\t\t\t\treturn this.sortByDate( isAsc );\n\t\t\tcase 'statistic':\n\t\t\t\treturn this.sortByStatus( isAsc );\n\t\t}\n\t}\n\n\tsortByDate( isSortAsc ) {\n\t\treturn this.state.reports.sort( ( r1, r2 ) => {\n\t\t\tif ( isSortAsc ) {\n\t\t\t\treturn (\n\t\t\t\t\tDate.parse( r1.lastUpdate ) - Date.parse( r2.lastUpdate )\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn Date.parse( r2.lastUpdate ) - Date.parse( r1.lastUpdate );\n\t\t} );\n\t}\n\n\tsortByName( isSortAsc ) {\n\t\treturn this.state.reports.sort( ( r1, r2 ) =>\n\t\t\tisSortAsc ? r1.name - r2.name : r2.name - r1.name\n\t\t);\n\t}\n\n\tsortByStatus( isSortAsc ) {\n\t\treturn this.state.reports.sort( ( r1, r2 ) => {\n\t\t\tif ( isSortAsc ) {\n\t\t\t\treturn (\n\t\t\t\t\tr1.statistic.failed +\n\t\t\t\t\tr1.statistic.broken -\n\t\t\t\t\t( r2.statistic.failed + r2.statistic.broken )\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn (\n\t\t\t\tr2.statistic.failed +\n\t\t\t\tr2.statistic.broken -\n\t\t\t\t( r1.statistic.failed + r1.statistic.broken )\n\t\t\t);\n\t\t} );\n\t}\n\n\tgetTableHeader() {\n\t\tconst head = {\n\t\t\tname: 'report id',\n\t\t\tstatistic: 'no of failures',\n\t\t\tlastUpdate: 'most recent',\n\t\t};\n\n\t\tconst klass = this.state.sort.isAsc ? 'sort-by-asc' : 'sort-by-desc';\n\t\tlet sortButtons;\n\n\t\tif ( this.props.options.sortButtons ) {\n\t\t\tsortButtons = Object.keys( head ).map( ( key, index ) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"dark\"\n\t\t\t\t\t\tkey={ index }\n\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\tthis.sortTable( key, ! this.state.sort.isAsc );\n\t\t\t\t\t\t} }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ head[ key ].toUpperCase() }\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\tthis.state.sort.by === key ? klass : ''\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Button>\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\tlet reportCount;\n\t\tif ( this.props.reportCount ) {\n\t\t\treportCount = `${ this.state.reports.length } reports`;\n\t\t}\n\n\t\treturn (\n\t\t\t<thead>\n\t\t\t\t<tr className={ 'headerRow' }>\n\t\t\t\t\t<td colSpan=\"3\" className={ 'sortButtons' }>\n\t\t\t\t\t\t<div className={ 'd-flex justify-content-between' }>\n\t\t\t\t\t\t\t<div>{ reportCount }</div>\n\t\t\t\t\t\t\t<div>{ sortButtons }</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t);\n\t}\n\n\tgetReportRow( report, id ) {\n\t\tconst { statistic, metadata } = report; //destructuring\n\t\tconst isFailed =\n\t\t\tstatistic.total !== statistic.passed + statistic.skipped;\n\t\treturn (\n\t\t\t<tr key={ id }>\n\t\t\t\t<td className={ 'reportNameCell' }>\n\t\t\t\t\t{ this.getReportLinkCell(\n\t\t\t\t\t\treport,\n\t\t\t\t\t\tmetadata,\n\t\t\t\t\t\tisFailed,\n\t\t\t\t\t\tstatistic.total\n\t\t\t\t\t) }\n\t\t\t\t</td>\n\t\t\t\t<td>{ this.getTestResultsCell( statistic ) }</td>\n\t\t\t\t<td>{ this.getMetadataCell( report ) }</td>\n\t\t\t</tr>\n\t\t);\n\t}\n\n\tgetReportLinkCell( report, metadata, isFailed, totalTests ) {\n\t\tconst linkUrl = `https://automattic.github.io/jetpack-e2e-reports/${ report.name }/report/`;\n\n\t\tconst reportKey = report.name;\n\t\tlet reportTitle = report.name;\n\n\t\tif ( metadata.pr_title ) {\n\t\t\tconst prNumber = `(#${ metadata.pr_number })`;\n\t\t\treportTitle = `${ metadata.pr_title } ${ prNumber }`;\n\t\t}\n\n\t\tconst branchUrl = `https://github.com/Automattic/jetpack/tree/${ metadata.branch }`;\n\t\tconst prUrl = `https://github.com/Automattic/jetpack/pull/${ metadata.pr_number }`;\n\n\t\tlet statusIcon = faQuestion;\n\t\tlet statusClassName = 'warning';\n\t\tif ( totalTests > 0 ) {\n\t\t\tstatusIcon = isFailed ? faTimes : faCheck;\n\t\t\tstatusClassName = isFailed ? 'failed' : 'passed';\n\t\t}\n\n\t\treturn (\n\t\t\t<ul className={ 'list-unstyled' }>\n\t\t\t\t<li>\n\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\tclassName={ statusClassName }\n\t\t\t\t\t\ticon={ statusIcon }\n\t\t\t\t\t/>\n\t\t\t\t\t&nbsp;\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={ linkUrl }\n\t\t\t\t\t\tclassName=\"report-link\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\tonClick={ () => ReactGA.pageview( '/' + report.name ) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ reportTitle }\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<small>\n\t\t\t\t\t\t#{ reportKey } { ' • ' }\n\t\t\t\t\t\t<FontAwesomeIcon icon={ faCodeBranch } />{ ' ' }\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={ branchUrl }\n\t\t\t\t\t\t\ttarget={ '_blank' }\n\t\t\t\t\t\t\tclassName={ 'report-link' }\n\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ metadata.branch }\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t{ metadata.pr_number ? ' • ' : '' }\n\t\t\t\t\t\t{ metadata.pr_number && (\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref={ prUrl }\n\t\t\t\t\t\t\t\ttarget={ '_blank' }\n\t\t\t\t\t\t\t\tclassName={ 'report-link' }\n\t\t\t\t\t\t\t\trel={ 'noreferrer' }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tPR { metadata.pr_number }\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</small>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t}\n\n\tgetTestResultsCell( statistic ) {\n\t\tconst counts = [ 'failed', 'passed', 'total' ].map( ( label, id ) => {\n\t\t\tconst count =\n\t\t\t\tlabel === 'failed'\n\t\t\t\t\t? statistic[ label ] + statistic.broken\n\t\t\t\t\t: statistic[ label ];\n\t\t\treturn (\n\t\t\t\t<Badge key={ id } className={ `label label-status-${ label }` }>\n\t\t\t\t\t{ label } { count }\n\t\t\t\t</Badge>\n\t\t\t);\n\t\t} );\n\n\t\treturn <div>{ counts }</div>;\n\t}\n\n\tgetMetadataCell( report ) {\n\t\tconst runUrl = `https://github.com/Automattic/jetpack/actions/runs/${ report.metadata.run_id }`;\n\t\treturn (\n\t\t\t<ul className={ 'list-unstyled' }>\n\t\t\t\t<li>\n\t\t\t\t\t<small>\n\t\t\t\t\t\tlast update: { moment( report.lastUpdate ).fromNow() }\n\t\t\t\t\t</small>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<small>\n\t\t\t\t\t\tlast run id:{ ' ' }\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={ runUrl }\n\t\t\t\t\t\t\ttarget={ '_blank' }\n\t\t\t\t\t\t\tclassName={ 'report-link' }\n\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ report.metadata.run_id }\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</small>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Table\n\t\t\t\thover\n\t\t\t\tresponsive=\"sm\"\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"dark\"\n\t\t\t\tclassName=\"reportsTable\"\n\t\t\t>\n\t\t\t\t{ this.getTableHeader() }\n\t\t\t\t<tbody>\n\t\t\t\t\t{ this.state.reports.map( ( report, id ) =>\n\t\t\t\t\t\tthis.getReportRow( report, id )\n\t\t\t\t\t) }\n\t\t\t\t</tbody>\n\t\t\t\t<tfoot>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colSpan={ 3 } />\n\t\t\t\t\t</tr>\n\t\t\t\t</tfoot>\n\t\t\t</Table>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport ReactGA from 'react-ga';\nimport configData from '../config.json';\nimport ReportsTable from './ReportsTable';\n\nexport default class Reports extends React.Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.state = {\n\t\t\treports: [],\n\t\t\tpinnedReports: [],\n\t\t\tdocsSize: undefined,\n\t\t\treportsCount: undefined,\n\t\t\tisDataFetched: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch( './data/reports.json', {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAccept: 'application/json',\n\t\t\t},\n\t\t} )\n\t\t\t.then( ( response ) => response.json() )\n\t\t\t.then( ( jsonData ) => {\n\t\t\t\tconst prReports = { reports: [] };\n\t\t\t\tconst pinnedReports = { reports: [] };\n\n\t\t\t\tfor ( const report of jsonData.reports ) {\n\t\t\t\t\tif ( configData.permanent.includes( report.name ) ) {\n\t\t\t\t\t\tpinnedReports.reports.push( report );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprReports.reports.push( report );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.setState( {\n\t\t\t\t\treports: prReports.reports,\n\t\t\t\t\tpinnedReports: pinnedReports.reports,\n\t\t\t\t\tdocsSize: jsonData.docsSize,\n\t\t\t\t\treportsCount: jsonData.reportsCount,\n\t\t\t\t\tisDataFetched: true,\n\t\t\t\t} );\n\t\t\t} )\n\t\t\t.catch( console.log );\n\t\tReactGA.pageview( '/reports' );\n\t}\n\n\trender() {\n\t\tif ( ! this.state.isDataFetched ) return null;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className={ 'reports-header' }>\n\t\t\t\t\t{ this.state.reportsCount } reports\n\t\t\t\t</div>\n\t\t\t\t<ReportsTable\n\t\t\t\t\treports={ this.state.pinnedReports }\n\t\t\t\t\toptions={ {\n\t\t\t\t\t\treportCount: false,\n\t\t\t\t\t\tsortButtons: false,\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t\t<ReportsTable\n\t\t\t\t\treports={ this.state.reports }\n\t\t\t\t\toptions={ {\n\t\t\t\t\t\treportCount: false,\n\t\t\t\t\t\tsortButtons: true,\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t\t<small className={ 'footnote' }>\n\t\t\t\t\tdocs size: { this.state.docsSize }\n\t\t\t\t</small>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport { Badge } from 'react-bootstrap';\nimport ReactGA from 'react-ga';\nimport ReactEcharts from 'echarts-for-react';\nimport { sort } from '../utils';\nimport moment from 'moment';\n\nexport default class Tests extends React.Component {\n\tstate = {\n\t\ttests: [],\n\t\tdaily: [],\n\t\tisDataFetched: false,\n\t};\n\n\tasync componentDidMount() {\n\t\tawait fetch( './data/tests.json', {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAccept: 'application/json',\n\t\t\t},\n\t\t} )\n\t\t\t.then( ( response ) => response.json() )\n\t\t\t.then( ( jsonData ) => {\n\t\t\t\tthis.setState( {\n\t\t\t\t\ttests: jsonData,\n\t\t\t\t} );\n\t\t\t} )\n\t\t\t.catch( console.log );\n\n\t\tawait fetch( './data/daily.json', {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAccept: 'application/json',\n\t\t\t},\n\t\t} )\n\t\t\t.then( ( response ) => response.json() )\n\t\t\t.then( ( jsonData ) => {\n\t\t\t\tthis.setState( {\n\t\t\t\t\tdaily: jsonData,\n\t\t\t\t} );\n\t\t\t} )\n\t\t\t.catch( console.log );\n\n\t\tthis.setState( {\n\t\t\tisDataFetched: true,\n\t\t} );\n\n\t\tReactGA.pageview( '/tests' );\n\t}\n\n\tgetTotalsBadges( test ) {\n\t\tconst badges = [ 'failed', 'passed', 'skipped', 'total' ].map(\n\t\t\t( label, id ) => {\n\t\t\t\tconst count = test[ label ];\n\n\t\t\t\tconst classHide = count === 0 ? 'hide' : '';\n\n\t\t\t\tlet rate = (\n\t\t\t\t\t( count /\n\t\t\t\t\t\t( test.total -\n\t\t\t\t\t\t\t( label === 'skipped' ? 0 : test.skipped ) ) ) *\n\t\t\t\t\t100\n\t\t\t\t).toFixed( 1 );\n\n\t\t\t\tif ( label === 'total' ) {\n\t\t\t\t\trate = '';\n\t\t\t\t} else {\n\t\t\t\t\trate = isNaN( rate ) ? '' : `${ rate }%`;\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<li key={ id }>\n\t\t\t\t\t\t<Badge\n\t\t\t\t\t\t\tkey={ id }\n\t\t\t\t\t\t\tclassName={ `label label-fill label-status-${ label } ${ classHide }` }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ count } { label }\n\t\t\t\t\t\t\t<Badge className={ `badge-pill stat-pill` }>\n\t\t\t\t\t\t\t\t{ rate }\n\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t</Badge>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\n\t\treturn <ul className=\"list-unstyled\">{ badges }</ul>;\n\t}\n\n\tgetResultsLine( test ) {\n\t\tconst badges = test.results.slice( -500 ).map( ( result, id ) => {\n\t\t\tlet classHasSource = 'no-source';\n\n\t\t\tif ( result.source ) {\n\t\t\t\tclassHasSource = '';\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<Badge\n\t\t\t\t\tkey={ id }\n\t\t\t\t\tclassName={ `has-tooltip label label-small label-status-${ result.status } ${ classHasSource }` }\n\t\t\t\t>\n\t\t\t\t\t&nbsp;\n\t\t\t\t\t<span className=\"tooltip-content\">\n\t\t\t\t\t\t{ moment( result.time ).format( 'MMM Do, h:mm a' ) }\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t{ result.source }\n\t\t\t\t\t</span>\n\t\t\t\t</Badge>\n\t\t\t);\n\t\t} );\n\t\treturn <div>{ badges }</div>;\n\t}\n\n\tgetTestContent( test, id ) {\n\t\treturn (\n\t\t\t<div key={ id } className=\"test-container\">\n\t\t\t\t<h1>{ test.name }</h1>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-sm-auto left\">\n\t\t\t\t\t\t{ this.getTotalsBadges( test ) }\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col left\">\n\t\t\t\t\t\t{ this.getResultsLine( test ) }\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\tif ( ! this.state.isDataFetched ) return null;\n\n\t\t// process tests data\n\t\tconst tests = this.state.tests.tests;\n\t\tfor ( const test of tests ) {\n\t\t\ttest.total = 0;\n\t\t\tfor ( const status of [ 'passed', 'failed', 'skipped' ] ) {\n\t\t\t\ttest[ status ] = test.results.filter(\n\t\t\t\t\t( t ) => t.status === status\n\t\t\t\t).length;\n\t\t\t\ttest.total += test[ status ];\n\t\t\t}\n\n\t\t\ttest.results.sort( ( a, b ) => {\n\t\t\t\treturn a.time - b.time;\n\t\t\t} );\n\t\t}\n\n\t\tlet totalTestResults = 0;\n\t\tconst distinctTests = tests.length;\n\t\tlet failedResults = 0;\n\t\ttests.forEach( ( t ) => {\n\t\t\ttotalTestResults += t.total;\n\t\t\tfailedResults += t.failed;\n\t\t} );\n\t\tconst failedRate = ( failedResults / totalTestResults ).toFixed( 2 );\n\n\t\t// process daily stats data\n\t\tconst dailyStats = this.state.daily;\n\t\tdailyStats.forEach( ( day ) => {\n\t\t\tday.failedRate = ( day.failed / day.total ).toFixed( 2 );\n\t\t} );\n\n\t\tsort( dailyStats, 'date' );\n\n\t\t// chart options\n\t\tconst chartOptions = {\n\t\t\tgrid: {\n\t\t\t\tleft: 50,\n\t\t\t\tright: 50,\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\ttrigger: 'axis',\n\t\t\t\taxisPointer: {\n\t\t\t\t\ttype: 'cross',\n\t\t\t\t},\n\t\t\t},\n\t\t\tlegend: {\n\t\t\t\ttextStyle: {\n\t\t\t\t\tcolor: '#6b6d76',\n\t\t\t\t},\n\t\t\t},\n\t\t\txAxis: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'category',\n\t\t\t\t\tdata: dailyStats.map( function ( e ) {\n\t\t\t\t\t\treturn e.date;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t],\n\t\t\tyAxis: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\ttype: 'dotted',\n\t\t\t\t\t\t\tcolor: '#6b6d76',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\ttype: 'dashed',\n\t\t\t\t\t\t\tcolor: 'rgba(107,109,118,0.47)',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmin: 0,\n\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\tformatter: '{value} %',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\tdataZoom: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'inside',\n\t\t\t\t\tstart: 60,\n\t\t\t\t\tend: 100,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tstart: 60,\n\t\t\t\t\tend: 100,\n\t\t\t\t},\n\t\t\t],\n\t\t\tseries: [\n\t\t\t\t{\n\t\t\t\t\tname: 'failure rate',\n\t\t\t\t\ttype: 'line',\n\t\t\t\t\tyAxisIndex: 1,\n\t\t\t\t\tcolor: '#e38474',\n\t\t\t\t\tsymbol: 'roundRect',\n\t\t\t\t\tsymbolSize: 7,\n\t\t\t\t\tdata: dailyStats.map( function ( e ) {\n\t\t\t\t\t\treturn e.failedRate;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'passed tests',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\tstack: '1',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgba(115, 151, 75, 0.73)',\n\t\t\t\t\tdata: dailyStats.map( function ( e ) {\n\t\t\t\t\t\treturn e.passed;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'failed tests',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\tstack: '1',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgba(253, 90, 62, 0.71)',\n\t\t\t\t\tdata: dailyStats.map( function ( e ) {\n\t\t\t\t\t\treturn e.failed;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'skipped tests',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\tstack: '1',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgba(170, 170, 170, 0.73)',\n\t\t\t\t\tdata: dailyStats.map( function ( e ) {\n\t\t\t\t\t\treturn e.skipped;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"row text-center\">\n\t\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t\t<div className=\"stat-box\">\n\t\t\t\t\t\t\t<span className=\"stat-number\">\n\t\t\t\t\t\t\t\t{ distinctTests }\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<span className=\"stat-description\">tests</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t\t<div className=\"stat-box\">\n\t\t\t\t\t\t\t<span className=\"stat-number\">\n\t\t\t\t\t\t\t\t{ totalTestResults }\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<span className=\"stat-description\">results</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t\t<div className=\"stat-box\">\n\t\t\t\t\t\t\t<span className=\"stat-number\">\n\t\t\t\t\t\t\t\t{ failedResults }\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<span className=\"stat-description\">failures</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t\t<div className=\"stat-box\">\n\t\t\t\t\t\t\t<span className=\"stat-number\">{ failedRate }%</span>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<span className=\"stat-description\">\n\t\t\t\t\t\t\t\tfailure rate\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<hr />\n\t\t\t\t<ReactEcharts option={ chartOptions } />\n\t\t\t\t<hr />\n\t\t\t\t<div>\n\t\t\t\t\t{ tests.map( ( test, id ) =>\n\t\t\t\t\t\tthis.getTestContent( test, id )\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport ReactGA from 'react-ga';\nimport moment from 'moment';\nimport ReactEcharts from 'echarts-for-react';\nimport { sort } from '../utils';\nimport { Badge } from 'react-bootstrap';\n\nexport default class Failures extends React.Component {\n\tstate = {\n\t\terrorsData: {},\n\t\tweeklyData: [],\n\t\tisDataFetched: false,\n\t};\n\n\tasync componentDidMount() {\n\t\tawait fetch( './data/errors.json', {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAccept: 'application/json',\n\t\t\t},\n\t\t} )\n\t\t\t.then( ( response ) => response.json() )\n\t\t\t.then( ( jsonData ) => {\n\t\t\t\tthis.setState( {\n\t\t\t\t\terrorsData: jsonData,\n\t\t\t\t} );\n\t\t\t} )\n\t\t\t.catch( console.log );\n\n\t\tawait fetch( './data/weekly.json', {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAccept: 'application/json',\n\t\t\t},\n\t\t} )\n\t\t\t.then( ( response ) => response.json() )\n\t\t\t.then( ( jsonData ) => {\n\t\t\t\tthis.setState( {\n\t\t\t\t\tweeklyData: jsonData,\n\t\t\t\t} );\n\t\t\t} )\n\t\t\t.catch( console.log );\n\n\t\tthis.setState( {\n\t\t\tisDataFetched: true,\n\t\t} );\n\n\t\tReactGA.pageview( '/failures' );\n\t}\n\n\tgetListOfTests( tests ) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{ tests.map( ( test, id ) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Badge\n\t\t\t\t\t\t\tkey={ id }\n\t\t\t\t\t\t\tclassName=\"label label-status-skipped\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ test.name }{ ' ' }\n\t\t\t\t\t\t\t<Badge className={ `badge-pill stat-pill` }>\n\t\t\t\t\t\t\t\t{ test.times.length }\n\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t</Badge>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\t\t\t</div>\n\t\t);\n\t}\n\n\tgetListOfFailures( results ) {\n\t\tsort( results, 'time', true );\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{ results.map( ( result, id ) => {\n\t\t\t\t\tlet badge = moment( result.time ).format(\n\t\t\t\t\t\t'MMM Do, h:mm a'\n\t\t\t\t\t);\n\n\t\t\t\t\tlet className = 'no-source';\n\n\t\t\t\t\tif ( result.source ) {\n\t\t\t\t\t\tconst url = `${ result.report }/report/#testresult/${ result.source }`;\n\t\t\t\t\t\tbadge = (\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref={ url }\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\tclassName=\"badge-link\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ badge }\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tclassName = '';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Badge\n\t\t\t\t\t\t\tkey={ id }\n\t\t\t\t\t\t\tclassName={ `label label-status-failed ${ className }` }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ badge }\n\t\t\t\t\t\t</Badge>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\t\t\t</div>\n\t\t);\n\t}\n\n\tgetErrorContent( error, id ) {\n\t\tlet details = `${ error.total } times since ${ moment(\n\t\t\terror.oldest\n\t\t).fromNow() }. Last failed ${ moment( error.newest ).fromNow() }`;\n\n\t\tif ( error.total === 1 ) {\n\t\t\tdetails = `once ${ moment( error.oldest ).fromNow() }`;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"error-container\" key={ id }>\n\t\t\t\t<div className=\"row left\">\n\t\t\t\t\t<pre className=\"error-container-trace\">{ error.trace }</pre>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row error-details\">{ details }</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t{ this.getListOfTests( error.tests ) }\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t{ this.getListOfFailures( error.results ) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\tif ( ! this.state.isDataFetched ) return null;\n\n\t\t// process errors data\n\t\tconst errors = this.state.errorsData.errors;\n\n\t\t// calculate some stats for each error\n\t\tfor ( const error of errors ) {\n\t\t\terror.total = error.results.length;\n\t\t\tconst times = error.results.map( ( r ) => r.time );\n\t\t\terror.newest = Math.max( ...times );\n\t\t\terror.oldest = Math.min( ...times );\n\n\t\t\tconst testsNames = [\n\t\t\t\t...new Set( error.results.map( ( r ) => r.test ) ),\n\t\t\t];\n\n\t\t\terror.tests = [];\n\n\t\t\tfor ( const testName of testsNames ) {\n\t\t\t\tconst resultsForTest = error.results.filter(\n\t\t\t\t\t( r ) => r.test === testName\n\t\t\t\t);\n\n\t\t\t\terror.tests.push( {\n\t\t\t\t\tname: testName,\n\t\t\t\t\ttimes: resultsForTest.map( ( r ) => r.time ),\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\terrors.sort( ( a, b ) => {\n\t\t\treturn b.results.length - a.results.length;\n\t\t} );\n\n\t\tconst distinctErrors = errors.length;\n\t\tconst allErrors = errors.map( ( e ) => e.results ).flat();\n\t\tconst totalErrors = allErrors.length;\n\n\t\tconst lastUpdate = moment( this.state.errorsData.lastUpdate ).fromNow();\n\n\t\tconst weeklyStats = this.state.weeklyData;\n\n\t\tweeklyStats.forEach( ( week ) => {\n\t\t\tweek.failedRate = ( week.failed / week.total ).toFixed( 2 );\n\t\t} );\n\n\t\tsort( weeklyStats, 'date' );\n\n\t\tconst chartOptions = {\n\t\t\tgrid: {\n\t\t\t\tleft: 50,\n\t\t\t\tright: 50,\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\ttrigger: 'axis',\n\t\t\t\taxisPointer: {\n\t\t\t\t\ttype: 'cross',\n\t\t\t\t},\n\t\t\t},\n\t\t\tlegend: {\n\t\t\t\ttextStyle: {\n\t\t\t\t\tcolor: '#6b6d76',\n\t\t\t\t},\n\t\t\t},\n\t\t\txAxis: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'category',\n\t\t\t\t\tdata: weeklyStats.map( function ( e ) {\n\t\t\t\t\t\treturn e.date;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t],\n\t\t\tyAxis: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\ttype: 'dotted',\n\t\t\t\t\t\t\tcolor: '#6b6d76',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\ttype: 'dashed',\n\t\t\t\t\t\t\tcolor: '#6b6d76',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmin: 0,\n\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\tformatter: '{value} %',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\tseries: [\n\t\t\t\t{\n\t\t\t\t\tname: 'failure rate',\n\t\t\t\t\ttype: 'line',\n\t\t\t\t\tyAxisIndex: 1,\n\t\t\t\t\tcolor: '#e38474',\n\t\t\t\t\tsymbol: 'roundRect',\n\t\t\t\t\tsymbolSize: 7,\n\t\t\t\t\tdata: weeklyStats.map( function ( e ) {\n\t\t\t\t\t\treturn e.failedRate;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'failed tests',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: '#fd5a3e',\n\t\t\t\t\tdata: weeklyStats.map( function ( e ) {\n\t\t\t\t\t\treturn e.failed;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"row text-center\">\n\t\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t\t<div className=\"stat-box\">\n\t\t\t\t\t\t\t<span className=\"stat-number\">{ totalErrors }</span>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<span className=\"stat-description\">\n\t\t\t\t\t\t\t\ttotal errors\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t\t<div className=\"stat-box\">\n\t\t\t\t\t\t\t<span className=\"stat-number\">\n\t\t\t\t\t\t\t\t{ distinctErrors }\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<span className=\"stat-description\">\n\t\t\t\t\t\t\t\tdistinct errors\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<hr />\n\t\t\t\t<ReactEcharts option={ chartOptions } />\n\t\t\t\t<hr />\n\t\t\t\t<div>\n\t\t\t\t\t{ errors.map( ( error, id ) =>\n\t\t\t\t\t\tthis.getErrorContent( error, id )\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t\t<hr />\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"text-right col small\">\n\t\t\t\t\t\tupdated { lastUpdate }\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport ReactGA from 'react-ga';\n\nimport ReactEcharts from 'echarts-for-react';\n\nexport default class Performance extends React.Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.state = {\n\t\t\trawData: [],\n\t\t\tisDataFetched: false,\n\t\t};\n\t}\n\n\tprepareChartData( jsonData ) {\n\t\tconst result = {};\n\n\t\tconst calcPercent = ( base, comp ) => ( comp / base - 1 ) * 100;\n\n\t\tconst byDate = {};\n\t\tjsonData.forEach( ( record ) => {\n\t\t\tlet date = new Date( record.date );\n\t\t\tdate = date.toISOString().split( 'T' )[ 0 ];\n\t\t\tif ( ! byDate[ date ] ) {\n\t\t\t\tbyDate[ date ] = [];\n\t\t\t}\n\n\t\t\tconst percentage = Object.keys( record.baseAvg ).reduce(\n\t\t\t\t( acc, metric ) => {\n\t\t\t\t\tacc[ metric ] = calcPercent(\n\t\t\t\t\t\trecord.baseAvg[ metric ],\n\t\t\t\t\t\trecord.jetpackAvg[ metric ]\n\t\t\t\t\t);\n\t\t\t\t\treturn acc;\n\t\t\t\t},\n\t\t\t\t{}\n\t\t\t);\n\n\t\t\tbyDate[ date ].push( percentage );\n\t\t} );\n\n\t\tObject.entries( byDate ).forEach( ( [ date, recArry ] ) => {\n\t\t\tconst size = recArry.length;\n\t\t\tresult[ date ] = { date };\n\n\t\t\t// looping through all the keys, and calculating average for specific day\n\t\t\tObject.keys( recArry[ 0 ] ).forEach( ( metric ) => {\n\t\t\t\t// sum\n\t\t\t\tresult[ date ][ metric ] = recArry.reduce(\n\t\t\t\t\t( a, rec ) => a + rec[ metric ],\n\t\t\t\t\t0\n\t\t\t\t);\n\t\t\t\t// calculating average\n\t\t\t\tresult[ date ][ metric ] /= size;\n\t\t\t\t// rounding\n\t\t\t\tresult[ date ][ metric ] =\n\t\t\t\t\tMath.round( result[ date ][ metric ] * 100 ) / 100;\n\t\t\t} );\n\t\t} );\n\n\t\treturn Object.values( result );\n\t}\n\n\tasync componentDidMount() {\n\t\tawait fetch( './data/perf-metrics.json', {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAccept: 'application/json',\n\t\t\t},\n\t\t} )\n\t\t\t.then( ( response ) => response.json() )\n\t\t\t.then( ( jsonData ) => {\n\t\t\t\tthis.setState( {\n\t\t\t\t\trawData: jsonData,\n\t\t\t\t\tisDataFetched: true,\n\t\t\t\t} );\n\t\t\t} )\n\t\t\t.catch( console.log );\n\n\t\tReactGA.pageview( 'performance' );\n\t}\n\n\trender() {\n\t\tif ( ! this.state.isDataFetched ) return null;\n\n\t\tconst chartData = this.prepareChartData( this.state.rawData );\n\n\t\tconst chartOptions = {\n\t\t\tgrid: {\n\t\t\t\tleft: 40,\n\t\t\t\tright: 0,\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\ttrigger: 'axis',\n\t\t\t\taxisPointer: {\n\t\t\t\t\ttype: 'cross',\n\t\t\t\t},\n\t\t\t},\n\t\t\tlegend: {\n\t\t\t\ttextStyle: {\n\t\t\t\t\tcolor: '#6b6d76',\n\t\t\t\t},\n\t\t\t},\n\t\t\txAxis: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'category',\n\t\t\t\t\tdata: chartData.map( function ( e ) {\n\t\t\t\t\t\treturn e.date;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t],\n\t\t\tyAxis: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\ttype: 'dotted',\n\t\t\t\t\t\t\tcolor: '#6b6d76',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\ttype: 'dashed',\n\t\t\t\t\t\t\tcolor: 'rgba(107,109,118,0.47)',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmin: 0,\n\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\tformatter: '{value} %',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\tdataZoom: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'inside',\n\t\t\t\t\tstart: 70,\n\t\t\t\t\tend: 100,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tstart: 70,\n\t\t\t\t\tend: 100,\n\t\t\t\t},\n\t\t\t],\n\t\t\tseries: [\n\t\t\t\t{\n\t\t\t\t\tname: 'loaded',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgba(115, 151, 75, 0.73)',\n\t\t\t\t\tdata: chartData.map( function ( e ) {\n\t\t\t\t\t\treturn e.loaded;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'firstContentfulPaint',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgba(0,123,255,0.73)',\n\t\t\t\t\tdata: chartData.map( function ( e ) {\n\t\t\t\t\t\treturn e.firstContentfulPaint;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'type',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgba(253,90,62,0.71)',\n\t\t\t\t\tdata: chartData.map( function ( e ) {\n\t\t\t\t\t\treturn e.type;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'focus',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgb(107,109,118)',\n\t\t\t\t\tdata: chartData.map( function ( e ) {\n\t\t\t\t\t\treturn e.focus;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'inserterOpen',\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: 'series',\n\t\t\t\t\t},\n\t\t\t\t\tcolor: 'rgb(160,248,228)',\n\t\t\t\t\tdata: chartData.map( function ( e ) {\n\t\t\t\t\t\treturn e.inserterOpen;\n\t\t\t\t\t} ),\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h4>Performance metrics</h4>\n\t\t\t\t<ReactEcharts option={ chartOptions } />\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport ReactGA from 'react-ga';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Navbar, Container, Nav } from 'react-bootstrap';\nimport Reports from './components/Reports';\nimport { HashRouter, Route, Routes } from 'react-router-dom';\nimport Tests from './components/Tests';\nimport Failures from './components/Failures';\nimport Performance from './components/Performance';\n\nconst TRACKING_ID = 'UA-208890082-1';\nReactGA.initialize( TRACKING_ID );\n\nfunction App() {\n\tconst basename = '/jetpack-e2e-reports';\n\n\treturn (\n\t\t<Container fluid className=\"App\">\n\t\t\t<div className=\"App-content\">\n\t\t\t\t<Navbar variant=\"dark\" expand=\"md\" className=\"app-nav-bar\">\n\t\t\t\t\t<Container fluid className=\"app-nav-bar-inner-container\">\n\t\t\t\t\t\t<Navbar.Brand href={ `${basename}/#/` }>\n\t\t\t\t\t\t\tJetpack test dashboard\n\t\t\t\t\t\t</Navbar.Brand>\n\t\t\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t\t\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t\t\t\t<Nav\n\t\t\t\t\t\t\t\tactiveKey={ location.pathname }\n\t\t\t\t\t\t\t\tclassName=\"ml-auto\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Nav.Link href={ `${basename}/#/reports` }>\n\t\t\t\t\t\t\t\t\tReports\n\t\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t\t<Nav.Link href={ `${basename}/#/tests` }>\n\t\t\t\t\t\t\t\t\tTests\n\t\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t\t<Nav.Link href={ `${basename}/#/failures` }>\n\t\t\t\t\t\t\t\t\tFailures\n\t\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t\t<Nav.Link href={ `${basename}/#/performance` }>\n\t\t\t\t\t\t\t\t\tPerformance\n\t\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t</Nav>\n\t\t\t\t\t\t</Navbar.Collapse>\n\t\t\t\t\t</Container>\n\t\t\t\t</Navbar>\n\t\t\t\t<HashRouter>\n\t\t\t\t\t<Routes>\n\t\t\t\t\t\t<Route exact path=\"/\" element={ <Reports /> } />\n\t\t\t\t\t\t<Route exact path=\"/reports\" element={ <Reports /> } />\n\t\t\t\t\t\t<Route exact path=\"/tests\" element={ <Tests /> } />\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tpath=\"/failures\"\n\t\t\t\t\t\t\telement={ <Failures /> }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tpath=\"/performance\"\n\t\t\t\t\t\t\telement={ <Performance /> }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Routes>\n\t\t\t\t</HashRouter>\n\t\t\t</div>\n\t\t\t<footer className=\"App-footer\">\n\t\t\t\t<div>\n\t\t\t\t\t<a\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\thref=\"https://github.com/Automattic/jetpack-e2e-reports/\"\n\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t>\n\t\t\t\t\t\tCode\n\t\t\t\t\t</a>\n\t\t\t\t\t{ ' • ' }\n\t\t\t\t\t<a\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\thref=\"https://github.com/Automattic/jetpack-e2e-reports/actions\"\n\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t>\n\t\t\t\t\t\tActions\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</footer>\n\t\t</Container>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById( 'root' )\n);\n"],"sourceRoot":""}