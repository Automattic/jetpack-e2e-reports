{
  "uid" : "5cf6e27a4bc5908a",
  "name" : "Eventbrite block",
  "fullName" : "Eventbrite block",
  "historyId" : "0b4a15ebb314cfb213eb3e305bfce89d",
  "time" : {
    "start" : 1637719255907,
    "stop" : 1637719265481,
    "duration" : 9574
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const eventId = \"112691417062\";\n  await (0, _reporters.testStep)(\n    \"Can visit the block editor and add a Eventbrite block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _wpAdmin.EventbriteBlock.name(),\n        _wpAdmin.EventbriteBlock.title()\n      );\n      const eventbriteBlock = new _wpAdmin.EventbriteBlock(\n        blockId,\n        page,\n        eventId\n      );\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _reporters.testStep)(\n    \"Can publish a post with a Eventbrite block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporters.testStep)(\n    \"Can assert that Eventbrite block is rendered\",\n    async () => {\n      const frontend = await _pages.PostFrontendPage.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wpAdmin.EventbriteBlock, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const eventId = &quot;112691417062&quot;;\n  await (0, _reporters.testStep)(\n    &quot;Can visit the block editor and add a Eventbrite block&quot;,\n    async () =&gt; {\n      const blockId = await blockEditor.insertBlock(\n        _wpAdmin.EventbriteBlock.name(),\n        _wpAdmin.EventbriteBlock.title()\n      );\n      const eventbriteBlock = new _wpAdmin.EventbriteBlock(\n        blockId,\n        page,\n        eventId\n      );\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _reporters.testStep)(\n    &quot;Can publish a post with a Eventbrite block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporters.testStep)(\n    &quot;Can assert that Eventbrite block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _pages.PostFrontendPage.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wpAdmin.EventbriteBlock, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1637719241539,
        "stop" : 1637719247915,
        "duration" : 6376
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1637719253263,
        "stop" : 1637719255896,
        "duration" : 2633
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  const eventId = \"112691417062\";\n  await (0, _reporters.testStep)(\n    \"Can visit the block editor and add a Eventbrite block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _wpAdmin.EventbriteBlock.name(),\n        _wpAdmin.EventbriteBlock.title()\n      );\n      const eventbriteBlock = new _wpAdmin.EventbriteBlock(\n        blockId,\n        page,\n        eventId\n      );\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _reporters.testStep)(\n    \"Can publish a post with a Eventbrite block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporters.testStep)(\n    \"Can assert that Eventbrite block is rendered\",\n    async () => {\n      const frontend = await _pages.PostFrontendPage.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wpAdmin.EventbriteBlock, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Can visit the block editor and add a Eventbrite block",
      "time" : {
        "start" : 1637719255951,
        "stop" : 1637719261642,
        "duration" : 5691
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Eventbrite",
        "time" : {
          "start" : 1637719255954,
          "stop" : 1637719256814,
          "duration" : 860
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: eventbrite",
        "time" : {
          "start" : 1637719256817,
          "stop" : 1637719257112,
          "duration" : 295
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Can publish a post with a Eventbrite block",
      "time" : {
        "start" : 1637719261654,
        "stop" : 1637719264338,
        "duration" : 2684
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Publish post",
        "time" : {
          "start" : 1637719261842,
          "stop" : 1637719263788,
          "duration" : 1946
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "View post",
        "time" : {
          "start" : 1637719263791,
          "stop" : 1637719264338,
          "duration" : 547
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Can assert that Eventbrite block is rendered",
      "time" : {
        "start" : 1637719264343,
        "stop" : 1637719265429,
        "duration" : 1086
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "tag",
    "value" : "Jetpack version: 10.4-a.10-18b23b2f223e8d619e87d4d6f932a53db1e97544"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 15,
        "unknown" : 0,
        "total" : 15
      },
      "items" : [ {
        "uid" : "2c89138137793808",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21813/report/#testresult/2c89138137793808",
        "status" : "passed",
        "time" : {
          "start" : 1637716904725,
          "stop" : 1637716914745,
          "duration" : 10020
        }
      }, {
        "uid" : "ca60a8d1dd351c01",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21813/report/#testresult/ca60a8d1dd351c01",
        "status" : "passed",
        "time" : {
          "start" : 1637699265274,
          "stop" : 1637699277989,
          "duration" : 12715
        }
      }, {
        "uid" : "486a3b8440292b4d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21813/report/#testresult/486a3b8440292b4d",
        "status" : "passed",
        "time" : {
          "start" : 1637684091125,
          "stop" : 1637684100920,
          "duration" : 9795
        }
      }, {
        "uid" : "880d1d639507aba8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21813/report/#testresult/880d1d639507aba8",
        "status" : "passed",
        "time" : {
          "start" : 1637677651124,
          "stop" : 1637677661989,
          "duration" : 10865
        }
      }, {
        "uid" : "fd898a1dfccfc319",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21813/report/#testresult/fd898a1dfccfc319",
        "status" : "passed",
        "time" : {
          "start" : 1637674862938,
          "stop" : 1637674874973,
          "duration" : 12035
        }
      }, {
        "uid" : "fb3f18f89fdf3472",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21813/report/#testresult/fb3f18f89fdf3472",
        "status" : "passed",
        "time" : {
          "start" : 1637673919644,
          "stop" : 1637673929946,
          "duration" : 10302
        }
      }, {
        "uid" : "f4ac1453fe379c90",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21813/report/#testresult/f4ac1453fe379c90",
        "status" : "passed",
        "time" : {
          "start" : 1637617452915,
          "stop" : 1637617463790,
          "duration" : 10875
        }
      }, {
        "uid" : "99453c29863be087",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21813/report/#testresult/99453c29863be087",
        "status" : "passed",
        "time" : {
          "start" : 1637614032613,
          "stop" : 1637614042871,
          "duration" : 10258
        }
      }, {
        "uid" : "62b625c1bee2f783",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21813/report/#testresult/62b625c1bee2f783",
        "status" : "passed",
        "time" : {
          "start" : 1637613039824,
          "stop" : 1637613050410,
          "duration" : 10586
        }
      }, {
        "uid" : "e975874f46f2ce3a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21813/report/#testresult/e975874f46f2ce3a",
        "status" : "passed",
        "time" : {
          "start" : 1637611906330,
          "stop" : 1637611917194,
          "duration" : 10864
        }
      }, {
        "uid" : "f2051c06c0e9a7bf",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21813/report/#testresult/f2051c06c0e9a7bf",
        "status" : "passed",
        "time" : {
          "start" : 1637341984549,
          "stop" : 1637341993756,
          "duration" : 9207
        }
      }, {
        "uid" : "afd931ad353eace6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21813/report/#testresult/afd931ad353eace6",
        "status" : "passed",
        "time" : {
          "start" : 1637336755387,
          "stop" : 1637336766227,
          "duration" : 10840
        }
      }, {
        "uid" : "de55f043c8dd0077",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21813/report/#testresult/de55f043c8dd0077",
        "status" : "passed",
        "time" : {
          "start" : 1637322005850,
          "stop" : 1637322015368,
          "duration" : 9518
        }
      }, {
        "uid" : "5c751b241e131024",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21813/report/#testresult/5c751b241e131024",
        "status" : "passed",
        "time" : {
          "start" : 1637275030200,
          "stop" : 1637275043588,
          "duration" : 13388
        }
      } ]
    },
    "tags" : [ "Jetpack version: 10.4-a.10-18b23b2f223e8d619e87d4d6f932a53db1e97544" ]
  },
  "source" : "5cf6e27a4bc5908a.json",
  "parameterValues" : [ ]
}