{
  "uid" : "2b8163fbedafad23",
  "name" : "Pinterest block",
  "fullName" : "Pinterest block",
  "historyId" : "bf919c5c1253559f0d007402decf47af",
  "time" : {
    "start" : 1633940755340,
    "stop" : 1633940762136,
    "duration" : 6796
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _reporter.testStep)(\"Add a Pinterest block\", async () => {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const pinId = _config.default.get(&quot;blocks.pinterest.pinId&quot;);\n\n  await (0, _reporter.testStep)(&quot;Add a Pinterest block&quot;, async () =&gt; {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    &quot;Publish a post with a Pinterest block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can assert that Pinterest block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1633940748971,
        "stop" : 1633940755333,
        "duration" : 6362
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1633940762291,
        "stop" : 1633940764794,
        "duration" : 2503
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _reporter.testStep)(\"Add a Pinterest block\", async () => {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Add a Pinterest block",
      "time" : {
        "start" : 1633940755378,
        "stop" : 1633940757615,
        "duration" : 2237
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Pinterest",
        "time" : {
          "start" : 1633940755380,
          "stop" : 1633940756167,
          "duration" : 787
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: pinterest",
        "time" : {
          "start" : 1633940756170,
          "stop" : 1633940756496,
          "duration" : 326
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Publish a post with a Pinterest block",
      "time" : {
        "start" : 1633940757618,
        "stop" : 1633940761649,
        "duration" : 4031
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Publish post",
        "time" : {
          "start" : 1633940757741,
          "stop" : 1633940760876,
          "duration" : 3135
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "View post",
        "time" : {
          "start" : 1633940760890,
          "stop" : 1633940761649,
          "duration" : 759
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Can assert that Pinterest block is rendered",
      "time" : {
        "start" : 1633940761652,
        "stop" : 1633940762057,
        "duration" : 405
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "tag",
    "value" : "Jetpack version: 10.3-alpha-fae3329e6f0008b865ab6ed1d17227220bc2ebfb"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 10,
        "unknown" : 0,
        "total" : 10
      },
      "items" : [ {
        "uid" : "d84b7e2b355b076c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21253/report/#testresult/d84b7e2b355b076c",
        "status" : "passed",
        "time" : {
          "start" : 1633696093226,
          "stop" : 1633696103631,
          "duration" : 10405
        }
      }, {
        "uid" : "6ecc85461508e962",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21253/report/#testresult/6ecc85461508e962",
        "status" : "passed",
        "time" : {
          "start" : 1633684370992,
          "stop" : 1633684379195,
          "duration" : 8203
        }
      }, {
        "uid" : "ddc536d2bb5923ee",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21253/report/#testresult/ddc536d2bb5923ee",
        "status" : "passed",
        "time" : {
          "start" : 1633517437660,
          "stop" : 1633517445208,
          "duration" : 7548
        }
      }, {
        "uid" : "62e7512ebe5b04a3",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21253/report/#testresult/62e7512ebe5b04a3",
        "status" : "passed",
        "time" : {
          "start" : 1633513082402,
          "stop" : 1633513091973,
          "duration" : 9571
        }
      }, {
        "uid" : "1911dffee70c227e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21253/report/#testresult/1911dffee70c227e",
        "status" : "passed",
        "time" : {
          "start" : 1633432770252,
          "stop" : 1633432778297,
          "duration" : 8045
        }
      }, {
        "uid" : "e4dde94351728c4b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21253/report/#testresult/e4dde94351728c4b",
        "status" : "passed",
        "time" : {
          "start" : 1633428159371,
          "stop" : 1633428169281,
          "duration" : 9910
        }
      }, {
        "uid" : "91d394fc973a8afd",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21253/report/#testresult/91d394fc973a8afd",
        "status" : "passed",
        "time" : {
          "start" : 1633331206709,
          "stop" : 1633331213479,
          "duration" : 6770
        }
      }, {
        "uid" : "2a55b3d370fec033",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21253/report/#testresult/2a55b3d370fec033",
        "status" : "passed",
        "time" : {
          "start" : 1633077458234,
          "stop" : 1633077466612,
          "duration" : 8378
        }
      }, {
        "uid" : "a79a0cbea16f6378",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21253/report/#testresult/a79a0cbea16f6378",
        "status" : "passed",
        "time" : {
          "start" : 1633018205127,
          "stop" : 1633018214120,
          "duration" : 8993
        }
      } ]
    },
    "tags" : [ "Jetpack version: 10.3-alpha-fae3329e6f0008b865ab6ed1d17227220bc2ebfb" ]
  },
  "source" : "2b8163fbedafad23.json",
  "parameterValues" : [ ]
}