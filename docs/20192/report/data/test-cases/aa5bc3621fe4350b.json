{
  "uid" : "aa5bc3621fe4350b",
  "name" : "MailChimp Block",
  "fullName" : "MailChimp Block",
  "historyId" : "1e0e5667b8c419e68fc1ae6a0d73dd61",
  "time" : {
    "start" : 1625090909430,
    "stop" : 1625090923303,
    "duration" : 13873
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a MailChimp block\",\n    async () => {\n      blockId = await blockEditor.insertBlock(\n        _mailchimp.default.name(),\n        _mailchimp.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\"Can connect to a MailChimp\", async () => {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that MailChimp block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a MailChimp block&quot;,\n    async () =&gt; {\n      blockId = await blockEditor.insertBlock(\n        _mailchimp.default.name(),\n        _mailchimp.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(&quot;Can connect to a MailChimp&quot;, async () =&gt; {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that MailChimp block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "98c58a800e0b9605",
      "status" : "passed",
      "time" : {
        "start" : 1625086990577,
        "stop" : 1625087007078,
        "duration" : 16501
      }
    }, {
      "uid" : "777707fc641e6f93",
      "status" : "passed",
      "time" : {
        "start" : 1625080473109,
        "stop" : 1625080493129,
        "duration" : 20020
      }
    }, {
      "uid" : "49c486ac584b2e3b",
      "status" : "passed",
      "time" : {
        "start" : 1625071472583,
        "stop" : 1625071489162,
        "duration" : 16579
      }
    }, {
      "uid" : "af2d7b029ed0c1b3",
      "status" : "passed",
      "time" : {
        "start" : 1625010880582,
        "stop" : 1625010900034,
        "duration" : 19452
      }
    }, {
      "uid" : "3e90ec73119e7dae",
      "status" : "passed",
      "time" : {
        "start" : 1625009197996,
        "stop" : 1625009216010,
        "duration" : 18014
      }
    }, {
      "uid" : "344271edfc6dc2d1",
      "status" : "passed",
      "time" : {
        "start" : 1624995162619,
        "stop" : 1624995184617,
        "duration" : 21998
      }
    }, {
      "uid" : "c43a74f3b7fb0be1",
      "status" : "passed",
      "time" : {
        "start" : 1624914572978,
        "stop" : 1624914587564,
        "duration" : 14586
      }
    }, {
      "uid" : "f66c86cef79dbea3",
      "status" : "passed",
      "time" : {
        "start" : 1624910644493,
        "stop" : 1624910667756,
        "duration" : 23263
      }
    }, {
      "uid" : "c7e660849f221466",
      "status" : "passed",
      "time" : {
        "start" : 1624909447560,
        "stop" : 1624909461011,
        "duration" : 13451
      }
    }, {
      "uid" : "2e1af4e9b39e566d",
      "status" : "passed",
      "time" : {
        "start" : 1624899984371,
        "stop" : 1624899998143,
        "duration" : 13772
      }
    }, {
      "uid" : "6d9776549cdb0049",
      "status" : "passed",
      "time" : {
        "start" : 1624851516935,
        "stop" : 1624851533702,
        "duration" : 16767
      }
    } ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 5,
        "unknown" : 0,
        "total" : 5
      },
      "items" : [ {
        "uid" : "ec659372151e61d7",
        "status" : "passed",
        "time" : {
          "start" : 1625086990577,
          "stop" : 1625087007078,
          "duration" : 16501
        }
      }, {
        "uid" : "ded880e52cd809f1",
        "status" : "passed",
        "time" : {
          "start" : 1625080473109,
          "stop" : 1625080493129,
          "duration" : 20020
        }
      }, {
        "uid" : "6832c08b0bef820a",
        "status" : "passed",
        "time" : {
          "start" : 1625071472583,
          "stop" : 1625071489162,
          "duration" : 16579
        }
      }, {
        "uid" : "bc7003ffc5a1c706",
        "status" : "passed",
        "time" : {
          "start" : 1625010880582,
          "stop" : 1625010900034,
          "duration" : 19452
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "aa5bc3621fe4350b.json",
  "parameterValues" : [ ]
}