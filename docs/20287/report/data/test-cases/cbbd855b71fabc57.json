{
  "uid" : "cbbd855b71fabc57",
  "name" : "Pay with PayPal",
  "fullName" : "Pay with PayPal",
  "historyId" : "2b956f1af1e91da7ea3b442b8c2cddca",
  "time" : {
    "start" : 1626053661232,
    "stop" : 1626053671143,
    "duration" : 9911
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pay with PayPal block\",\n    async () => {\n      await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n      blockId = await blockEditor.insertBlock(\n        _simplePayments.default.name(),\n        _simplePayments.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can fill details of Pay with PayPal block\",\n    async () => {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that Pay with PayPal block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a Pay with PayPal block&quot;,\n    async () =&gt; {\n      await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n      blockId = await blockEditor.insertBlock(\n        _simplePayments.default.name(),\n        _simplePayments.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can fill details of Pay with PayPal block&quot;,\n    async () =&gt; {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that Pay with PayPal block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 9,
        "unknown" : 0,
        "total" : 9
      },
      "items" : [ {
        "uid" : "915315f4e92eee1",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20287/report/#testresult/915315f4e92eee1",
        "status" : "passed",
        "time" : {
          "start" : 1626043942377,
          "stop" : 1626043952222,
          "duration" : 9845
        }
      }, {
        "uid" : "3541a26b231f82a0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20287/report/#testresult/3541a26b231f82a0",
        "status" : "passed",
        "time" : {
          "start" : 1626041608235,
          "stop" : 1626041616617,
          "duration" : 8382
        }
      }, {
        "uid" : "28c764c72e48e16b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20287/report/#testresult/28c764c72e48e16b",
        "status" : "passed",
        "time" : {
          "start" : 1625822363054,
          "stop" : 1625822369466,
          "duration" : 6412
        }
      }, {
        "uid" : "23dd054cc594cdd9",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20287/report/#testresult/23dd054cc594cdd9",
        "status" : "passed",
        "time" : {
          "start" : 1625803149303,
          "stop" : 1625803157106,
          "duration" : 7803
        }
      }, {
        "uid" : "d2e22ada833ff139",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20287/report/#testresult/d2e22ada833ff139",
        "status" : "passed",
        "time" : {
          "start" : 1625705927029,
          "stop" : 1625705934776,
          "duration" : 7747
        }
      }, {
        "uid" : "93f2ccfc351f135a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20287/report/#testresult/93f2ccfc351f135a",
        "status" : "passed",
        "time" : {
          "start" : 1625642983061,
          "stop" : 1625642990301,
          "duration" : 7240
        }
      }, {
        "uid" : "36e586e1bdf71f61",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20287/report/#testresult/36e586e1bdf71f61",
        "status" : "passed",
        "time" : {
          "start" : 1625631993154,
          "stop" : 1625632001020,
          "duration" : 7866
        }
      }, {
        "uid" : "42ca1931e1095567",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20287/report/#testresult/42ca1931e1095567",
        "status" : "passed",
        "time" : {
          "start" : 1625630658216,
          "stop" : 1625630666058,
          "duration" : 7842
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "cbbd855b71fabc57.json",
  "parameterValues" : [ ]
}