{
  "uid" : "308afe6af0cc2e57",
  "name" : "Can perform search with default settings",
  "fullName" : "Can perform search with default settings",
  "historyId" : "8a48effa07b2a0dc8118fcc35772e118",
  "time" : {
    "start" : 1625520570124,
    "stop" : 1625520572642,
    "duration" : 2518
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _testSetup.step)(\n    \"Can open the overlay by entering a query\",\n    async () => {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can show search controls in the overlay\",\n    async () => {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can show search results in the overlay\",\n    async () => {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can sort results by relevance by default\",\n    async () => {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        \"<mark>Test1</mark> Record 1\"\n      );\n    }\n  );\n  await (0, _testSetup.step)(\"Can edit query in search form\", async () => {\n    await homepage.enterQueryToOverlay(\"test2\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 1\"\n    );\n  });\n  await (0, _testSetup.step)(\"Can change sort order\", async () => {\n    await homepage.chooseSortingLink(\"newest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"newest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n    await homepage.chooseSortingLink(\"oldest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"oldest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n  });\n  await (0, _testSetup.step)(\"Can apply filters\", async () => {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n  });\n  await (0, _testSetup.step)(\n    \"Can close overlay by clicking the cross\",\n    async () => {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  await (0, _testSetup.step)(\n    &quot;Can open the overlay by entering a query&quot;,\n    async () =&gt; {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can show search controls in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can show search results in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can sort results by relevance by default&quot;,\n    async () =&gt; {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        &quot;&lt;mark&gt;Test1&lt;/mark&gt; Record 1&quot;\n      );\n    }\n  );\n  await (0, _testSetup.step)(&quot;Can edit query in search form&quot;, async () =&gt; {\n    await homepage.enterQueryToOverlay(&quot;test2&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 1&quot;\n    );\n  });\n  await (0, _testSetup.step)(&quot;Can change sort order&quot;, async () =&gt; {\n    await homepage.chooseSortingLink(&quot;newest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;newest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n    await homepage.chooseSortingLink(&quot;oldest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;oldest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n  });\n  await (0, _testSetup.step)(&quot;Can apply filters&quot;, async () =&gt; {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n  });\n  await (0, _testSetup.step)(\n    &quot;Can close overlay by clicking the cross&quot;,\n    async () =&gt; {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "search.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 16,
        "unknown" : 0,
        "total" : 16
      },
      "items" : [ {
        "uid" : "9df9dc13242defc2",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20239/report/#testresult/9df9dc13242defc2",
        "status" : "passed",
        "time" : {
          "start" : 1625463721164,
          "stop" : 1625463723852,
          "duration" : 2688
        }
      }, {
        "uid" : "973a38a5a03c6eda",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20239/report/#testresult/973a38a5a03c6eda",
        "status" : "passed",
        "time" : {
          "start" : 1625460219198,
          "stop" : 1625460221631,
          "duration" : 2433
        }
      }, {
        "uid" : "6d89687fa05b061a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20239/report/#testresult/6d89687fa05b061a",
        "status" : "passed",
        "time" : {
          "start" : 1625457840648,
          "stop" : 1625457843244,
          "duration" : 2596
        }
      }, {
        "uid" : "4e94aa4c43531d82",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20239/report/#testresult/4e94aa4c43531d82",
        "status" : "passed",
        "time" : {
          "start" : 1625449216724,
          "stop" : 1625449219571,
          "duration" : 2847
        }
      }, {
        "uid" : "4489da11e6db399b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20239/report/#testresult/4489da11e6db399b",
        "status" : "passed",
        "time" : {
          "start" : 1625443739755,
          "stop" : 1625443742276,
          "duration" : 2521
        }
      }, {
        "uid" : "55b727a51e6cf07d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20239/report/#testresult/55b727a51e6cf07d",
        "status" : "passed",
        "time" : {
          "start" : 1625440128389,
          "stop" : 1625440130848,
          "duration" : 2459
        }
      }, {
        "uid" : "856d2f0dc49c01e9",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20239/report/#testresult/856d2f0dc49c01e9",
        "status" : "passed",
        "time" : {
          "start" : 1625439064089,
          "stop" : 1625439066815,
          "duration" : 2726
        }
      }, {
        "uid" : "d64d3da975ece6d2",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20239/report/#testresult/d64d3da975ece6d2",
        "status" : "passed",
        "time" : {
          "start" : 1625434963358,
          "stop" : 1625434966154,
          "duration" : 2796
        }
      }, {
        "uid" : "e95fd7322507e4f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20239/report/#testresult/e95fd7322507e4f",
        "status" : "passed",
        "time" : {
          "start" : 1625199715826,
          "stop" : 1625199718199,
          "duration" : 2373
        }
      }, {
        "uid" : "352b425fcc42e45e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20239/report/#testresult/352b425fcc42e45e",
        "status" : "passed",
        "time" : {
          "start" : 1625194697426,
          "stop" : 1625194700133,
          "duration" : 2707
        }
      }, {
        "uid" : "33afefaa0e815463",
        "status" : "passed",
        "time" : {
          "start" : 1625117996556,
          "stop" : 1625117998926,
          "duration" : 2370
        }
      }, {
        "uid" : "c8b57ad8e11295ab",
        "status" : "passed",
        "time" : {
          "start" : 1625112712068,
          "stop" : 1625112714751,
          "duration" : 2683
        }
      }, {
        "uid" : "5b2627dbac38e343",
        "status" : "passed",
        "time" : {
          "start" : 1625111085985,
          "stop" : 1625111088659,
          "duration" : 2674
        }
      }, {
        "uid" : "4302c4eae9dc9a3",
        "status" : "passed",
        "time" : {
          "start" : 1625108045889,
          "stop" : 1625108049024,
          "duration" : 3135
        }
      }, {
        "uid" : "e4f58b0654d73634",
        "status" : "passed",
        "time" : {
          "start" : 1625099302621,
          "stop" : 1625099305344,
          "duration" : 2723
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "308afe6af0cc2e57.json",
  "parameterValues" : [ ]
}