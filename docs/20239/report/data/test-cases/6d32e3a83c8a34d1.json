{
  "uid" : "6d32e3a83c8a34d1",
  "name" : "Eventbrite block",
  "fullName" : "Eventbrite block",
  "historyId" : "0b4a15ebb314cfb213eb3e305bfce89d",
  "time" : {
    "start" : 1625443906506,
    "stop" : 1625443915826,
    "duration" : 9320
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const eventId = \"112691417062\";\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Eventbrite block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _eventbrite.default.name(),\n        _eventbrite.default.title()\n      );\n      const eventbriteBlock = new _eventbrite.default(blockId, page, eventId);\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post with a Eventbrite block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can assert that Eventbrite block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_eventbrite.default, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const eventId = &quot;112691417062&quot;;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a Eventbrite block&quot;,\n    async () =&gt; {\n      const blockId = await blockEditor.insertBlock(\n        _eventbrite.default.name(),\n        _eventbrite.default.title()\n      );\n      const eventbriteBlock = new _eventbrite.default(blockId, page, eventId);\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post with a Eventbrite block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can assert that Eventbrite block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_eventbrite.default, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 11,
        "unknown" : 0,
        "total" : 11
      },
      "items" : [ {
        "uid" : "7942ebaffbf6e7dd",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20239/report/#testresult/7942ebaffbf6e7dd",
        "status" : "passed",
        "time" : {
          "start" : 1625440298407,
          "stop" : 1625440305753,
          "duration" : 7346
        }
      }, {
        "uid" : "3fafa46860a1d4ea",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20239/report/#testresult/3fafa46860a1d4ea",
        "status" : "passed",
        "time" : {
          "start" : 1625439249888,
          "stop" : 1625439259444,
          "duration" : 9556
        }
      }, {
        "uid" : "526e18719d63a926",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20239/report/#testresult/526e18719d63a926",
        "status" : "passed",
        "time" : {
          "start" : 1625435155520,
          "stop" : 1625435164469,
          "duration" : 8949
        }
      }, {
        "uid" : "ba450c0bdd5be934",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20239/report/#testresult/ba450c0bdd5be934",
        "status" : "passed",
        "time" : {
          "start" : 1625199864231,
          "stop" : 1625199874157,
          "duration" : 9926
        }
      }, {
        "uid" : "51b5fcce1c6769a5",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20239/report/#testresult/51b5fcce1c6769a5",
        "status" : "passed",
        "time" : {
          "start" : 1625194885261,
          "stop" : 1625194895431,
          "duration" : 10170
        }
      }, {
        "uid" : "1f61d7e6692c604e",
        "status" : "passed",
        "time" : {
          "start" : 1625118152428,
          "stop" : 1625118160340,
          "duration" : 7912
        }
      }, {
        "uid" : "9174378c95f9decd",
        "status" : "passed",
        "time" : {
          "start" : 1625112896522,
          "stop" : 1625112906455,
          "duration" : 9933
        }
      }, {
        "uid" : "dded80681959b509",
        "status" : "passed",
        "time" : {
          "start" : 1625111271820,
          "stop" : 1625111279242,
          "duration" : 7422
        }
      }, {
        "uid" : "51068108dc864388",
        "status" : "passed",
        "time" : {
          "start" : 1625108277000,
          "stop" : 1625108289466,
          "duration" : 12466
        }
      }, {
        "uid" : "fc966961b28107dc",
        "status" : "passed",
        "time" : {
          "start" : 1625099491113,
          "stop" : 1625099500519,
          "duration" : 9406
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "6d32e3a83c8a34d1.json",
  "parameterValues" : [ ]
}