{
  "uid" : "741909f79101ff39",
  "name" : "WordAds block",
  "fullName" : "WordAds block",
  "historyId" : "18efccdb8f3fb33e445e77a8ef2cffa3",
  "time" : {
    "start" : 1625463849161,
    "stop" : 1625463854154,
    "duration" : 4993
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a WordAds block\",\n    async () => {\n      await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n      blockId = await blockEditor.insertBlock(\n        _wordAds.default.name(),\n        _wordAds.default.title()\n      );\n      await blockEditor.selectPostTitle();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can switch to Wide Skyscraper ad format\",\n    async () => {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that WordAds block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a WordAds block&quot;,\n    async () =&gt; {\n      await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n      blockId = await blockEditor.insertBlock(\n        _wordAds.default.name(),\n        _wordAds.default.title()\n      );\n      await blockEditor.selectPostTitle();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can switch to Wide Skyscraper ad format&quot;,\n    async () =&gt; {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that WordAds block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 15,
        "unknown" : 0,
        "total" : 15
      },
      "items" : [ {
        "uid" : "cc96ed80482bf304",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20239/report/#testresult/cc96ed80482bf304",
        "status" : "passed",
        "time" : {
          "start" : 1625460344953,
          "stop" : 1625460349872,
          "duration" : 4919
        }
      }, {
        "uid" : "5de8ea15275fba91",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20239/report/#testresult/5de8ea15275fba91",
        "status" : "passed",
        "time" : {
          "start" : 1625457967609,
          "stop" : 1625457972472,
          "duration" : 4863
        }
      }, {
        "uid" : "de5e2e426dea0282",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20239/report/#testresult/de5e2e426dea0282",
        "status" : "passed",
        "time" : {
          "start" : 1625449374786,
          "stop" : 1625449380724,
          "duration" : 5938
        }
      }, {
        "uid" : "7fb08afaaaee7cc8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20239/report/#testresult/7fb08afaaaee7cc8",
        "status" : "passed",
        "time" : {
          "start" : 1625443855982,
          "stop" : 1625443860330,
          "duration" : 4348
        }
      }, {
        "uid" : "51d305ced0fad25",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20239/report/#testresult/51d305ced0fad25",
        "status" : "passed",
        "time" : {
          "start" : 1625440249074,
          "stop" : 1625440253631,
          "duration" : 4557
        }
      }, {
        "uid" : "f93fb28aa2b1a2cb",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20239/report/#testresult/f93fb28aa2b1a2cb",
        "status" : "passed",
        "time" : {
          "start" : 1625439195103,
          "stop" : 1625439200858,
          "duration" : 5755
        }
      }, {
        "uid" : "e26e8b9ef864e6e1",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20239/report/#testresult/e26e8b9ef864e6e1",
        "status" : "passed",
        "time" : {
          "start" : 1625435099192,
          "stop" : 1625435105192,
          "duration" : 6000
        }
      }, {
        "uid" : "a81992103a16cfca",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20239/report/#testresult/a81992103a16cfca",
        "status" : "passed",
        "time" : {
          "start" : 1625199822323,
          "stop" : 1625199826432,
          "duration" : 4109
        }
      }, {
        "uid" : "e3e37141e046330f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20239/report/#testresult/e3e37141e046330f",
        "status" : "passed",
        "time" : {
          "start" : 1625194830516,
          "stop" : 1625194835737,
          "duration" : 5221
        }
      }, {
        "uid" : "69227706509f1af0",
        "status" : "passed",
        "time" : {
          "start" : 1625118105301,
          "stop" : 1625118113364,
          "duration" : 8063
        }
      }, {
        "uid" : "201f86fc1fe0a43c",
        "status" : "passed",
        "time" : {
          "start" : 1625112840821,
          "stop" : 1625112845898,
          "duration" : 5077
        }
      }, {
        "uid" : "6b924d8b77ea7dd",
        "status" : "passed",
        "time" : {
          "start" : 1625111214242,
          "stop" : 1625111219170,
          "duration" : 4928
        }
      }, {
        "uid" : "cbc1273a0d7f6786",
        "status" : "passed",
        "time" : {
          "start" : 1625108210044,
          "stop" : 1625108216145,
          "duration" : 6101
        }
      }, {
        "uid" : "71cf7a8f216b277e",
        "status" : "passed",
        "time" : {
          "start" : 1625099435871,
          "stop" : 1625099441218,
          "duration" : 5347
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "741909f79101ff39.json",
  "parameterValues" : [ ]
}