{
  "uid" : "ca30de09e579d76e",
  "name" : "Pay with PayPal",
  "fullName" : "Pay with PayPal",
  "historyId" : "2b956f1af1e91da7ea3b442b8c2cddca",
  "time" : {
    "start" : 1624467110954,
    "stop" : 1624467119900,
    "duration" : 8946
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pay with PayPal block\",\n    async () => {\n      await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n      blockId = await blockEditor.insertBlock(\n        _simplePayments.default.name(),\n        _simplePayments.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can fill details of Pay with PayPal block\",\n    async () => {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that Pay with PayPal block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a Pay with PayPal block&quot;,\n    async () =&gt; {\n      await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n      blockId = await blockEditor.insertBlock(\n        _simplePayments.default.name(),\n        _simplePayments.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can fill details of Pay with PayPal block&quot;,\n    async () =&gt; {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that Pay with PayPal block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f41b436950f2fcb",
      "name" : "1624467080936_beforeAll___Paid_blocks.webm",
      "source" : "f41b436950f2fcb.webm",
      "type" : "video/webm",
      "size" : 1252574
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "5bc1ca496867a16",
      "name" : "1624467038484_beforeAll___ROOT_DESCRIBE_BLOCK.webm",
      "source" : "5bc1ca496867a16.webm",
      "type" : "video/webm",
      "size" : 377127
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pay with PayPal block\",\n    async () => {\n      await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n      blockId = await blockEditor.insertBlock(\n        _simplePayments.default.name(),\n        _simplePayments.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can fill details of Pay with PayPal block\",\n    async () => {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that Pay with PayPal block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "b5dd8facb1dc1a3a",
      "name" : "1624467119723_Paid_blocks___Pay_with_PayPal.webm",
      "source" : "b5dd8facb1dc1a3a.webm",
      "type" : "video/webm",
      "size" : 360996
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "46f7783b31f51fca",
      "status" : "passed",
      "time" : {
        "start" : 1624463011959,
        "stop" : 1624463020181,
        "duration" : 8222
      }
    }, {
      "uid" : "7bfa5b0c52a9598c",
      "status" : "passed",
      "time" : {
        "start" : 1624445281091,
        "stop" : 1624445288907,
        "duration" : 7816
      }
    }, {
      "uid" : "b2407f023c137da6",
      "status" : "passed",
      "time" : {
        "start" : 1624347348659,
        "stop" : 1624347356082,
        "duration" : 7423
      }
    }, {
      "uid" : "bb4d0a9a9e1aacda",
      "status" : "passed",
      "time" : {
        "start" : 1624030036749,
        "stop" : 1624030046130,
        "duration" : 9381
      }
    }, {
      "uid" : "9216cc16710cb89c",
      "status" : "passed",
      "time" : {
        "start" : 1624028580552,
        "stop" : 1624028590036,
        "duration" : 9484
      }
    }, {
      "uid" : "3ee82cbde5a23cb8",
      "status" : "passed",
      "time" : {
        "start" : 1624024750885,
        "stop" : 1624024757308,
        "duration" : 6423
      }
    }, {
      "uid" : "86579d2e3f1fa941",
      "status" : "passed",
      "time" : {
        "start" : 1624015962984,
        "stop" : 1624015970737,
        "duration" : 7753
      }
    }, {
      "uid" : "4111e9f100fcbe22",
      "status" : "passed",
      "time" : {
        "start" : 1623950941093,
        "stop" : 1623950950222,
        "duration" : 9129
      }
    }, {
      "uid" : "d7ae184f421d7f82",
      "status" : "passed",
      "time" : {
        "start" : 1623950241495,
        "stop" : 1623950247838,
        "duration" : 6343
      }
    }, {
      "uid" : "f140ff579963b55a",
      "status" : "broken",
      "statusDetails" : "TimeoutError",
      "time" : {
        "start" : 1623943386596,
        "stop" : 1623943423990,
        "duration" : 37394
      }
    }, {
      "uid" : "e263bfc3ea0c993b",
      "status" : "passed",
      "time" : {
        "start" : 1623941417096,
        "stop" : 1623941425166,
        "duration" : 8070
      }
    } ],
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "ca30de09e579d76e.json",
  "parameterValues" : [ ]
}