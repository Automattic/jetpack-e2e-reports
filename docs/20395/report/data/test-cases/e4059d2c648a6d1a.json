{
  "uid" : "e4059d2c648a6d1a",
  "name" : "WordAds block",
  "fullName" : "WordAds block",
  "historyId" : "18efccdb8f3fb33e445e77a8ef2cffa3",
  "time" : {
    "start" : 1628515118990,
    "stop" : 1628515119066,
    "duration" : 76
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _prerequisites.prerequisitesBuilder)()\n    .withActiveModules([\"wordads\"])\n    .build();\n  let blockId;\n  await (0, _reporter.testStep)(\"Add a WordAds block\", async () => {\n    await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n    blockId = await blockEditor.insertBlock(\n      _wordAds.default.name(),\n      _wordAds.default.title()\n    );\n    await blockEditor.selectPostTitle();\n  });\n  await (0, _reporter.testStep)(\n    \"Switch to Wide Skyscraper ad format\",\n    async () => {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Publish a post and assert that WordAds block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  await (0, _prerequisites.prerequisitesBuilder)()\n    .withActiveModules([&quot;wordads&quot;])\n    .build();\n  let blockId;\n  await (0, _reporter.testStep)(&quot;Add a WordAds block&quot;, async () =&gt; {\n    await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n    blockId = await blockEditor.insertBlock(\n      _wordAds.default.name(),\n      _wordAds.default.title()\n    );\n    await blockEditor.selectPostTitle();\n  });\n  await (0, _reporter.testStep)(\n    &quot;Switch to Wide Skyscraper ad format&quot;,\n    async () =&gt; {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Publish a post and assert that WordAds block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "SyntaxError",
  "statusTrace" : "Unexpected token \n in JSON at position 4096",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "broken",
    "statusMessage" : "SyntaxError",
    "statusTrace" : "Unexpected token \n in JSON at position 4096",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "5a3c2cc4748363d7",
      "name" : "beforeAll - Paid blocks",
      "source" : "5a3c2cc4748363d7.png",
      "type" : "image/png",
      "size" : 248210
    }, {
      "uid" : "ec6414e3738338bc",
      "name" : "1628515118344_beforeAll___Paid_blocks.webm",
      "source" : "ec6414e3738338bc.webm",
      "type" : "video/webm",
      "size" : 514249
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _prerequisites.prerequisitesBuilder)()\n    .withActiveModules([\"wordads\"])\n    .build();\n  let blockId;\n  await (0, _reporter.testStep)(\"Add a WordAds block\", async () => {\n    await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n    blockId = await blockEditor.insertBlock(\n      _wordAds.default.name(),\n      _wordAds.default.title()\n    );\n    await blockEditor.selectPostTitle();\n  });\n  await (0, _reporter.testStep)(\n    \"Switch to Wide Skyscraper ad format\",\n    async () => {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Publish a post and assert that WordAds block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "broken",
    "statusMessage" : "SyntaxError",
    "statusTrace" : "Unexpected token \n in JSON at position 4096",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "614719f4ef47c630",
      "name" : "1628515119040_Paid_blocks___WordAds_block.webm",
      "source" : "614719f4ef47c630.webm",
      "type" : "video/webm",
      "size" : 1409
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 4,
        "skipped" : 0,
        "passed" : 1,
        "unknown" : 0,
        "total" : 6
      },
      "items" : [ {
        "uid" : "34a23c1e778104bd",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/34a23c1e778104bd",
        "status" : "failed",
        "statusDetails" : "expect(received).toMatch(expected)\n",
        "time" : {
          "start" : 1628507999161,
          "stop" : 1628507999188,
          "duration" : 27
        }
      }, {
        "uid" : "ee3e0bcd3df478a5",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/ee3e0bcd3df478a5",
        "status" : "broken",
        "statusDetails" : "SyntaxError",
        "time" : {
          "start" : 1628506358384,
          "stop" : 1628506358426,
          "duration" : 42
        }
      }, {
        "uid" : "cd273df0dbf656f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/cd273df0dbf656f",
        "status" : "broken",
        "statusDetails" : "SyntaxError",
        "time" : {
          "start" : 1627047299400,
          "stop" : 1627047299474,
          "duration" : 74
        }
      }, {
        "uid" : "5c429eb41fbdce4f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/5c429eb41fbdce4f",
        "status" : "passed",
        "time" : {
          "start" : 1626972186205,
          "stop" : 1626972192455,
          "duration" : 6250
        }
      }, {
        "uid" : "aaf6801e574e155d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/aaf6801e574e155d",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1626961182273,
          "stop" : 1626961182296,
          "duration" : 23
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "e4059d2c648a6d1a.json",
  "parameterValues" : [ ]
}