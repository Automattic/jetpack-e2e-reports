{
  "uid" : "c69572e8c5fa01a4",
  "name" : "Can perform search with default settings",
  "fullName" : "Can perform search with default settings",
  "historyId" : "8a48effa07b2a0dc8118fcc35772e118",
  "time" : {
    "start" : 1629384263712,
    "stop" : 1629384267380,
    "duration" : 3668
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _reporter.testStep)(\n    \"Can open the overlay by entering a query\",\n    async () => {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search controls in the overlay\",\n    async () => {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search results in the overlay\",\n    async () => {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can sort results by relevance by default\",\n    async () => {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        \"<mark>Test1</mark> Record 1\"\n      );\n    }\n  );\n  await (0, _reporter.testStep)(\"Can edit query in search form\", async () => {\n    await homepage.enterQueryToOverlay(\"test2\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 1\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can change sort order\", async () => {\n    await homepage.chooseSortingLink(\"newest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"newest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n    await homepage.chooseSortingLink(\"oldest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"oldest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can apply filters\", async () => {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n  });\n  await (0, _reporter.testStep)(\n    \"Can close overlay by clicking the cross\",\n    async () => {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  await (0, _reporter.testStep)(\n    &quot;Can open the overlay by entering a query&quot;,\n    async () =&gt; {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can show search controls in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can show search results in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can sort results by relevance by default&quot;,\n    async () =&gt; {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        &quot;&lt;mark&gt;Test1&lt;/mark&gt; Record 1&quot;\n      );\n    }\n  );\n  await (0, _reporter.testStep)(&quot;Can edit query in search form&quot;, async () =&gt; {\n    await homepage.enterQueryToOverlay(&quot;test2&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 1&quot;\n    );\n  });\n  await (0, _reporter.testStep)(&quot;Can change sort order&quot;, async () =&gt; {\n    await homepage.chooseSortingLink(&quot;newest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;newest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n    await homepage.chooseSortingLink(&quot;oldest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;oldest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n  });\n  await (0, _reporter.testStep)(&quot;Can apply filters&quot;, async () =&gt; {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n  });\n  await (0, _reporter.testStep)(\n    &quot;Can close overlay by clicking the cross&quot;,\n    async () =&gt; {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _reporter.testStep)(\n    \"Can open the overlay by entering a query\",\n    async () => {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search controls in the overlay\",\n    async () => {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search results in the overlay\",\n    async () => {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can sort results by relevance by default\",\n    async () => {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        \"<mark>Test1</mark> Record 1\"\n      );\n    }\n  );\n  await (0, _reporter.testStep)(\"Can edit query in search form\", async () => {\n    await homepage.enterQueryToOverlay(\"test2\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 1\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can change sort order\", async () => {\n    await homepage.chooseSortingLink(\"newest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"newest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n    await homepage.chooseSortingLink(\"oldest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"oldest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can apply filters\", async () => {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n  });\n  await (0, _reporter.testStep)(\n    \"Can close overlay by clicking the cross\",\n    async () => {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Can open the overlay by entering a query",
      "time" : {
        "start" : 1629384263806,
        "stop" : 1629384264480,
        "duration" : 674
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can show search controls in the overlay",
      "time" : {
        "start" : 1629384264483,
        "stop" : 1629384264685,
        "duration" : 202
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can show search results in the overlay",
      "time" : {
        "start" : 1629384264691,
        "stop" : 1629384264746,
        "duration" : 55
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can sort results by relevance by default",
      "time" : {
        "start" : 1629384264748,
        "stop" : 1629384264780,
        "duration" : 32
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can edit query in search form",
      "time" : {
        "start" : 1629384264782,
        "stop" : 1629384265215,
        "duration" : 433
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can change sort order",
      "time" : {
        "start" : 1629384265228,
        "stop" : 1629384266201,
        "duration" : 973
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can apply filters",
      "time" : {
        "start" : 1629384266208,
        "stop" : 1629384267181,
        "duration" : 973
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can close overlay by clicking the cross",
      "time" : {
        "start" : 1629384267183,
        "stop" : 1629384267335,
        "duration" : 152
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "search.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 3,
        "broken" : 5,
        "skipped" : 0,
        "passed" : 51,
        "unknown" : 0,
        "total" : 59
      },
      "items" : [ {
        "uid" : "76dc9ed62ddad402",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/76dc9ed62ddad402",
        "status" : "passed",
        "time" : {
          "start" : 1629381502392,
          "stop" : 1629381505775,
          "duration" : 3383
        }
      }, {
        "uid" : "9321d596c2bcd01a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/9321d596c2bcd01a",
        "status" : "passed",
        "time" : {
          "start" : 1629379832493,
          "stop" : 1629379835879,
          "duration" : 3386
        }
      }, {
        "uid" : "dd254b48f450eae7",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/dd254b48f450eae7",
        "status" : "passed",
        "time" : {
          "start" : 1629373474053,
          "stop" : 1629373476975,
          "duration" : 2922
        }
      }, {
        "uid" : "b2cb0949a67a6067",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/b2cb0949a67a6067",
        "status" : "passed",
        "time" : {
          "start" : 1629372385972,
          "stop" : 1629372389532,
          "duration" : 3560
        }
      }, {
        "uid" : "e66e7f876717e7ef",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/e66e7f876717e7ef",
        "status" : "passed",
        "time" : {
          "start" : 1629369411367,
          "stop" : 1629369414169,
          "duration" : 2802
        }
      }, {
        "uid" : "334fe21cfc35184a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/334fe21cfc35184a",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1629368477417,
          "stop" : 1629368477570,
          "duration" : 153
        }
      }, {
        "uid" : "ef4caffda4a06fbe",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/ef4caffda4a06fbe",
        "status" : "passed",
        "time" : {
          "start" : 1629357911342,
          "stop" : 1629357914924,
          "duration" : 3582
        }
      }, {
        "uid" : "7bd6c21ad91dbada",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/7bd6c21ad91dbada",
        "status" : "passed",
        "time" : {
          "start" : 1629354608352,
          "stop" : 1629354610923,
          "duration" : 2571
        }
      }, {
        "uid" : "c58700bc633cb56e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/c58700bc633cb56e",
        "status" : "passed",
        "time" : {
          "start" : 1629298531204,
          "stop" : 1629298534647,
          "duration" : 3443
        }
      }, {
        "uid" : "c26b82a0ef2b157e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/c26b82a0ef2b157e",
        "status" : "passed",
        "time" : {
          "start" : 1629297666692,
          "stop" : 1629297669349,
          "duration" : 2657
        }
      }, {
        "uid" : "3c6218734b7d0e13",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/3c6218734b7d0e13",
        "status" : "passed",
        "time" : {
          "start" : 1629296350999,
          "stop" : 1629296354689,
          "duration" : 3690
        }
      }, {
        "uid" : "b52660ed21fc680c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/b52660ed21fc680c",
        "status" : "passed",
        "time" : {
          "start" : 1629293178147,
          "stop" : 1629293180703,
          "duration" : 2556
        }
      }, {
        "uid" : "2dd2a728a385e514",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/2dd2a728a385e514",
        "status" : "passed",
        "time" : {
          "start" : 1629291397032,
          "stop" : 1629291399776,
          "duration" : 2744
        }
      }, {
        "uid" : "edb41a00c7f94bfb",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/edb41a00c7f94bfb",
        "status" : "passed",
        "time" : {
          "start" : 1629289964401,
          "stop" : 1629289967226,
          "duration" : 2825
        }
      }, {
        "uid" : "494381e0a9240f01",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/494381e0a9240f01",
        "status" : "passed",
        "time" : {
          "start" : 1629289268302,
          "stop" : 1629289271031,
          "duration" : 2729
        }
      }, {
        "uid" : "7a5720240c161c95",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/7a5720240c161c95",
        "status" : "passed",
        "time" : {
          "start" : 1629288408826,
          "stop" : 1629288412347,
          "duration" : 3521
        }
      }, {
        "uid" : "798ad9d147d45826",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/798ad9d147d45826",
        "status" : "passed",
        "time" : {
          "start" : 1629286499762,
          "stop" : 1629286502820,
          "duration" : 3058
        }
      }, {
        "uid" : "8477cabe61fb4b76",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/8477cabe61fb4b76",
        "status" : "passed",
        "time" : {
          "start" : 1629285505125,
          "stop" : 1629285508273,
          "duration" : 3148
        }
      }, {
        "uid" : "b8b1a96c5463b7cf",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/b8b1a96c5463b7cf",
        "status" : "passed",
        "time" : {
          "start" : 1629284202186,
          "stop" : 1629284204743,
          "duration" : 2557
        }
      }, {
        "uid" : "6d682f2cd6f2dd37",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/6d682f2cd6f2dd37",
        "status" : "passed",
        "time" : {
          "start" : 1629277717640,
          "stop" : 1629277720284,
          "duration" : 2644
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "c69572e8c5fa01a4.json",
  "parameterValues" : [ ]
}