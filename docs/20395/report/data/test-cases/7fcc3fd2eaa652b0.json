{
  "uid" : "7fcc3fd2eaa652b0",
  "name" : "Can perform search with default settings",
  "fullName" : "Can perform search with default settings",
  "historyId" : "8a48effa07b2a0dc8118fcc35772e118",
  "time" : {
    "start" : 1629203119939,
    "stop" : 1629203123228,
    "duration" : 3289
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _reporter.testStep)(\n    \"Can open the overlay by entering a query\",\n    async () => {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search controls in the overlay\",\n    async () => {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search results in the overlay\",\n    async () => {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can sort results by relevance by default\",\n    async () => {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        \"<mark>Test1</mark> Record 1\"\n      );\n    }\n  );\n  await (0, _reporter.testStep)(\"Can edit query in search form\", async () => {\n    await homepage.enterQueryToOverlay(\"test2\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 1\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can change sort order\", async () => {\n    await homepage.chooseSortingLink(\"newest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"newest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n    await homepage.chooseSortingLink(\"oldest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"oldest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can apply filters\", async () => {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n  });\n  await (0, _reporter.testStep)(\n    \"Can close overlay by clicking the cross\",\n    async () => {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  await (0, _reporter.testStep)(\n    &quot;Can open the overlay by entering a query&quot;,\n    async () =&gt; {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can show search controls in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can show search results in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can sort results by relevance by default&quot;,\n    async () =&gt; {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        &quot;&lt;mark&gt;Test1&lt;/mark&gt; Record 1&quot;\n      );\n    }\n  );\n  await (0, _reporter.testStep)(&quot;Can edit query in search form&quot;, async () =&gt; {\n    await homepage.enterQueryToOverlay(&quot;test2&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 1&quot;\n    );\n  });\n  await (0, _reporter.testStep)(&quot;Can change sort order&quot;, async () =&gt; {\n    await homepage.chooseSortingLink(&quot;newest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;newest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n    await homepage.chooseSortingLink(&quot;oldest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;oldest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n  });\n  await (0, _reporter.testStep)(&quot;Can apply filters&quot;, async () =&gt; {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n  });\n  await (0, _reporter.testStep)(\n    &quot;Can close overlay by clicking the cross&quot;,\n    async () =&gt; {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _reporter.testStep)(\n    \"Can open the overlay by entering a query\",\n    async () => {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search controls in the overlay\",\n    async () => {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search results in the overlay\",\n    async () => {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can sort results by relevance by default\",\n    async () => {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        \"<mark>Test1</mark> Record 1\"\n      );\n    }\n  );\n  await (0, _reporter.testStep)(\"Can edit query in search form\", async () => {\n    await homepage.enterQueryToOverlay(\"test2\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 1\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can change sort order\", async () => {\n    await homepage.chooseSortingLink(\"newest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"newest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n    await homepage.chooseSortingLink(\"oldest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"oldest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can apply filters\", async () => {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n  });\n  await (0, _reporter.testStep)(\n    \"Can close overlay by clicking the cross\",\n    async () => {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Can open the overlay by entering a query",
      "time" : {
        "start" : 1629203120027,
        "stop" : 1629203120743,
        "duration" : 716
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can show search controls in the overlay",
      "time" : {
        "start" : 1629203120745,
        "stop" : 1629203120861,
        "duration" : 116
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can show search results in the overlay",
      "time" : {
        "start" : 1629203120864,
        "stop" : 1629203120891,
        "duration" : 27
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can sort results by relevance by default",
      "time" : {
        "start" : 1629203120893,
        "stop" : 1629203120918,
        "duration" : 25
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can edit query in search form",
      "time" : {
        "start" : 1629203120920,
        "stop" : 1629203121317,
        "duration" : 397
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can change sort order",
      "time" : {
        "start" : 1629203121320,
        "stop" : 1629203122211,
        "duration" : 891
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can apply filters",
      "time" : {
        "start" : 1629203122212,
        "stop" : 1629203122998,
        "duration" : 786
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can close overlay by clicking the cross",
      "time" : {
        "start" : 1629203123000,
        "stop" : 1629203123207,
        "duration" : 207
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "search.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 2,
        "broken" : 4,
        "skipped" : 0,
        "passed" : 16,
        "unknown" : 0,
        "total" : 22
      },
      "items" : [ {
        "uid" : "28373230d2207c60",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/28373230d2207c60",
        "status" : "passed",
        "time" : {
          "start" : 1629202374224,
          "stop" : 1629202377653,
          "duration" : 3429
        }
      }, {
        "uid" : "329c58744a408c6b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/329c58744a408c6b",
        "status" : "passed",
        "time" : {
          "start" : 1629201268626,
          "stop" : 1629201271213,
          "duration" : 2587
        }
      }, {
        "uid" : "1052f39cc67b2333",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/1052f39cc67b2333",
        "status" : "passed",
        "time" : {
          "start" : 1629200358239,
          "stop" : 1629200361826,
          "duration" : 3587
        }
      }, {
        "uid" : "ebbfce680126971f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/ebbfce680126971f",
        "status" : "passed",
        "time" : {
          "start" : 1629198558946,
          "stop" : 1629198561588,
          "duration" : 2642
        }
      }, {
        "uid" : "5233591ac82b7927",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/5233591ac82b7927",
        "status" : "passed",
        "time" : {
          "start" : 1629196298338,
          "stop" : 1629196300906,
          "duration" : 2568
        }
      }, {
        "uid" : "ca0f4d70943c234a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/ca0f4d70943c234a",
        "status" : "passed",
        "time" : {
          "start" : 1629194859732,
          "stop" : 1629194863578,
          "duration" : 3846
        }
      }, {
        "uid" : "7e79b79d6e716e3f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/7e79b79d6e716e3f",
        "status" : "passed",
        "time" : {
          "start" : 1629192924922,
          "stop" : 1629192927619,
          "duration" : 2697
        }
      }, {
        "uid" : "e9854e2f1cbd7ad8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/e9854e2f1cbd7ad8",
        "status" : "passed",
        "time" : {
          "start" : 1629187511960,
          "stop" : 1629187515479,
          "duration" : 3519
        }
      }, {
        "uid" : "1f4aac747317401c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/1f4aac747317401c",
        "status" : "passed",
        "time" : {
          "start" : 1629132836100,
          "stop" : 1629132839473,
          "duration" : 3373
        }
      }, {
        "uid" : "c533261ada5bf0ab",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/c533261ada5bf0ab",
        "status" : "passed",
        "time" : {
          "start" : 1629131548453,
          "stop" : 1629131551903,
          "duration" : 3450
        }
      }, {
        "uid" : "37b5a6145a5c1be9",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/37b5a6145a5c1be9",
        "status" : "passed",
        "time" : {
          "start" : 1628874141525,
          "stop" : 1628874144164,
          "duration" : 2639
        }
      }, {
        "uid" : "4e9947577b3f1c04",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/4e9947577b3f1c04",
        "status" : "passed",
        "time" : {
          "start" : 1628857394178,
          "stop" : 1628857396616,
          "duration" : 2438
        }
      }, {
        "uid" : "98148c057df6cbf2",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/98148c057df6cbf2",
        "status" : "passed",
        "time" : {
          "start" : 1628672956943,
          "stop" : 1628672960027,
          "duration" : 3084
        }
      }, {
        "uid" : "27bb7fe5d0a5ded9",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/27bb7fe5d0a5ded9",
        "status" : "passed",
        "time" : {
          "start" : 1628585138283,
          "stop" : 1628585141642,
          "duration" : 3359
        }
      }, {
        "uid" : "7a80e3acd68e002d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/7a80e3acd68e002d",
        "status" : "broken",
        "statusDetails" : "SyntaxError",
        "time" : {
          "start" : 1628518442924,
          "stop" : 1628518443122,
          "duration" : 198
        }
      }, {
        "uid" : "eef7dd86c17096db",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/eef7dd86c17096db",
        "status" : "passed",
        "time" : {
          "start" : 1628515054970,
          "stop" : 1628515058080,
          "duration" : 3110
        }
      }, {
        "uid" : "7eb099e11d82fcb0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/7eb099e11d82fcb0",
        "status" : "failed",
        "statusDetails" : "expect(received).toMatch(expected)\n",
        "time" : {
          "start" : 1628507948757,
          "stop" : 1628507948884,
          "duration" : 127
        }
      }, {
        "uid" : "14b91b535be47545",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/14b91b535be47545",
        "status" : "failed",
        "statusDetails" : "expect(received).toBeTruthy()\n",
        "time" : {
          "start" : 1628506294040,
          "stop" : 1628506295612,
          "duration" : 1572
        }
      }, {
        "uid" : "221c3019ba233ff",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/221c3019ba233ff",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1627047123858,
          "stop" : 1627047159848,
          "duration" : 35990
        }
      }, {
        "uid" : "b28a5e571fd6753b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20395/report/#testresult/b28a5e571fd6753b",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1626971953012,
          "stop" : 1626971987463,
          "duration" : 34451
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "7fcc3fd2eaa652b0.json",
  "parameterValues" : [ ]
}