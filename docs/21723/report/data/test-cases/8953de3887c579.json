{
  "uid" : "8953de3887c579",
  "name" : "Pinterest block",
  "fullName" : "Pinterest block",
  "historyId" : "bf919c5c1253559f0d007402decf47af",
  "time" : {
    "start" : 1637196043865,
    "stop" : 1637196043942,
    "duration" : 77
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _reporters.testStep)(\"Add a Pinterest block\", async () => {\n    const blockId = await blockEditor.insertBlock(\n      _wpAdmin.PinterestBlock.name(),\n      _wpAdmin.PinterestBlock.title()\n    );\n    const pinterestBlock = new _wpAdmin.PinterestBlock(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporters.testStep)(\n    \"Publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporters.testStep)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _pages.PostFrontendPage.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wpAdmin.PinterestBlock, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const pinId = _config.default.get(&quot;blocks.pinterest.pinId&quot;);\n\n  await (0, _reporters.testStep)(&quot;Add a Pinterest block&quot;, async () =&gt; {\n    const blockId = await blockEditor.insertBlock(\n      _wpAdmin.PinterestBlock.name(),\n      _wpAdmin.PinterestBlock.title()\n    );\n    const pinterestBlock = new _wpAdmin.PinterestBlock(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporters.testStep)(\n    &quot;Publish a post with a Pinterest block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporters.testStep)(\n    &quot;Can assert that Pinterest block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _pages.PostFrontendPage.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wpAdmin.PinterestBlock, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "TimeoutError",
  "statusTrace" : "page.waitForSelector: Timeout 20000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"#jp-plugin-container\" to be visible\n============================================================",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : true,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "broken",
    "statusMessage" : "TimeoutError",
    "statusTrace" : "page.waitForSelector: Timeout 20000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"#jp-plugin-container\" to be visible\n============================================================",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "ea6f0359e52b4ab9",
      "name" : "beforeAll - Free blocks",
      "source" : "ea6f0359e52b4ab9.png",
      "type" : "image/png",
      "size" : 20001
    }, {
      "uid" : "354f708d3e95198d",
      "name" : "1637196041323_beforeAll___Free_blocks.webm",
      "source" : "354f708d3e95198d.webm",
      "type" : "video/webm",
      "size" : 323025
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _reporters.testStep)(\"Add a Pinterest block\", async () => {\n    const blockId = await blockEditor.insertBlock(\n      _wpAdmin.PinterestBlock.name(),\n      _wpAdmin.PinterestBlock.title()\n    );\n    const pinterestBlock = new _wpAdmin.PinterestBlock(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporters.testStep)(\n    \"Publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporters.testStep)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _pages.PostFrontendPage.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wpAdmin.PinterestBlock, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "broken",
    "statusMessage" : "TimeoutError",
    "statusTrace" : "page.waitForSelector: Timeout 20000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"#jp-plugin-container\" to be visible\n============================================================",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "445d9570a1ac1032",
      "name" : "1637196043905_Free_blocks___Pinterest_block.webm",
      "source" : "445d9570a1ac1032.webm",
      "type" : "video/webm",
      "size" : 1409
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Timeout waiting for selector",
      "traceRegex" : ".*waiting for selector.*",
      "matchedStatuses" : [ "failed", "broken" ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 6,
        "unknown" : 0,
        "total" : 7
      },
      "items" : [ {
        "uid" : "9c3832365f7a708e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21723/report/#testresult/9c3832365f7a708e",
        "status" : "passed",
        "time" : {
          "start" : 1637121649997,
          "stop" : 1637121654553,
          "duration" : 4556
        }
      }, {
        "uid" : "2e790ebabd242d2a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21723/report/#testresult/2e790ebabd242d2a",
        "status" : "passed",
        "time" : {
          "start" : 1637120277812,
          "stop" : 1637120284426,
          "duration" : 6614
        }
      }, {
        "uid" : "5208d3abb19e50e4",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21723/report/#testresult/5208d3abb19e50e4",
        "status" : "passed",
        "time" : {
          "start" : 1636686762762,
          "stop" : 1636686769176,
          "duration" : 6414
        }
      }, {
        "uid" : "4220306811b1b7e0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21723/report/#testresult/4220306811b1b7e0",
        "status" : "passed",
        "time" : {
          "start" : 1636685746691,
          "stop" : 1636685753872,
          "duration" : 7181
        }
      }, {
        "uid" : "d6ff5307f53eb600",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21723/report/#testresult/d6ff5307f53eb600",
        "status" : "passed",
        "time" : {
          "start" : 1636681569501,
          "stop" : 1636681575954,
          "duration" : 6453
        }
      }, {
        "uid" : "6a09fc0ed9742ef6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21723/report/#testresult/6a09fc0ed9742ef6",
        "status" : "passed",
        "time" : {
          "start" : 1636675290242,
          "stop" : 1636675295724,
          "duration" : 5482
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "8953de3887c579.json",
  "parameterValues" : [ ]
}