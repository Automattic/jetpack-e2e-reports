{
  "uid" : "b956b93d7a33e1cf",
  "name" : "MailChimp Block",
  "fullName" : "MailChimp Block",
  "historyId" : "1e0e5667b8c419e68fc1ae6a0d73dd61",
  "time" : {
    "start" : 1637196011678,
    "stop" : 1637196011771,
    "duration" : 93
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _reporters.testStep)(\"Add a MailChimp block\", async () => {\n    blockId = await blockEditor.insertBlock(\n      _wpAdmin.MailchimpBlock.name(),\n      _wpAdmin.MailchimpBlock.title()\n    );\n  });\n  await (0, _reporters.testStep)(\"Connect to MailChimp\", async () => {\n    const mcBlock = new _wpAdmin.MailchimpBlock(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _reporters.testStep)(\n    \"Publish a post and assert that MailChimp block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _pages.PostFrontendPage.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wpAdmin.MailchimpBlock)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _reporters.testStep)(&quot;Add a MailChimp block&quot;, async () =&gt; {\n    blockId = await blockEditor.insertBlock(\n      _wpAdmin.MailchimpBlock.name(),\n      _wpAdmin.MailchimpBlock.title()\n    );\n  });\n  await (0, _reporters.testStep)(&quot;Connect to MailChimp&quot;, async () =&gt; {\n    const mcBlock = new _wpAdmin.MailchimpBlock(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _reporters.testStep)(\n    &quot;Publish a post and assert that MailChimp block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _pages.PostFrontendPage.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wpAdmin.MailchimpBlock)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "TimeoutError",
  "statusTrace" : "page.waitForSelector: Timeout 20000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"#jp-plugin-container\" to be visible\n============================================================",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : true,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "broken",
    "statusMessage" : "TimeoutError",
    "statusTrace" : "page.waitForSelector: Timeout 20000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"#jp-plugin-container\" to be visible\n============================================================",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "b73dfb00fa0f8c4f",
      "name" : "beforeAll - Paid blocks",
      "source" : "b73dfb00fa0f8c4f.png",
      "type" : "image/png",
      "size" : 20001
    }, {
      "uid" : "a4d24de8e4e73baa",
      "name" : "1637196009276_beforeAll___Paid_blocks.webm",
      "source" : "a4d24de8e4e73baa.webm",
      "type" : "video/webm",
      "size" : 347953
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _reporters.testStep)(\"Add a MailChimp block\", async () => {\n    blockId = await blockEditor.insertBlock(\n      _wpAdmin.MailchimpBlock.name(),\n      _wpAdmin.MailchimpBlock.title()\n    );\n  });\n  await (0, _reporters.testStep)(\"Connect to MailChimp\", async () => {\n    const mcBlock = new _wpAdmin.MailchimpBlock(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _reporters.testStep)(\n    \"Publish a post and assert that MailChimp block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _pages.PostFrontendPage.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wpAdmin.MailchimpBlock)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "broken",
    "statusMessage" : "TimeoutError",
    "statusTrace" : "page.waitForSelector: Timeout 20000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"#jp-plugin-container\" to be visible\n============================================================",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "9d41e1adc085ec0c",
      "name" : "1637196011742_Paid_blocks___MailChimp_Block.webm",
      "source" : "9d41e1adc085ec0c.webm",
      "type" : "video/webm",
      "size" : 1409
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Timeout waiting for selector",
      "traceRegex" : ".*waiting for selector.*",
      "matchedStatuses" : [ "failed", "broken" ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 6,
        "unknown" : 0,
        "total" : 7
      },
      "items" : [ {
        "uid" : "4705eebd1d1e3d8c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21723/report/#testresult/4705eebd1d1e3d8c",
        "status" : "passed",
        "time" : {
          "start" : 1637121573478,
          "stop" : 1637121590080,
          "duration" : 16602
        }
      }, {
        "uid" : "5aab25db47052c63",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21723/report/#testresult/5aab25db47052c63",
        "status" : "passed",
        "time" : {
          "start" : 1637120198039,
          "stop" : 1637120213153,
          "duration" : 15114
        }
      }, {
        "uid" : "daa86ee69e46162d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21723/report/#testresult/daa86ee69e46162d",
        "status" : "passed",
        "time" : {
          "start" : 1636686691001,
          "stop" : 1636686705517,
          "duration" : 14516
        }
      }, {
        "uid" : "870cdaeabcc50bf0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21723/report/#testresult/870cdaeabcc50bf0",
        "status" : "passed",
        "time" : {
          "start" : 1636685666809,
          "stop" : 1636685683770,
          "duration" : 16961
        }
      }, {
        "uid" : "a96e8e52d39b8696",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21723/report/#testresult/a96e8e52d39b8696",
        "status" : "passed",
        "time" : {
          "start" : 1636681490963,
          "stop" : 1636681505624,
          "duration" : 14661
        }
      }, {
        "uid" : "704fa77f6743bc7e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21723/report/#testresult/704fa77f6743bc7e",
        "status" : "passed",
        "time" : {
          "start" : 1636675225339,
          "stop" : 1636675237429,
          "duration" : 12090
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "b956b93d7a33e1cf.json",
  "parameterValues" : [ ]
}