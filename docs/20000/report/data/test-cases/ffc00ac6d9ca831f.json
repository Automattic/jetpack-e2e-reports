{
  "uid" : "ffc00ac6d9ca831f",
  "name" : "Pay with PayPal",
  "fullName" : "Pay with PayPal",
  "historyId" : "2b956f1af1e91da7ea3b442b8c2cddca",
  "time" : {
    "start" : 1622820879798,
    "stop" : 1622820885935,
    "duration" : 6137
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pay with PayPal block\",\n    async () => {\n      await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n      blockId = await blockEditor.insertBlock(\n        _simplePayments.default.name(),\n        _simplePayments.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can fill details of Pay with PayPal block\",\n    async () => {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that Pay with PayPal block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a Pay with PayPal block&quot;,\n    async () =&gt; {\n      await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n      blockId = await blockEditor.insertBlock(\n        _simplePayments.default.name(),\n        _simplePayments.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can fill details of Pay with PayPal block&quot;,\n    async () =&gt; {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that Pay with PayPal block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "19319b3ebbed918",
      "status" : "passed",
      "time" : {
        "start" : 1622819650055,
        "stop" : 1622819658522,
        "duration" : 8467
      }
    }, {
      "uid" : "64b8d2d32276478c",
      "status" : "passed",
      "time" : {
        "start" : 1622819011506,
        "stop" : 1622819020462,
        "duration" : 8956
      }
    }, {
      "uid" : "dd8721569fe1da19",
      "status" : "passed",
      "time" : {
        "start" : 1622818194487,
        "stop" : 1622818202447,
        "duration" : 7960
      }
    }, {
      "uid" : "356741c526f599c9",
      "status" : "passed",
      "time" : {
        "start" : 1622816953363,
        "stop" : 1622816960582,
        "duration" : 7219
      }
    }, {
      "uid" : "e32176520940d405",
      "status" : "passed",
      "time" : {
        "start" : 1622816200586,
        "stop" : 1622816206423,
        "duration" : 5837
      }
    }, {
      "uid" : "4dc65b743b0e9b78",
      "status" : "passed",
      "time" : {
        "start" : 1622815864466,
        "stop" : 1622815872044,
        "duration" : 7578
      }
    }, {
      "uid" : "175ad801a847fe83",
      "status" : "passed",
      "time" : {
        "start" : 1622813173447,
        "stop" : 1622813181696,
        "duration" : 8249
      }
    }, {
      "uid" : "fb35da47909a3752",
      "status" : "passed",
      "time" : {
        "start" : 1622812262078,
        "stop" : 1622812270603,
        "duration" : 8525
      }
    }, {
      "uid" : "f849528e852e45b5",
      "status" : "passed",
      "time" : {
        "start" : 1622811861735,
        "stop" : 1622811870315,
        "duration" : 8580
      }
    }, {
      "uid" : "e0cc5d660d215306",
      "status" : "passed",
      "time" : {
        "start" : 1622808340770,
        "stop" : 1622808349537,
        "duration" : 8767
      }
    }, {
      "uid" : "cb9f726124b72d0c",
      "status" : "passed",
      "time" : {
        "start" : 1622806840722,
        "stop" : 1622806848632,
        "duration" : 7910
      }
    }, {
      "uid" : "e64d97e3b83d68ee",
      "status" : "passed",
      "time" : {
        "start" : 1622805479946,
        "stop" : 1622805486873,
        "duration" : 6927
      }
    }, {
      "uid" : "4b31ca2658419b18",
      "status" : "passed",
      "time" : {
        "start" : 1622804363685,
        "stop" : 1622804369816,
        "duration" : 6131
      }
    }, {
      "uid" : "763b43f8abb92e1",
      "status" : "passed",
      "time" : {
        "start" : 1622782864250,
        "stop" : 1622782872002,
        "duration" : 7752
      }
    }, {
      "uid" : "aedd966ed876e5e7",
      "status" : "passed",
      "time" : {
        "start" : 1622649722267,
        "stop" : 1622649729540,
        "duration" : 7273
      }
    } ],
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "ffc00ac6d9ca831f.json",
  "parameterValues" : [ ]
}