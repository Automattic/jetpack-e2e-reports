{
  "uid" : "a5465342e989951d",
  "name" : "Recommendations (Jetpack Assistant)",
  "fullName" : "Recommendations (Jetpack Assistant)",
  "historyId" : "6acbca09fe63fb0db4bf908821bc38aa",
  "time" : {
    "start" : 1622895436202,
    "stop" : 1622895449106,
    "duration" : 12904
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let recommendationsPage;\n  await (0, _testSetup.step)(\n    \"Navigate to the Recommendations module\",\n    async () => {\n      recommendationsPage = await _recommendations.default.visit(page);\n      const isPageVisible =\n        await recommendationsPage.areSiteTypeQuestionsVisible();\n\n      expect(isPageVisible).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"site-type\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Check Personal and Other checkboxes\",\n    async () => {\n      await recommendationsPage.checkPersonalSiteType();\n      await recommendationsPage.checkOtherSiteType();\n      expect(\n        await recommendationsPage.isPersonalSiteTypeChecked()\n      ).toBeTruthy();\n      expect(await recommendationsPage.isOtherSiteTypeChecked()).toBeTruthy();\n      expect(await recommendationsPage.isBusinessTypeUnchecked()).toBeFalsy();\n      expect(await recommendationsPage.isStoreTypeUnchecked()).toBeFalsy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Save answers and continue to the Monitor step\",\n    async () => {\n      await recommendationsPage.saveSiteTypeAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isMonitorStep =\n        await recommendationsPage.isEnableMonitoringButtonVisible();\n      expect(isMonitorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"monitor\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Enable Monitoring and continue to Related Post step\",\n    async () => {\n      await recommendationsPage.enableMonitoringAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isRelatedPostsStep =\n        await recommendationsPage.isEnableRelatedPostsButtonVisible();\n      expect(isRelatedPostsStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"related-posts\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Enable Related Posts and continue to Creative Mail step\",\n    async () => {\n      await recommendationsPage.enableRelatedPostsAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isCreativeMailStep =\n        await recommendationsPage.isInstallCreativeMailButtonVisible();\n      expect(isCreativeMailStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"creative-mail\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Skip Creative Mail and continue to Site Accelerator\",\n    async () => {\n      await recommendationsPage.skipCreativeMailAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSiteAcceleratorStep =\n        await recommendationsPage.isEnableSiteAcceleratorButtonVisible();\n      expect(isSiteAcceleratorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"site-accelerator\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Skip Site Accelerator and continue to Summary\",\n    async () => {\n      await recommendationsPage.skipSiteAcceleratorAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSummaryContent =\n        await recommendationsPage.isSummaryContentVisible();\n      const isSummarySidebar =\n        await recommendationsPage.isSummarySidebarVisible();\n      expect(isSummaryContent && isSummarySidebar).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"summary\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Verify Monitoring and Related Posts are enabled\",\n    async () => {\n      const isMonitoringFeatureEnabled =\n        await recommendationsPage.isMonitoringFeatureEnabled();\n      const isRelatedPostsFeatureEnabled =\n        await recommendationsPage.isRelatedPostsFeatureEnabled();\n      expect(\n        isMonitoringFeatureEnabled && isRelatedPostsFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Verify Creative Mail and Site Accelerator are disabled\",\n    async () => {\n      const isCreativeMailFeatureEnabled =\n        await recommendationsPage.isCreativeMailFeatureEnabled();\n      const isSiteAcceleratorFeatureEnabled =\n        await recommendationsPage.isSiteAcceleratorFeatureEnabled();\n      expect(\n        isCreativeMailFeatureEnabled && isSiteAcceleratorFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let recommendationsPage;\n  await (0, _testSetup.step)(\n    &quot;Navigate to the Recommendations module&quot;,\n    async () =&gt; {\n      recommendationsPage = await _recommendations.default.visit(page);\n      const isPageVisible =\n        await recommendationsPage.areSiteTypeQuestionsVisible();\n\n      expect(isPageVisible).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;site-type&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Check Personal and Other checkboxes&quot;,\n    async () =&gt; {\n      await recommendationsPage.checkPersonalSiteType();\n      await recommendationsPage.checkOtherSiteType();\n      expect(\n        await recommendationsPage.isPersonalSiteTypeChecked()\n      ).toBeTruthy();\n      expect(await recommendationsPage.isOtherSiteTypeChecked()).toBeTruthy();\n      expect(await recommendationsPage.isBusinessTypeUnchecked()).toBeFalsy();\n      expect(await recommendationsPage.isStoreTypeUnchecked()).toBeFalsy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Save answers and continue to the Monitor step&quot;,\n    async () =&gt; {\n      await recommendationsPage.saveSiteTypeAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isMonitorStep =\n        await recommendationsPage.isEnableMonitoringButtonVisible();\n      expect(isMonitorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;monitor&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Enable Monitoring and continue to Related Post step&quot;,\n    async () =&gt; {\n      await recommendationsPage.enableMonitoringAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isRelatedPostsStep =\n        await recommendationsPage.isEnableRelatedPostsButtonVisible();\n      expect(isRelatedPostsStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;related-posts&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Enable Related Posts and continue to Creative Mail step&quot;,\n    async () =&gt; {\n      await recommendationsPage.enableRelatedPostsAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isCreativeMailStep =\n        await recommendationsPage.isInstallCreativeMailButtonVisible();\n      expect(isCreativeMailStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;creative-mail&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Skip Creative Mail and continue to Site Accelerator&quot;,\n    async () =&gt; {\n      await recommendationsPage.skipCreativeMailAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSiteAcceleratorStep =\n        await recommendationsPage.isEnableSiteAcceleratorButtonVisible();\n      expect(isSiteAcceleratorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;site-accelerator&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Skip Site Accelerator and continue to Summary&quot;,\n    async () =&gt; {\n      await recommendationsPage.skipSiteAcceleratorAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSummaryContent =\n        await recommendationsPage.isSummaryContentVisible();\n      const isSummarySidebar =\n        await recommendationsPage.isSummarySidebarVisible();\n      expect(isSummaryContent &amp;&amp; isSummarySidebar).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;summary&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Verify Monitoring and Related Posts are enabled&quot;,\n    async () =&gt; {\n      const isMonitoringFeatureEnabled =\n        await recommendationsPage.isMonitoringFeatureEnabled();\n      const isRelatedPostsFeatureEnabled =\n        await recommendationsPage.isRelatedPostsFeatureEnabled();\n      expect(\n        isMonitoringFeatureEnabled &amp;&amp; isRelatedPostsFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Verify Creative Mail and Site Accelerator are disabled&quot;,\n    async () =&gt; {\n      const isCreativeMailFeatureEnabled =\n        await recommendationsPage.isCreativeMailFeatureEnabled();\n      const isSiteAcceleratorFeatureEnabled =\n        await recommendationsPage.isSiteAcceleratorFeatureEnabled();\n      expect(\n        isCreativeMailFeatureEnabled &amp;&amp; isSiteAcceleratorFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "recommendations.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "fb7550466cb23ca5",
      "status" : "passed",
      "time" : {
        "start" : 1622852467996,
        "stop" : 1622852484831,
        "duration" : 16835
      }
    }, {
      "uid" : "937c58de0962ba70",
      "status" : "passed",
      "time" : {
        "start" : 1622846685203,
        "stop" : 1622846699825,
        "duration" : 14622
      }
    }, {
      "uid" : "80137cbc1f17b03",
      "status" : "passed",
      "time" : {
        "start" : 1622840921678,
        "stop" : 1622840935976,
        "duration" : 14298
      }
    }, {
      "uid" : "589d6d564d9947be",
      "status" : "passed",
      "time" : {
        "start" : 1622839520556,
        "stop" : 1622839536170,
        "duration" : 15614
      }
    }, {
      "uid" : "33f29fc0fd2e873b",
      "status" : "passed",
      "time" : {
        "start" : 1622838236747,
        "stop" : 1622838249703,
        "duration" : 12956
      }
    }, {
      "uid" : "6f75c343dc054d0a",
      "status" : "passed",
      "time" : {
        "start" : 1622837447162,
        "stop" : 1622837463934,
        "duration" : 16772
      }
    }, {
      "uid" : "95a90adb887c8087",
      "status" : "passed",
      "time" : {
        "start" : 1622837327398,
        "stop" : 1622837342741,
        "duration" : 15343
      }
    }, {
      "uid" : "412bdc3ab81db7d8",
      "status" : "passed",
      "time" : {
        "start" : 1622836242442,
        "stop" : 1622836258025,
        "duration" : 15583
      }
    }, {
      "uid" : "5a329a5ce5ff2f10",
      "status" : "passed",
      "time" : {
        "start" : 1622836065472,
        "stop" : 1622836081068,
        "duration" : 15596
      }
    }, {
      "uid" : "6843072786aeb025",
      "status" : "passed",
      "time" : {
        "start" : 1622835595430,
        "stop" : 1622835612313,
        "duration" : 16883
      }
    }, {
      "uid" : "5c845e560f2d5343",
      "status" : "passed",
      "time" : {
        "start" : 1622834517967,
        "stop" : 1622834533517,
        "duration" : 15550
      }
    }, {
      "uid" : "eaf8c698f37b3436",
      "status" : "passed",
      "time" : {
        "start" : 1622833999297,
        "stop" : 1622834016427,
        "duration" : 17130
      }
    }, {
      "uid" : "23192ad9a9f80afd",
      "status" : "passed",
      "time" : {
        "start" : 1622832723524,
        "stop" : 1622832736452,
        "duration" : 12928
      }
    }, {
      "uid" : "8ae95e7461f64de3",
      "status" : "passed",
      "time" : {
        "start" : 1622828847293,
        "stop" : 1622828863816,
        "duration" : 16523
      }
    }, {
      "uid" : "779a64d1d383f3c1",
      "status" : "passed",
      "time" : {
        "start" : 1622826994013,
        "stop" : 1622827012845,
        "duration" : 18832
      }
    }, {
      "uid" : "db74e166c2f7a8c2",
      "status" : "passed",
      "time" : {
        "start" : 1622826290853,
        "stop" : 1622826303489,
        "duration" : 12636
      }
    }, {
      "uid" : "fc1d8b0d0f37f093",
      "status" : "passed",
      "time" : {
        "start" : 1622823430278,
        "stop" : 1622823445819,
        "duration" : 15541
      }
    }, {
      "uid" : "942e90f5175314ae",
      "status" : "passed",
      "time" : {
        "start" : 1622820803101,
        "stop" : 1622820816663,
        "duration" : 13562
      }
    }, {
      "uid" : "7dcf043f7d28a067",
      "status" : "passed",
      "time" : {
        "start" : 1622819556283,
        "stop" : 1622819572271,
        "duration" : 15988
      }
    }, {
      "uid" : "fa548c51ba6a3646",
      "status" : "passed",
      "time" : {
        "start" : 1622818918187,
        "stop" : 1622818935342,
        "duration" : 17155
      }
    }, {
      "uid" : "5747143317aa5f39",
      "status" : "passed",
      "time" : {
        "start" : 1622818104308,
        "stop" : 1622818121180,
        "duration" : 16872
      }
    }, {
      "uid" : "33c159e200170879",
      "status" : "passed",
      "time" : {
        "start" : 1622816862767,
        "stop" : 1622816877397,
        "duration" : 14630
      }
    }, {
      "uid" : "e659797d9fed47b0",
      "status" : "passed",
      "time" : {
        "start" : 1622816126882,
        "stop" : 1622816139125,
        "duration" : 12243
      }
    }, {
      "uid" : "1bf54e7abebd6b3f",
      "status" : "passed",
      "time" : {
        "start" : 1622815778271,
        "stop" : 1622815792372,
        "duration" : 14101
      }
    }, {
      "uid" : "822dac9b0e4a055e",
      "status" : "passed",
      "time" : {
        "start" : 1622815288787,
        "stop" : 1622815306073,
        "duration" : 17286
      }
    }, {
      "uid" : "4bd39c5c8b1af617",
      "status" : "passed",
      "time" : {
        "start" : 1622813072264,
        "stop" : 1622813089532,
        "duration" : 17268
      }
    }, {
      "uid" : "a5a35de45e098d88",
      "status" : "passed",
      "time" : {
        "start" : 1622812165770,
        "stop" : 1622812181708,
        "duration" : 15938
      }
    }, {
      "uid" : "731840f0e0ba4c5e",
      "status" : "passed",
      "time" : {
        "start" : 1622811771814,
        "stop" : 1622811786502,
        "duration" : 14688
      }
    }, {
      "uid" : "223034b83a631d80",
      "status" : "passed",
      "time" : {
        "start" : 1622808233121,
        "stop" : 1622808251075,
        "duration" : 17954
      }
    }, {
      "uid" : "f9d3cc7ba86e954e",
      "status" : "passed",
      "time" : {
        "start" : 1622806737064,
        "stop" : 1622806754379,
        "duration" : 17315
      }
    }, {
      "uid" : "3c466479393cc691",
      "status" : "passed",
      "time" : {
        "start" : 1622805397018,
        "stop" : 1622805411369,
        "duration" : 14351
      }
    }, {
      "uid" : "1fb860a289cd5539",
      "status" : "passed",
      "time" : {
        "start" : 1622804288694,
        "stop" : 1622804301247,
        "duration" : 12553
      }
    }, {
      "uid" : "3d94cd4af27e247e",
      "status" : "passed",
      "time" : {
        "start" : 1622782776727,
        "stop" : 1622782792200,
        "duration" : 15473
      }
    }, {
      "uid" : "46b6cefb7d74ddbb",
      "status" : "passed",
      "time" : {
        "start" : 1622649631494,
        "stop" : 1622649647359,
        "duration" : 15865
      }
    } ],
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "a5465342e989951d.json",
  "parameterValues" : [ ]
}