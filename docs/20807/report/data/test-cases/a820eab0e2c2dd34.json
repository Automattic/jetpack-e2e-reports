{
  "uid" : "a820eab0e2c2dd34",
  "name" : "Pinterest block",
  "fullName" : "Pinterest block",
  "historyId" : "bf919c5c1253559f0d007402decf47af",
  "time" : {
    "start" : 1630055351394,
    "stop" : 1630055362659,
    "duration" : 11265
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _reporter.testStep)(\"Add a Pinterest block\", async () => {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const pinId = _config.default.get(&quot;blocks.pinterest.pinId&quot;);\n\n  await (0, _reporter.testStep)(&quot;Add a Pinterest block&quot;, async () =&gt; {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    &quot;Publish a post with a Pinterest block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can assert that Pinterest block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1630055342859,
        "stop" : 1630055351388,
        "duration" : 8529
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1630055362861,
        "stop" : 1630055365853,
        "duration" : 2992
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _reporter.testStep)(\"Add a Pinterest block\", async () => {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Add a Pinterest block",
      "time" : {
        "start" : 1630055351475,
        "stop" : 1630055356599,
        "duration" : 5124
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Pinterest",
        "time" : {
          "start" : 1630055351477,
          "stop" : 1630055352998,
          "duration" : 1521
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: pinterest",
        "time" : {
          "start" : 1630055353000,
          "stop" : 1630055353645,
          "duration" : 645
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Publish a post with a Pinterest block",
      "time" : {
        "start" : 1630055356601,
        "stop" : 1630055361508,
        "duration" : 4907
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Publish post",
        "time" : {
          "start" : 1630055356816,
          "stop" : 1630055360119,
          "duration" : 3303
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "View post",
        "time" : {
          "start" : 1630055360121,
          "stop" : 1630055361508,
          "duration" : 1387
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Can assert that Pinterest block is rendered",
      "time" : {
        "start" : 1630055361509,
        "stop" : 1630055362632,
        "duration" : 1123
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 10,
        "unknown" : 0,
        "total" : 10
      },
      "items" : [ {
        "uid" : "a62df8e6ce9040fc",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20807/report/#testresult/a62df8e6ce9040fc",
        "status" : "passed",
        "time" : {
          "start" : 1629986088728,
          "stop" : 1629986096012,
          "duration" : 7284
        }
      }, {
        "uid" : "680e951ee5c0bf94",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20807/report/#testresult/680e951ee5c0bf94",
        "status" : "passed",
        "time" : {
          "start" : 1629967986445,
          "stop" : 1629967994306,
          "duration" : 7861
        }
      }, {
        "uid" : "90de597bee2a882d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20807/report/#testresult/90de597bee2a882d",
        "status" : "passed",
        "time" : {
          "start" : 1629909886308,
          "stop" : 1629909894940,
          "duration" : 8632
        }
      }, {
        "uid" : "d01c5f5c0cd1457b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20807/report/#testresult/d01c5f5c0cd1457b",
        "status" : "passed",
        "time" : {
          "start" : 1629900924514,
          "stop" : 1629900933137,
          "duration" : 8623
        }
      }, {
        "uid" : "707cd7df0dea9375",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20807/report/#testresult/707cd7df0dea9375",
        "status" : "passed",
        "time" : {
          "start" : 1629887618804,
          "stop" : 1629887622962,
          "duration" : 4158
        }
      }, {
        "uid" : "13e3f888781513b7",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20807/report/#testresult/13e3f888781513b7",
        "status" : "passed",
        "time" : {
          "start" : 1629816316342,
          "stop" : 1629816324982,
          "duration" : 8640
        }
      }, {
        "uid" : "fed9f2cde848afd4",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20807/report/#testresult/fed9f2cde848afd4",
        "status" : "passed",
        "time" : {
          "start" : 1629814909294,
          "stop" : 1629814918019,
          "duration" : 8725
        }
      }, {
        "uid" : "d3c87cc084a3083e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20807/report/#testresult/d3c87cc084a3083e",
        "status" : "passed",
        "time" : {
          "start" : 1629811567924,
          "stop" : 1629811576765,
          "duration" : 8841
        }
      }, {
        "uid" : "17e781f5a9d33075",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20807/report/#testresult/17e781f5a9d33075",
        "status" : "passed",
        "time" : {
          "start" : 1629810554131,
          "stop" : 1629810564145,
          "duration" : 10014
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "a820eab0e2c2dd34.json",
  "parameterValues" : [ ]
}