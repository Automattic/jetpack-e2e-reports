{
  "uid" : "211c622610ea3901",
  "name" : "Recommendations (Jetpack Assistant)",
  "fullName" : "Recommendations (Jetpack Assistant)",
  "historyId" : "6acbca09fe63fb0db4bf908821bc38aa",
  "time" : {
    "start" : 1627258207890,
    "stop" : 1627258224985,
    "duration" : 17095
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let recommendationsPage;\n  await (0, _testSetup.step)(\n    \"Navigate to the Recommendations module\",\n    async () => {\n      recommendationsPage = await _recommendations.default.visit(page);\n      const isPageVisible =\n        await recommendationsPage.areSiteTypeQuestionsVisible();\n\n      expect(isPageVisible).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"site-type\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Check Personal and Other checkboxes\",\n    async () => {\n      await recommendationsPage.checkPersonalSiteType();\n      await recommendationsPage.checkOtherSiteType();\n      expect(\n        await recommendationsPage.isPersonalSiteTypeChecked()\n      ).toBeTruthy();\n      expect(await recommendationsPage.isOtherSiteTypeChecked()).toBeTruthy();\n      expect(await recommendationsPage.isBusinessTypeUnchecked()).toBeFalsy();\n      expect(await recommendationsPage.isStoreTypeUnchecked()).toBeFalsy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Save answers and continue to the Monitor step\",\n    async () => {\n      await recommendationsPage.saveSiteTypeAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isMonitorStep =\n        await recommendationsPage.isEnableMonitoringButtonVisible();\n      expect(isMonitorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"monitor\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Enable Monitoring and continue to Related Post step\",\n    async () => {\n      await recommendationsPage.enableMonitoringAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isRelatedPostsStep =\n        await recommendationsPage.isEnableRelatedPostsButtonVisible();\n      expect(isRelatedPostsStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"related-posts\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Enable Related Posts and continue to Creative Mail step\",\n    async () => {\n      await recommendationsPage.enableRelatedPostsAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isCreativeMailStep =\n        await recommendationsPage.isInstallCreativeMailButtonVisible();\n      expect(isCreativeMailStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"creative-mail\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Skip Creative Mail and continue to Site Accelerator\",\n    async () => {\n      await recommendationsPage.skipCreativeMailAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSiteAcceleratorStep =\n        await recommendationsPage.isEnableSiteAcceleratorButtonVisible();\n      expect(isSiteAcceleratorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"site-accelerator\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Skip Site Accelerator and continue to Summary\",\n    async () => {\n      await recommendationsPage.skipSiteAcceleratorAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSummaryContent =\n        await recommendationsPage.isSummaryContentVisible();\n      const isSummarySidebar =\n        await recommendationsPage.isSummarySidebarVisible();\n      expect(isSummaryContent && isSummarySidebar).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"summary\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Verify Monitoring and Related Posts are enabled\",\n    async () => {\n      const isMonitoringFeatureEnabled =\n        await recommendationsPage.isMonitoringFeatureEnabled();\n      const isRelatedPostsFeatureEnabled =\n        await recommendationsPage.isRelatedPostsFeatureEnabled();\n      expect(\n        isMonitoringFeatureEnabled && isRelatedPostsFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Verify Creative Mail and Site Accelerator are disabled\",\n    async () => {\n      const isCreativeMailFeatureEnabled =\n        await recommendationsPage.isCreativeMailFeatureEnabled();\n      const isSiteAcceleratorFeatureEnabled =\n        await recommendationsPage.isSiteAcceleratorFeatureEnabled();\n      expect(\n        isCreativeMailFeatureEnabled && isSiteAcceleratorFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let recommendationsPage;\n  await (0, _testSetup.step)(\n    &quot;Navigate to the Recommendations module&quot;,\n    async () =&gt; {\n      recommendationsPage = await _recommendations.default.visit(page);\n      const isPageVisible =\n        await recommendationsPage.areSiteTypeQuestionsVisible();\n\n      expect(isPageVisible).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;site-type&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Check Personal and Other checkboxes&quot;,\n    async () =&gt; {\n      await recommendationsPage.checkPersonalSiteType();\n      await recommendationsPage.checkOtherSiteType();\n      expect(\n        await recommendationsPage.isPersonalSiteTypeChecked()\n      ).toBeTruthy();\n      expect(await recommendationsPage.isOtherSiteTypeChecked()).toBeTruthy();\n      expect(await recommendationsPage.isBusinessTypeUnchecked()).toBeFalsy();\n      expect(await recommendationsPage.isStoreTypeUnchecked()).toBeFalsy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Save answers and continue to the Monitor step&quot;,\n    async () =&gt; {\n      await recommendationsPage.saveSiteTypeAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isMonitorStep =\n        await recommendationsPage.isEnableMonitoringButtonVisible();\n      expect(isMonitorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;monitor&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Enable Monitoring and continue to Related Post step&quot;,\n    async () =&gt; {\n      await recommendationsPage.enableMonitoringAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isRelatedPostsStep =\n        await recommendationsPage.isEnableRelatedPostsButtonVisible();\n      expect(isRelatedPostsStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;related-posts&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Enable Related Posts and continue to Creative Mail step&quot;,\n    async () =&gt; {\n      await recommendationsPage.enableRelatedPostsAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isCreativeMailStep =\n        await recommendationsPage.isInstallCreativeMailButtonVisible();\n      expect(isCreativeMailStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;creative-mail&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Skip Creative Mail and continue to Site Accelerator&quot;,\n    async () =&gt; {\n      await recommendationsPage.skipCreativeMailAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSiteAcceleratorStep =\n        await recommendationsPage.isEnableSiteAcceleratorButtonVisible();\n      expect(isSiteAcceleratorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;site-accelerator&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Skip Site Accelerator and continue to Summary&quot;,\n    async () =&gt; {\n      await recommendationsPage.skipSiteAcceleratorAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSummaryContent =\n        await recommendationsPage.isSummaryContentVisible();\n      const isSummarySidebar =\n        await recommendationsPage.isSummarySidebarVisible();\n      expect(isSummaryContent &amp;&amp; isSummarySidebar).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;summary&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Verify Monitoring and Related Posts are enabled&quot;,\n    async () =&gt; {\n      const isMonitoringFeatureEnabled =\n        await recommendationsPage.isMonitoringFeatureEnabled();\n      const isRelatedPostsFeatureEnabled =\n        await recommendationsPage.isRelatedPostsFeatureEnabled();\n      expect(\n        isMonitoringFeatureEnabled &amp;&amp; isRelatedPostsFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Verify Creative Mail and Site Accelerator are disabled&quot;,\n    async () =&gt; {\n      const isCreativeMailFeatureEnabled =\n        await recommendationsPage.isCreativeMailFeatureEnabled();\n      const isSiteAcceleratorFeatureEnabled =\n        await recommendationsPage.isSiteAcceleratorFeatureEnabled();\n      expect(\n        isCreativeMailFeatureEnabled &amp;&amp; isSiteAcceleratorFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "recommendations.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 168,
        "unknown" : 0,
        "total" : 168
      },
      "items" : [ {
        "uid" : "7b647b1df6638ab6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/7b647b1df6638ab6",
        "status" : "passed",
        "time" : {
          "start" : 1627214934426,
          "stop" : 1627214949893,
          "duration" : 15467
        }
      }, {
        "uid" : "66d40e1a7fcb3f46",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/66d40e1a7fcb3f46",
        "status" : "passed",
        "time" : {
          "start" : 1627171690987,
          "stop" : 1627171704768,
          "duration" : 13781
        }
      }, {
        "uid" : "dc231b1aaaa314db",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/dc231b1aaaa314db",
        "status" : "passed",
        "time" : {
          "start" : 1627128553325,
          "stop" : 1627128570337,
          "duration" : 17012
        }
      }, {
        "uid" : "f533c127bae5a04a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/f533c127bae5a04a",
        "status" : "passed",
        "time" : {
          "start" : 1627085345032,
          "stop" : 1627085361077,
          "duration" : 16045
        }
      }, {
        "uid" : "21165ca4cc57799b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/21165ca4cc57799b",
        "status" : "passed",
        "time" : {
          "start" : 1627084649234,
          "stop" : 1627084663852,
          "duration" : 14618
        }
      }, {
        "uid" : "d31d5dfefa616a92",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/d31d5dfefa616a92",
        "status" : "passed",
        "time" : {
          "start" : 1627079905171,
          "stop" : 1627079923213,
          "duration" : 18042
        }
      }, {
        "uid" : "3a9fda7ca0515d0a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/3a9fda7ca0515d0a",
        "status" : "passed",
        "time" : {
          "start" : 1627072410842,
          "stop" : 1627072423823,
          "duration" : 12981
        }
      }, {
        "uid" : "e703a01522dcc5ab",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/e703a01522dcc5ab",
        "status" : "passed",
        "time" : {
          "start" : 1627070222927,
          "stop" : 1627070239427,
          "duration" : 16500
        }
      }, {
        "uid" : "7f0b8baf46708343",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/7f0b8baf46708343",
        "status" : "passed",
        "time" : {
          "start" : 1627063939169,
          "stop" : 1627063954092,
          "duration" : 14923
        }
      }, {
        "uid" : "a2de15e489a082eb",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/a2de15e489a082eb",
        "status" : "passed",
        "time" : {
          "start" : 1627047224670,
          "stop" : 1627047240836,
          "duration" : 16166
        }
      }, {
        "uid" : "9451ee0be5bf42a3",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/9451ee0be5bf42a3",
        "status" : "passed",
        "time" : {
          "start" : 1627042106461,
          "stop" : 1627042120491,
          "duration" : 14030
        }
      }, {
        "uid" : "79aa6858a76c978e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/79aa6858a76c978e",
        "status" : "passed",
        "time" : {
          "start" : 1627038901307,
          "stop" : 1627038914646,
          "duration" : 13339
        }
      }, {
        "uid" : "97e80edc237f8dcd",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/97e80edc237f8dcd",
        "status" : "passed",
        "time" : {
          "start" : 1627002267804,
          "stop" : 1627002283045,
          "duration" : 15241
        }
      }, {
        "uid" : "d7c767cf26397e29",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/d7c767cf26397e29",
        "status" : "passed",
        "time" : {
          "start" : 1626998898990,
          "stop" : 1626998913083,
          "duration" : 14093
        }
      }, {
        "uid" : "d751a9f526e451f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/d751a9f526e451f",
        "status" : "passed",
        "time" : {
          "start" : 1626987084912,
          "stop" : 1626987102821,
          "duration" : 17909
        }
      }, {
        "uid" : "be33c93420c21315",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/be33c93420c21315",
        "status" : "passed",
        "time" : {
          "start" : 1626982493146,
          "stop" : 1626982510123,
          "duration" : 16977
        }
      }, {
        "uid" : "b483374cae1dea6d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/b483374cae1dea6d",
        "status" : "passed",
        "time" : {
          "start" : 1626976156145,
          "stop" : 1626976169113,
          "duration" : 12968
        }
      }, {
        "uid" : "2d9230cae8004115",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/2d9230cae8004115",
        "status" : "passed",
        "time" : {
          "start" : 1626973671966,
          "stop" : 1626973685003,
          "duration" : 13037
        }
      }, {
        "uid" : "a782b1eff398c330",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/a782b1eff398c330",
        "status" : "passed",
        "time" : {
          "start" : 1626963143243,
          "stop" : 1626963161515,
          "duration" : 18272
        }
      }, {
        "uid" : "edfe9f18fac32236",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/edfe9f18fac32236",
        "status" : "passed",
        "time" : {
          "start" : 1626955660514,
          "stop" : 1626955674096,
          "duration" : 13582
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "211c622610ea3901.json",
  "parameterValues" : [ ]
}