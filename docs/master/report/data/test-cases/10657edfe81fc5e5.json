{
  "uid" : "10657edfe81fc5e5",
  "name" : "Can perform search with default settings",
  "fullName" : "Can perform search with default settings",
  "historyId" : "8a48effa07b2a0dc8118fcc35772e118",
  "time" : {
    "start" : 1626955535110,
    "stop" : 1626955569339,
    "duration" : 34229
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _testSetup.step)(\n    \"Can open the overlay by entering a query\",\n    async () => {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can show search controls in the overlay\",\n    async () => {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can show search results in the overlay\",\n    async () => {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can sort results by relevance by default\",\n    async () => {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        \"<mark>Test1</mark> Record 1\"\n      );\n    }\n  );\n  await (0, _testSetup.step)(\"Can edit query in search form\", async () => {\n    await homepage.enterQueryToOverlay(\"test2\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 1\"\n    );\n  });\n  await (0, _testSetup.step)(\"Can change sort order\", async () => {\n    await homepage.chooseSortingLink(\"newest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"newest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n    await homepage.chooseSortingLink(\"oldest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"oldest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n  });\n  await (0, _testSetup.step)(\"Can apply filters\", async () => {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n  });\n  await (0, _testSetup.step)(\n    \"Can close overlay by clicking the cross\",\n    async () => {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  await (0, _testSetup.step)(\n    &quot;Can open the overlay by entering a query&quot;,\n    async () =&gt; {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can show search controls in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can show search results in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can sort results by relevance by default&quot;,\n    async () =&gt; {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        &quot;&lt;mark&gt;Test1&lt;/mark&gt; Record 1&quot;\n      );\n    }\n  );\n  await (0, _testSetup.step)(&quot;Can edit query in search form&quot;, async () =&gt; {\n    await homepage.enterQueryToOverlay(&quot;test2&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 1&quot;\n    );\n  });\n  await (0, _testSetup.step)(&quot;Can change sort order&quot;, async () =&gt; {\n    await homepage.chooseSortingLink(&quot;newest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;newest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n    await homepage.chooseSortingLink(&quot;oldest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;oldest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n  });\n  await (0, _testSetup.step)(&quot;Can apply filters&quot;, async () =&gt; {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n  });\n  await (0, _testSetup.step)(\n    &quot;Can close overlay by clicking the cross&quot;,\n    async () =&gt; {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "TimeoutError",
  "statusTrace" : "page.fill: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"input.search-field\"\n  selector resolved to hidden <input type=\"search\" autocomplete=\"off\" inputmode=\"searâ€¦/>\nelementHandle.fill(\"test1\")\n  waiting for element to be visible, enabled and editable\n    element is not visible - waiting...\n============================================================\nNote: use DEBUG=pw:api environment variable to capture Playwright logs.",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _testSetup.step)(\n    \"Can open the overlay by entering a query\",\n    async () => {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can show search controls in the overlay\",\n    async () => {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can show search results in the overlay\",\n    async () => {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can sort results by relevance by default\",\n    async () => {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        \"<mark>Test1</mark> Record 1\"\n      );\n    }\n  );\n  await (0, _testSetup.step)(\"Can edit query in search form\", async () => {\n    await homepage.enterQueryToOverlay(\"test2\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 1\"\n    );\n  });\n  await (0, _testSetup.step)(\"Can change sort order\", async () => {\n    await homepage.chooseSortingLink(\"newest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"newest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n    await homepage.chooseSortingLink(\"oldest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"oldest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n  });\n  await (0, _testSetup.step)(\"Can apply filters\", async () => {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n  });\n  await (0, _testSetup.step)(\n    \"Can close overlay by clicking the cross\",\n    async () => {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n```\n",
    "status" : "broken",
    "statusMessage" : "TimeoutError",
    "statusTrace" : "page.fill: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"input.search-field\"\n  selector resolved to hidden <input type=\"search\" autocomplete=\"off\" inputmode=\"searâ€¦/>\nelementHandle.fill(\"test1\")\n  waiting for element to be visible, enabled and editable\n    element is not visible - waiting...\n============================================================\nNote: use DEBUG=pw:api environment variable to capture Playwright logs.",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "617a7900cc893366",
      "name" : "Search - Can perform search with default settings",
      "source" : "617a7900cc893366.png",
      "type" : "image/png",
      "size" : 52478
    }, {
      "uid" : "4bf84917cfc51838",
      "name" : "1626955565441_Search___Can_perform_search_with_default_settings.webm",
      "source" : "4bf84917cfc51838.webm",
      "type" : "video/webm",
      "size" : 514370
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "search.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 12,
        "skipped" : 0,
        "passed" : 136,
        "unknown" : 0,
        "total" : 148
      },
      "items" : [ {
        "uid" : "9562e70ec595016a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/9562e70ec595016a",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1626912348235,
          "stop" : 1626912382922,
          "duration" : 34687
        }
      }, {
        "uid" : "2bd24add16f8e89c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/2bd24add16f8e89c",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1626900122231,
          "stop" : 1626900158127,
          "duration" : 35896
        }
      }, {
        "uid" : "dc63252694890fea",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/dc63252694890fea",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1626885166386,
          "stop" : 1626885201496,
          "duration" : 35110
        }
      }, {
        "uid" : "5d2312c4849c107c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/5d2312c4849c107c",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1626882600326,
          "stop" : 1626882636165,
          "duration" : 35839
        }
      }, {
        "uid" : "2dae44c75176c8ce",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/2dae44c75176c8ce",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1626881496291,
          "stop" : 1626881533005,
          "duration" : 36714
        }
      }, {
        "uid" : "b5672cd264693477",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/b5672cd264693477",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1626873816586,
          "stop" : 1626873852350,
          "duration" : 35764
        }
      }, {
        "uid" : "7eec961ee9bd831b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/7eec961ee9bd831b",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1626871060143,
          "stop" : 1626871094238,
          "duration" : 34095
        }
      }, {
        "uid" : "3575359a39f98e29",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/3575359a39f98e29",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1626869117753,
          "stop" : 1626869151926,
          "duration" : 34173
        }
      }, {
        "uid" : "1b233777c38bb297",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/1b233777c38bb297",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1626825967647,
          "stop" : 1626826002631,
          "duration" : 34984
        }
      }, {
        "uid" : "e1dd458f18f61606",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/e1dd458f18f61606",
        "status" : "passed",
        "time" : {
          "start" : 1626802505937,
          "stop" : 1626802508675,
          "duration" : 2738
        }
      }, {
        "uid" : "3e85ae59736386cf",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/3e85ae59736386cf",
        "status" : "passed",
        "time" : {
          "start" : 1626801195836,
          "stop" : 1626801198297,
          "duration" : 2461
        }
      }, {
        "uid" : "5b7c9cded38402c3",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/5b7c9cded38402c3",
        "status" : "passed",
        "time" : {
          "start" : 1626800252095,
          "stop" : 1626800254498,
          "duration" : 2403
        }
      }, {
        "uid" : "c9c322a84fb62b39",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/c9c322a84fb62b39",
        "status" : "passed",
        "time" : {
          "start" : 1626796509369,
          "stop" : 1626796511931,
          "duration" : 2562
        }
      }, {
        "uid" : "b2bd1e3e7a796553",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/b2bd1e3e7a796553",
        "status" : "passed",
        "time" : {
          "start" : 1626793723463,
          "stop" : 1626793726544,
          "duration" : 3081
        }
      }, {
        "uid" : "76da924d1a5329c9",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/76da924d1a5329c9",
        "status" : "passed",
        "time" : {
          "start" : 1626792210485,
          "stop" : 1626792213416,
          "duration" : 2931
        }
      }, {
        "uid" : "d1a63c3aa404f3d9",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/d1a63c3aa404f3d9",
        "status" : "passed",
        "time" : {
          "start" : 1626782788416,
          "stop" : 1626782791129,
          "duration" : 2713
        }
      }, {
        "uid" : "52dfe1eb0917015c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/52dfe1eb0917015c",
        "status" : "passed",
        "time" : {
          "start" : 1626780017819,
          "stop" : 1626780020746,
          "duration" : 2927
        }
      }, {
        "uid" : "924c8989e4ca762b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/924c8989e4ca762b",
        "status" : "passed",
        "time" : {
          "start" : 1626739551765,
          "stop" : 1626739554138,
          "duration" : 2373
        }
      }, {
        "uid" : "dbc0242f16a08f8a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/dbc0242f16a08f8a",
        "status" : "passed",
        "time" : {
          "start" : 1626724563451,
          "stop" : 1626724566314,
          "duration" : 2863
        }
      }, {
        "uid" : "432b24d1c0ddabbc",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/432b24d1c0ddabbc",
        "status" : "passed",
        "time" : {
          "start" : 1626713989078,
          "stop" : 1626713991824,
          "duration" : 2746
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "10657edfe81fc5e5.json",
  "parameterValues" : [ ]
}