{
  "uid" : "fe36612088b94916",
  "name" : "Can perform search with default settings",
  "fullName" : "Can perform search with default settings",
  "historyId" : "8a48effa07b2a0dc8118fcc35772e118",
  "time" : {
    "start" : 1626346299770,
    "stop" : 1626346302280,
    "duration" : 2510
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _testSetup.step)(\n    \"Can open the overlay by entering a query\",\n    async () => {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can show search controls in the overlay\",\n    async () => {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can show search results in the overlay\",\n    async () => {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can sort results by relevance by default\",\n    async () => {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        \"<mark>Test1</mark> Record 1\"\n      );\n    }\n  );\n  await (0, _testSetup.step)(\"Can edit query in search form\", async () => {\n    await homepage.enterQueryToOverlay(\"test2\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 1\"\n    );\n  });\n  await (0, _testSetup.step)(\"Can change sort order\", async () => {\n    await homepage.chooseSortingLink(\"newest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"newest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n    await homepage.chooseSortingLink(\"oldest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"oldest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n  });\n  await (0, _testSetup.step)(\"Can apply filters\", async () => {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n  });\n  await (0, _testSetup.step)(\n    \"Can close overlay by clicking the cross\",\n    async () => {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  await (0, _testSetup.step)(\n    &quot;Can open the overlay by entering a query&quot;,\n    async () =&gt; {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can show search controls in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can show search results in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can sort results by relevance by default&quot;,\n    async () =&gt; {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        &quot;&lt;mark&gt;Test1&lt;/mark&gt; Record 1&quot;\n      );\n    }\n  );\n  await (0, _testSetup.step)(&quot;Can edit query in search form&quot;, async () =&gt; {\n    await homepage.enterQueryToOverlay(&quot;test2&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 1&quot;\n    );\n  });\n  await (0, _testSetup.step)(&quot;Can change sort order&quot;, async () =&gt; {\n    await homepage.chooseSortingLink(&quot;newest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;newest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n    await homepage.chooseSortingLink(&quot;oldest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;oldest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n  });\n  await (0, _testSetup.step)(&quot;Can apply filters&quot;, async () =&gt; {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n  });\n  await (0, _testSetup.step)(\n    &quot;Can close overlay by clicking the cross&quot;,\n    async () =&gt; {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "search.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 98,
        "unknown" : 0,
        "total" : 100
      },
      "items" : [ {
        "uid" : "56c6dbc3506809da",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/56c6dbc3506809da",
        "status" : "passed",
        "time" : {
          "start" : 1626341435198,
          "stop" : 1626341437836,
          "duration" : 2638
        }
      }, {
        "uid" : "8a4c1bba01a18400",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/8a4c1bba01a18400",
        "status" : "passed",
        "time" : {
          "start" : 1626340375451,
          "stop" : 1626340378084,
          "duration" : 2633
        }
      }, {
        "uid" : "57e54fe8e647a054",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/57e54fe8e647a054",
        "status" : "passed",
        "time" : {
          "start" : 1626307628127,
          "stop" : 1626307630882,
          "duration" : 2755
        }
      }, {
        "uid" : "3a466730d2b2102b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/3a466730d2b2102b",
        "status" : "passed",
        "time" : {
          "start" : 1626302161701,
          "stop" : 1626302164306,
          "duration" : 2605
        }
      }, {
        "uid" : "7c6c7492b90026a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/7c6c7492b90026a",
        "status" : "passed",
        "time" : {
          "start" : 1626298069206,
          "stop" : 1626298071590,
          "duration" : 2384
        }
      }, {
        "uid" : "980bd6b74d09f7e8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/980bd6b74d09f7e8",
        "status" : "passed",
        "time" : {
          "start" : 1626292665895,
          "stop" : 1626292668496,
          "duration" : 2601
        }
      }, {
        "uid" : "513cfa6db5dc862f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/513cfa6db5dc862f",
        "status" : "passed",
        "time" : {
          "start" : 1626286803171,
          "stop" : 1626286805764,
          "duration" : 2593
        }
      }, {
        "uid" : "ca92b8ccb33c36a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/ca92b8ccb33c36a",
        "status" : "passed",
        "time" : {
          "start" : 1626284786191,
          "stop" : 1626284788776,
          "duration" : 2585
        }
      }, {
        "uid" : "b5d9a8d67a25f464",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/b5d9a8d67a25f464",
        "status" : "passed",
        "time" : {
          "start" : 1626280052485,
          "stop" : 1626280055476,
          "duration" : 2991
        }
      }, {
        "uid" : "83cb659793d0ae6c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/83cb659793d0ae6c",
        "status" : "passed",
        "time" : {
          "start" : 1626278254898,
          "stop" : 1626278257303,
          "duration" : 2405
        }
      }, {
        "uid" : "e8f37552574dc9f4",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/e8f37552574dc9f4",
        "status" : "passed",
        "time" : {
          "start" : 1626275005383,
          "stop" : 1626275008115,
          "duration" : 2732
        }
      }, {
        "uid" : "190f580f908cb9ed",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/190f580f908cb9ed",
        "status" : "passed",
        "time" : {
          "start" : 1626270097684,
          "stop" : 1626270100263,
          "duration" : 2579
        }
      }, {
        "uid" : "d77715994a32847e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/d77715994a32847e",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1626268005737,
          "stop" : 1626268005874,
          "duration" : 137
        }
      }, {
        "uid" : "16b9531bebf29722",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/16b9531bebf29722",
        "status" : "passed",
        "time" : {
          "start" : 1626264383978,
          "stop" : 1626264386703,
          "duration" : 2725
        }
      }, {
        "uid" : "e83989d199b70b87",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/e83989d199b70b87",
        "status" : "passed",
        "time" : {
          "start" : 1626263696443,
          "stop" : 1626263699092,
          "duration" : 2649
        }
      }, {
        "uid" : "2d72bb87d41a8bbf",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/2d72bb87d41a8bbf",
        "status" : "passed",
        "time" : {
          "start" : 1626258291791,
          "stop" : 1626258294283,
          "duration" : 2492
        }
      }, {
        "uid" : "e972598c8d8f50db",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/e972598c8d8f50db",
        "status" : "passed",
        "time" : {
          "start" : 1626256551580,
          "stop" : 1626256553940,
          "duration" : 2360
        }
      }, {
        "uid" : "557d11d9a29f41aa",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/557d11d9a29f41aa",
        "status" : "passed",
        "time" : {
          "start" : 1626255588195,
          "stop" : 1626255590628,
          "duration" : 2433
        }
      }, {
        "uid" : "f993b882c68ee40d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/f993b882c68ee40d",
        "status" : "passed",
        "time" : {
          "start" : 1626252955547,
          "stop" : 1626252957976,
          "duration" : 2429
        }
      }, {
        "uid" : "97d5d316636e38d0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/97d5d316636e38d0",
        "status" : "passed",
        "time" : {
          "start" : 1626221155314,
          "stop" : 1626221157934,
          "duration" : 2620
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "fe36612088b94916.json",
  "parameterValues" : [ ]
}