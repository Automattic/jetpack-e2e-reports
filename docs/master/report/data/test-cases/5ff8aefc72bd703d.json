{
  "uid" : "5ff8aefc72bd703d",
  "name" : "Can perform search with default settings",
  "fullName" : "Can perform search with default settings",
  "historyId" : "8a48effa07b2a0dc8118fcc35772e118",
  "time" : {
    "start" : 1628809428831,
    "stop" : 1628809432395,
    "duration" : 3564
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _reporter.testStep)(\n    \"Can open the overlay by entering a query\",\n    async () => {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search controls in the overlay\",\n    async () => {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search results in the overlay\",\n    async () => {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can sort results by relevance by default\",\n    async () => {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        \"<mark>Test1</mark> Record 1\"\n      );\n    }\n  );\n  await (0, _reporter.testStep)(\"Can edit query in search form\", async () => {\n    await homepage.enterQueryToOverlay(\"test2\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 1\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can change sort order\", async () => {\n    await homepage.chooseSortingLink(\"newest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"newest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n    await homepage.chooseSortingLink(\"oldest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"oldest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can apply filters\", async () => {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n  });\n  await (0, _reporter.testStep)(\n    \"Can close overlay by clicking the cross\",\n    async () => {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  await (0, _reporter.testStep)(\n    &quot;Can open the overlay by entering a query&quot;,\n    async () =&gt; {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can show search controls in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can show search results in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can sort results by relevance by default&quot;,\n    async () =&gt; {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        &quot;&lt;mark&gt;Test1&lt;/mark&gt; Record 1&quot;\n      );\n    }\n  );\n  await (0, _reporter.testStep)(&quot;Can edit query in search form&quot;, async () =&gt; {\n    await homepage.enterQueryToOverlay(&quot;test2&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 1&quot;\n    );\n  });\n  await (0, _reporter.testStep)(&quot;Can change sort order&quot;, async () =&gt; {\n    await homepage.chooseSortingLink(&quot;newest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;newest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n    await homepage.chooseSortingLink(&quot;oldest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;oldest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n  });\n  await (0, _reporter.testStep)(&quot;Can apply filters&quot;, async () =&gt; {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n  });\n  await (0, _reporter.testStep)(\n    &quot;Can close overlay by clicking the cross&quot;,\n    async () =&gt; {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _reporter.testStep)(\n    \"Can open the overlay by entering a query\",\n    async () => {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search controls in the overlay\",\n    async () => {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search results in the overlay\",\n    async () => {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can sort results by relevance by default\",\n    async () => {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        \"<mark>Test1</mark> Record 1\"\n      );\n    }\n  );\n  await (0, _reporter.testStep)(\"Can edit query in search form\", async () => {\n    await homepage.enterQueryToOverlay(\"test2\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 1\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can change sort order\", async () => {\n    await homepage.chooseSortingLink(\"newest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"newest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n    await homepage.chooseSortingLink(\"oldest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"oldest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can apply filters\", async () => {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n  });\n  await (0, _reporter.testStep)(\n    \"Can close overlay by clicking the cross\",\n    async () => {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Can open the overlay by entering a query",
      "time" : {
        "start" : 1628809428924,
        "stop" : 1628809429650,
        "duration" : 726
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can show search controls in the overlay",
      "time" : {
        "start" : 1628809429651,
        "stop" : 1628809429821,
        "duration" : 170
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can show search results in the overlay",
      "time" : {
        "start" : 1628809429824,
        "stop" : 1628809429866,
        "duration" : 42
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can sort results by relevance by default",
      "time" : {
        "start" : 1628809429868,
        "stop" : 1628809429886,
        "duration" : 18
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can edit query in search form",
      "time" : {
        "start" : 1628809429888,
        "stop" : 1628809430258,
        "duration" : 370
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can change sort order",
      "time" : {
        "start" : 1628809430260,
        "stop" : 1628809431246,
        "duration" : 986
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can apply filters",
      "time" : {
        "start" : 1628809431250,
        "stop" : 1628809432098,
        "duration" : 848
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can close overlay by clicking the cross",
      "time" : {
        "start" : 1628809432099,
        "stop" : 1628809432345,
        "duration" : 246
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "search.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 59,
        "skipped" : 0,
        "passed" : 239,
        "unknown" : 0,
        "total" : 298
      },
      "items" : [ {
        "uid" : "45af3c1c1dd01df8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/45af3c1c1dd01df8",
        "status" : "passed",
        "time" : {
          "start" : 1628799948459,
          "stop" : 1628799951406,
          "duration" : 2947
        }
      }, {
        "uid" : "56191fa9eb218e65",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/56191fa9eb218e65",
        "status" : "passed",
        "time" : {
          "start" : 1628783436210,
          "stop" : 1628783439160,
          "duration" : 2950
        }
      }, {
        "uid" : "6a8f92c6e6a5d18c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/6a8f92c6e6a5d18c",
        "status" : "passed",
        "time" : {
          "start" : 1628770008522,
          "stop" : 1628770011992,
          "duration" : 3470
        }
      }, {
        "uid" : "5394edbf51146635",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/5394edbf51146635",
        "status" : "passed",
        "time" : {
          "start" : 1628765661123,
          "stop" : 1628765664100,
          "duration" : 2977
        }
      }, {
        "uid" : "7703b7cd52848b27",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/7703b7cd52848b27",
        "status" : "passed",
        "time" : {
          "start" : 1628763969713,
          "stop" : 1628763973310,
          "duration" : 3597
        }
      }, {
        "uid" : "e61a50292cc94e99",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/e61a50292cc94e99",
        "status" : "passed",
        "time" : {
          "start" : 1628763169252,
          "stop" : 1628763172696,
          "duration" : 3444
        }
      }, {
        "uid" : "3a7c5183c589efaf",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/3a7c5183c589efaf",
        "status" : "passed",
        "time" : {
          "start" : 1628762306559,
          "stop" : 1628762310144,
          "duration" : 3585
        }
      }, {
        "uid" : "f6f2d12f7a50d3ae",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/f6f2d12f7a50d3ae",
        "status" : "passed",
        "time" : {
          "start" : 1628757465608,
          "stop" : 1628757468495,
          "duration" : 2887
        }
      }, {
        "uid" : "3bb80df482b76fa8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/3bb80df482b76fa8",
        "status" : "passed",
        "time" : {
          "start" : 1628756734969,
          "stop" : 1628756738783,
          "duration" : 3814
        }
      }, {
        "uid" : "982cd043f27bb26e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/982cd043f27bb26e",
        "status" : "passed",
        "time" : {
          "start" : 1628743537418,
          "stop" : 1628743540652,
          "duration" : 3234
        }
      }, {
        "uid" : "f54a57e2e3cded84",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/f54a57e2e3cded84",
        "status" : "passed",
        "time" : {
          "start" : 1628738575186,
          "stop" : 1628738578625,
          "duration" : 3439
        }
      }, {
        "uid" : "ba70ae8a561e4f1d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/ba70ae8a561e4f1d",
        "status" : "passed",
        "time" : {
          "start" : 1628728045628,
          "stop" : 1628728049123,
          "duration" : 3495
        }
      }, {
        "uid" : "f8385dd6e59f4cbe",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/f8385dd6e59f4cbe",
        "status" : "passed",
        "time" : {
          "start" : 1628726744395,
          "stop" : 1628726747462,
          "duration" : 3067
        }
      }, {
        "uid" : "4f09e165b1628718",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/4f09e165b1628718",
        "status" : "passed",
        "time" : {
          "start" : 1628725720548,
          "stop" : 1628725724104,
          "duration" : 3556
        }
      }, {
        "uid" : "227043158d66c7e0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/227043158d66c7e0",
        "status" : "passed",
        "time" : {
          "start" : 1628722832962,
          "stop" : 1628722836085,
          "duration" : 3123
        }
      }, {
        "uid" : "2cafa64610d272b2",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/2cafa64610d272b2",
        "status" : "passed",
        "time" : {
          "start" : 1628716288490,
          "stop" : 1628716291920,
          "duration" : 3430
        }
      }, {
        "uid" : "c1981e0c01966d77",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/c1981e0c01966d77",
        "status" : "passed",
        "time" : {
          "start" : 1628707297702,
          "stop" : 1628707301137,
          "duration" : 3435
        }
      }, {
        "uid" : "a13fc9f9ee4c1c1c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/a13fc9f9ee4c1c1c",
        "status" : "passed",
        "time" : {
          "start" : 1628689739022,
          "stop" : 1628689742630,
          "duration" : 3608
        }
      }, {
        "uid" : "3243a7d4394c998f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/3243a7d4394c998f",
        "status" : "passed",
        "time" : {
          "start" : 1628684502424,
          "stop" : 1628684505504,
          "duration" : 3080
        }
      }, {
        "uid" : "606053e2a86e1c17",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/606053e2a86e1c17",
        "status" : "passed",
        "time" : {
          "start" : 1628683596738,
          "stop" : 1628683600013,
          "duration" : 3275
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "5ff8aefc72bd703d.json",
  "parameterValues" : [ ]
}