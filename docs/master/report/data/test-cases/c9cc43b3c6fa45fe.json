{
  "uid" : "c9cc43b3c6fa45fe",
  "name" : "Can perform search with default settings",
  "fullName" : "Can perform search with default settings",
  "historyId" : "8a48effa07b2a0dc8118fcc35772e118",
  "time" : {
    "start" : 1625573169305,
    "stop" : 1625573171717,
    "duration" : 2412
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _testSetup.step)(\n    \"Can open the overlay by entering a query\",\n    async () => {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can show search controls in the overlay\",\n    async () => {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can show search results in the overlay\",\n    async () => {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can sort results by relevance by default\",\n    async () => {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        \"<mark>Test1</mark> Record 1\"\n      );\n    }\n  );\n  await (0, _testSetup.step)(\"Can edit query in search form\", async () => {\n    await homepage.enterQueryToOverlay(\"test2\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 1\"\n    );\n  });\n  await (0, _testSetup.step)(\"Can change sort order\", async () => {\n    await homepage.chooseSortingLink(\"newest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"newest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n    await homepage.chooseSortingLink(\"oldest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"oldest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n  });\n  await (0, _testSetup.step)(\"Can apply filters\", async () => {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n  });\n  await (0, _testSetup.step)(\n    \"Can close overlay by clicking the cross\",\n    async () => {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  await (0, _testSetup.step)(\n    &quot;Can open the overlay by entering a query&quot;,\n    async () =&gt; {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can show search controls in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can show search results in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can sort results by relevance by default&quot;,\n    async () =&gt; {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        &quot;&lt;mark&gt;Test1&lt;/mark&gt; Record 1&quot;\n      );\n    }\n  );\n  await (0, _testSetup.step)(&quot;Can edit query in search form&quot;, async () =&gt; {\n    await homepage.enterQueryToOverlay(&quot;test2&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 1&quot;\n    );\n  });\n  await (0, _testSetup.step)(&quot;Can change sort order&quot;, async () =&gt; {\n    await homepage.chooseSortingLink(&quot;newest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;newest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n    await homepage.chooseSortingLink(&quot;oldest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;oldest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n  });\n  await (0, _testSetup.step)(&quot;Can apply filters&quot;, async () =&gt; {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n  });\n  await (0, _testSetup.step)(\n    &quot;Can close overlay by clicking the cross&quot;,\n    async () =&gt; {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "search.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 27,
        "unknown" : 0,
        "total" : 28
      },
      "items" : [ {
        "uid" : "604c27a52bb32603",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/604c27a52bb32603",
        "status" : "passed",
        "time" : {
          "start" : 1625567159172,
          "stop" : 1625567162500,
          "duration" : 3328
        }
      }, {
        "uid" : "6316195d8b401433",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/6316195d8b401433",
        "status" : "passed",
        "time" : {
          "start" : 1625552930505,
          "stop" : 1625552932877,
          "duration" : 2372
        }
      }, {
        "uid" : "f3a26743df77cbd6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/f3a26743df77cbd6",
        "status" : "passed",
        "time" : {
          "start" : 1625530009089,
          "stop" : 1625530012054,
          "duration" : 2965
        }
      }, {
        "uid" : "36b5f16dca4c052b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/36b5f16dca4c052b",
        "status" : "passed",
        "time" : {
          "start" : 1625486788716,
          "stop" : 1625486791271,
          "duration" : 2555
        }
      }, {
        "uid" : "ccaecb964d80105e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/ccaecb964d80105e",
        "status" : "passed",
        "time" : {
          "start" : 1625443590467,
          "stop" : 1625443593095,
          "duration" : 2628
        }
      }, {
        "uid" : "7cee208bb16f77a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/7cee208bb16f77a",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1625400384511,
          "stop" : 1625400384690,
          "duration" : 179
        }
      }, {
        "uid" : "3a51c793e96c7be5",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/3a51c793e96c7be5",
        "status" : "passed",
        "time" : {
          "start" : 1625357204897,
          "stop" : 1625357207393,
          "duration" : 2496
        }
      }, {
        "uid" : "bee34d4b74db923",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/bee34d4b74db923",
        "status" : "passed",
        "time" : {
          "start" : 1625313965829,
          "stop" : 1625313968286,
          "duration" : 2457
        }
      }, {
        "uid" : "b092f366eec277e1",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/b092f366eec277e1",
        "status" : "passed",
        "time" : {
          "start" : 1625270800713,
          "stop" : 1625270803298,
          "duration" : 2585
        }
      }, {
        "uid" : "86e6e68a3299c318",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/86e6e68a3299c318",
        "status" : "passed",
        "time" : {
          "start" : 1625236327602,
          "stop" : 1625236330266,
          "duration" : 2664
        }
      }, {
        "uid" : "fe63ffb0791cd665",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/fe63ffb0791cd665",
        "status" : "passed",
        "time" : {
          "start" : 1625234741763,
          "stop" : 1625234744972,
          "duration" : 3209
        }
      }, {
        "uid" : "eeb169f4fe1f5434",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/eeb169f4fe1f5434",
        "status" : "passed",
        "time" : {
          "start" : 1625227594055,
          "stop" : 1625227596605,
          "duration" : 2550
        }
      }, {
        "uid" : "1209df5f57d07910",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/1209df5f57d07910",
        "status" : "passed",
        "time" : {
          "start" : 1625184388866,
          "stop" : 1625184391586,
          "duration" : 2720
        }
      }, {
        "uid" : "870fe5e60b1087e9",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/870fe5e60b1087e9",
        "status" : "passed",
        "time" : {
          "start" : 1625175550742,
          "stop" : 1625175553361,
          "duration" : 2619
        }
      }, {
        "uid" : "ec23c2ca471d029b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/ec23c2ca471d029b",
        "status" : "passed",
        "time" : {
          "start" : 1625174138410,
          "stop" : 1625174140763,
          "duration" : 2353
        }
      }, {
        "uid" : "41cf139ceea3f9ca",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/41cf139ceea3f9ca",
        "status" : "passed",
        "time" : {
          "start" : 1625173382080,
          "stop" : 1625173384831,
          "duration" : 2751
        }
      }, {
        "uid" : "e1c68480127e0273",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/e1c68480127e0273",
        "status" : "passed",
        "time" : {
          "start" : 1625162150250,
          "stop" : 1625162153058,
          "duration" : 2808
        }
      }, {
        "uid" : "c296f226f970b8c0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/c296f226f970b8c0",
        "status" : "passed",
        "time" : {
          "start" : 1625158963320,
          "stop" : 1625158965686,
          "duration" : 2366
        }
      }, {
        "uid" : "eec8952d9cddf7a0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/eec8952d9cddf7a0",
        "status" : "passed",
        "time" : {
          "start" : 1625154084489,
          "stop" : 1625154086919,
          "duration" : 2430
        }
      }, {
        "uid" : "91de6c33497d22",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/#testresult/91de6c33497d22",
        "status" : "passed",
        "time" : {
          "start" : 1625153396461,
          "stop" : 1625153398838,
          "duration" : 2377
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "c9cc43b3c6fa45fe.json",
  "parameterValues" : [ ]
}