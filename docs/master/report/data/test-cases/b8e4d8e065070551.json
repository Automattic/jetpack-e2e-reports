{
  "uid" : "b8e4d8e065070551",
  "name" : "MailChimp Block",
  "fullName" : "MailChimp Block",
  "historyId" : "1e0e5667b8c419e68fc1ae6a0d73dd61",
  "time" : {
    "start" : 1627128628751,
    "stop" : 1627128668055,
    "duration" : 39304
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a MailChimp block\",\n    async () => {\n      blockId = await blockEditor.insertBlock(\n        _mailchimp.default.name(),\n        _mailchimp.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\"Can connect to a MailChimp\", async () => {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that MailChimp block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a MailChimp block&quot;,\n    async () =&gt; {\n      blockId = await blockEditor.insertBlock(\n        _mailchimp.default.name(),\n        _mailchimp.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(&quot;Can connect to a MailChimp&quot;, async () =&gt; {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that MailChimp block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "TimeoutError",
  "statusTrace" : "Timeout while waiting for event \"page\"\nNote: use DEBUG=pw:api environment variable to capture Playwright logs.",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a MailChimp block\",\n    async () => {\n      blockId = await blockEditor.insertBlock(\n        _mailchimp.default.name(),\n        _mailchimp.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\"Can connect to a MailChimp\", async () => {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that MailChimp block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "broken",
    "statusMessage" : "TimeoutError",
    "statusTrace" : "Timeout while waiting for event \"page\"\nNote: use DEBUG=pw:api environment variable to capture Playwright logs.",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "2bb030800fe69362",
      "name" : "Paid blocks - MailChimp Block",
      "source" : "2bb030800fe69362.png",
      "type" : "image/png",
      "size" : 42050
    }, {
      "uid" : "f0593969b2bb286f",
      "name" : "1627128662513_Paid_blocks___MailChimp_Block.webm",
      "source" : "f0593969b2bb286f.webm",
      "type" : "video/webm",
      "size" : 798162
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "ac9ea0ee00eb52ad",
      "status" : "broken",
      "statusDetails" : "TimeoutError",
      "time" : {
        "start" : 1627128398711,
        "stop" : 1627128430525,
        "duration" : 31814
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 6,
        "skipped" : 0,
        "passed" : 159,
        "unknown" : 0,
        "total" : 165
      },
      "items" : [ {
        "uid" : "239f67775f941858",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/239f67775f941858",
        "status" : "passed",
        "time" : {
          "start" : 1627085417980,
          "stop" : 1627085439307,
          "duration" : 21327
        }
      }, {
        "uid" : "9d71e32aa82af2cc",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/9d71e32aa82af2cc",
        "status" : "passed",
        "time" : {
          "start" : 1627084712824,
          "stop" : 1627084729299,
          "duration" : 16475
        }
      }, {
        "uid" : "ef04e6f666273571",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/ef04e6f666273571",
        "status" : "passed",
        "time" : {
          "start" : 1627079986097,
          "stop" : 1627080010969,
          "duration" : 24872
        }
      }, {
        "uid" : "80a80efb512c4b5b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/80a80efb512c4b5b",
        "status" : "passed",
        "time" : {
          "start" : 1627072470120,
          "stop" : 1627072485960,
          "duration" : 15840
        }
      }, {
        "uid" : "e9f60f87ac0e815d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/e9f60f87ac0e815d",
        "status" : "passed",
        "time" : {
          "start" : 1627070296576,
          "stop" : 1627070319163,
          "duration" : 22587
        }
      }, {
        "uid" : "4bc17d2f05ed1a11",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/4bc17d2f05ed1a11",
        "status" : "passed",
        "time" : {
          "start" : 1627064003971,
          "stop" : 1627064024404,
          "duration" : 20433
        }
      }, {
        "uid" : "12b5d8e0409cd68a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/12b5d8e0409cd68a",
        "status" : "passed",
        "time" : {
          "start" : 1627047296607,
          "stop" : 1627047319326,
          "duration" : 22719
        }
      }, {
        "uid" : "5d1c0109c8447451",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/5d1c0109c8447451",
        "status" : "passed",
        "time" : {
          "start" : 1627042171434,
          "stop" : 1627042190301,
          "duration" : 18867
        }
      }, {
        "uid" : "40935d75915ccff4",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/40935d75915ccff4",
        "status" : "passed",
        "time" : {
          "start" : 1627038962895,
          "stop" : 1627038979508,
          "duration" : 16613
        }
      }, {
        "uid" : "3292ae913529dceb",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/3292ae913529dceb",
        "status" : "passed",
        "time" : {
          "start" : 1627002337668,
          "stop" : 1627002356436,
          "duration" : 18768
        }
      }, {
        "uid" : "6d6e32a950498ee6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/6d6e32a950498ee6",
        "status" : "passed",
        "time" : {
          "start" : 1626998962018,
          "stop" : 1626998977319,
          "duration" : 15301
        }
      }, {
        "uid" : "e1666b49703ff1b9",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/e1666b49703ff1b9",
        "status" : "passed",
        "time" : {
          "start" : 1626987160905,
          "stop" : 1626987177546,
          "duration" : 16641
        }
      }, {
        "uid" : "43fac8baea43a553",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/43fac8baea43a553",
        "status" : "passed",
        "time" : {
          "start" : 1626982566219,
          "stop" : 1626982588611,
          "duration" : 22392
        }
      }, {
        "uid" : "e4d5042bc9c8395d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/e4d5042bc9c8395d",
        "status" : "passed",
        "time" : {
          "start" : 1626976214813,
          "stop" : 1626976229263,
          "duration" : 14450
        }
      }, {
        "uid" : "1558285f8245fd30",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/1558285f8245fd30",
        "status" : "passed",
        "time" : {
          "start" : 1626973731893,
          "stop" : 1626973748879,
          "duration" : 16986
        }
      }, {
        "uid" : "f4ad0d4cb314a725",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/f4ad0d4cb314a725",
        "status" : "passed",
        "time" : {
          "start" : 1626963223747,
          "stop" : 1626963249241,
          "duration" : 25494
        }
      }, {
        "uid" : "df0d8f85456c8317",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/df0d8f85456c8317",
        "status" : "passed",
        "time" : {
          "start" : 1626955720585,
          "stop" : 1626955736633,
          "duration" : 16048
        }
      }, {
        "uid" : "5cbd7ad09a3fbd29",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/5cbd7ad09a3fbd29",
        "status" : "passed",
        "time" : {
          "start" : 1626912541436,
          "stop" : 1626912561908,
          "duration" : 20472
        }
      }, {
        "uid" : "f12ca0e8e1eb0591",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/f12ca0e8e1eb0591",
        "status" : "passed",
        "time" : {
          "start" : 1626900322786,
          "stop" : 1626900341999,
          "duration" : 19213
        }
      }, {
        "uid" : "a93464e9933cd5b8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/a93464e9933cd5b8",
        "status" : "passed",
        "time" : {
          "start" : 1626885376996,
          "stop" : 1626885396042,
          "duration" : 19046
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "b8e4d8e065070551.json",
  "parameterValues" : [ ]
}