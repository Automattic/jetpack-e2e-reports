{
  "uid" : "c1981e0c01966d77",
  "name" : "Can perform search with default settings",
  "fullName" : "Can perform search with default settings",
  "historyId" : "8a48effa07b2a0dc8118fcc35772e118",
  "time" : {
    "start" : 1628707297702,
    "stop" : 1628707301137,
    "duration" : 3435
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _reporter.testStep)(\n    \"Can open the overlay by entering a query\",\n    async () => {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search controls in the overlay\",\n    async () => {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search results in the overlay\",\n    async () => {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can sort results by relevance by default\",\n    async () => {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        \"<mark>Test1</mark> Record 1\"\n      );\n    }\n  );\n  await (0, _reporter.testStep)(\"Can edit query in search form\", async () => {\n    await homepage.enterQueryToOverlay(\"test2\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 1\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can change sort order\", async () => {\n    await homepage.chooseSortingLink(\"newest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"newest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n    await homepage.chooseSortingLink(\"oldest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"oldest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can apply filters\", async () => {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n  });\n  await (0, _reporter.testStep)(\n    \"Can close overlay by clicking the cross\",\n    async () => {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  await (0, _reporter.testStep)(\n    &quot;Can open the overlay by entering a query&quot;,\n    async () =&gt; {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can show search controls in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can show search results in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can sort results by relevance by default&quot;,\n    async () =&gt; {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        &quot;&lt;mark&gt;Test1&lt;/mark&gt; Record 1&quot;\n      );\n    }\n  );\n  await (0, _reporter.testStep)(&quot;Can edit query in search form&quot;, async () =&gt; {\n    await homepage.enterQueryToOverlay(&quot;test2&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 1&quot;\n    );\n  });\n  await (0, _reporter.testStep)(&quot;Can change sort order&quot;, async () =&gt; {\n    await homepage.chooseSortingLink(&quot;newest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;newest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n    await homepage.chooseSortingLink(&quot;oldest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;oldest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n  });\n  await (0, _reporter.testStep)(&quot;Can apply filters&quot;, async () =&gt; {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n  });\n  await (0, _reporter.testStep)(\n    &quot;Can close overlay by clicking the cross&quot;,\n    async () =&gt; {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _reporter.testStep)(\n    \"Can open the overlay by entering a query\",\n    async () => {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search controls in the overlay\",\n    async () => {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search results in the overlay\",\n    async () => {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can sort results by relevance by default\",\n    async () => {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        \"<mark>Test1</mark> Record 1\"\n      );\n    }\n  );\n  await (0, _reporter.testStep)(\"Can edit query in search form\", async () => {\n    await homepage.enterQueryToOverlay(\"test2\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 1\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can change sort order\", async () => {\n    await homepage.chooseSortingLink(\"newest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"newest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n    await homepage.chooseSortingLink(\"oldest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"oldest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can apply filters\", async () => {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n  });\n  await (0, _reporter.testStep)(\n    \"Can close overlay by clicking the cross\",\n    async () => {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Can open the overlay by entering a query",
      "time" : {
        "start" : 1628707297793,
        "stop" : 1628707298471,
        "duration" : 678
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can show search controls in the overlay",
      "time" : {
        "start" : 1628707298481,
        "stop" : 1628707298667,
        "duration" : 186
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can show search results in the overlay",
      "time" : {
        "start" : 1628707298669,
        "stop" : 1628707298713,
        "duration" : 44
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can sort results by relevance by default",
      "time" : {
        "start" : 1628707298719,
        "stop" : 1628707298753,
        "duration" : 34
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can edit query in search form",
      "time" : {
        "start" : 1628707298755,
        "stop" : 1628707299117,
        "duration" : 362
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can change sort order",
      "time" : {
        "start" : 1628707299136,
        "stop" : 1628707300020,
        "duration" : 884
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can apply filters",
      "time" : {
        "start" : 1628707300021,
        "stop" : 1628707300899,
        "duration" : 878
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can close overlay by clicking the cross",
      "time" : {
        "start" : 1628707300901,
        "stop" : 1628707301100,
        "duration" : 199
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "search.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 59,
        "skipped" : 0,
        "passed" : 222,
        "unknown" : 0,
        "total" : 281
      },
      "items" : [ {
        "uid" : "a13fc9f9ee4c1c1c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/a13fc9f9ee4c1c1c",
        "status" : "passed",
        "time" : {
          "start" : 1628689739022,
          "stop" : 1628689742630,
          "duration" : 3608
        }
      }, {
        "uid" : "3243a7d4394c998f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/3243a7d4394c998f",
        "status" : "passed",
        "time" : {
          "start" : 1628684502424,
          "stop" : 1628684505504,
          "duration" : 3080
        }
      }, {
        "uid" : "606053e2a86e1c17",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/606053e2a86e1c17",
        "status" : "passed",
        "time" : {
          "start" : 1628683596738,
          "stop" : 1628683600013,
          "duration" : 3275
        }
      }, {
        "uid" : "31b1be018ef96515",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/31b1be018ef96515",
        "status" : "passed",
        "time" : {
          "start" : 1628680077551,
          "stop" : 1628680080975,
          "duration" : 3424
        }
      }, {
        "uid" : "5c33eb9abd3266ea",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/5c33eb9abd3266ea",
        "status" : "passed",
        "time" : {
          "start" : 1628640776800,
          "stop" : 1628640780048,
          "duration" : 3248
        }
      }, {
        "uid" : "5255dd8893abb6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/5255dd8893abb6",
        "status" : "passed",
        "time" : {
          "start" : 1628635346817,
          "stop" : 1628635349600,
          "duration" : 2783
        }
      }, {
        "uid" : "8877be425cb1c57e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/8877be425cb1c57e",
        "status" : "passed",
        "time" : {
          "start" : 1628607854464,
          "stop" : 1628607857894,
          "duration" : 3430
        }
      }, {
        "uid" : "3418a0996179dbee",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/3418a0996179dbee",
        "status" : "passed",
        "time" : {
          "start" : 1628604685834,
          "stop" : 1628604689342,
          "duration" : 3508
        }
      }, {
        "uid" : "3a7e628d113870f1",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/3a7e628d113870f1",
        "status" : "passed",
        "time" : {
          "start" : 1628603843269,
          "stop" : 1628603846300,
          "duration" : 3031
        }
      }, {
        "uid" : "f47caa74dbd4fe61",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/f47caa74dbd4fe61",
        "status" : "passed",
        "time" : {
          "start" : 1628597799062,
          "stop" : 1628597802632,
          "duration" : 3570
        }
      }, {
        "uid" : "988d1ec1899e399d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/988d1ec1899e399d",
        "status" : "passed",
        "time" : {
          "start" : 1628587863079,
          "stop" : 1628587866676,
          "duration" : 3597
        }
      }, {
        "uid" : "6272de19498a8f0d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/6272de19498a8f0d",
        "status" : "passed",
        "time" : {
          "start" : 1628585857028,
          "stop" : 1628585860347,
          "duration" : 3319
        }
      }, {
        "uid" : "c5b41e337b6af9eb",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/c5b41e337b6af9eb",
        "status" : "passed",
        "time" : {
          "start" : 1628580069381,
          "stop" : 1628580072988,
          "duration" : 3607
        }
      }, {
        "uid" : "ed3b3c31657daac7",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/ed3b3c31657daac7",
        "status" : "passed",
        "time" : {
          "start" : 1628577615717,
          "stop" : 1628577618533,
          "duration" : 2816
        }
      }, {
        "uid" : "f8c93427be8177be",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/f8c93427be8177be",
        "status" : "passed",
        "time" : {
          "start" : 1628575581983,
          "stop" : 1628575585369,
          "duration" : 3386
        }
      }, {
        "uid" : "e7614d96a07233d8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/e7614d96a07233d8",
        "status" : "passed",
        "time" : {
          "start" : 1628567362640,
          "stop" : 1628567365394,
          "duration" : 2754
        }
      }, {
        "uid" : "e12f92184b827e29",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/e12f92184b827e29",
        "status" : "passed",
        "time" : {
          "start" : 1628562963340,
          "stop" : 1628562966378,
          "duration" : 3038
        }
      }, {
        "uid" : "df7e236597aa83e5",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/df7e236597aa83e5",
        "status" : "passed",
        "time" : {
          "start" : 1628553936645,
          "stop" : 1628553939746,
          "duration" : 3101
        }
      }, {
        "uid" : "b5981f2d624fc081",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/b5981f2d624fc081",
        "status" : "passed",
        "time" : {
          "start" : 1628548003425,
          "stop" : 1628548006208,
          "duration" : 2783
        }
      }, {
        "uid" : "2c6443168175fa1c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/2c6443168175fa1c",
        "status" : "passed",
        "time" : {
          "start" : 1628540640098,
          "stop" : 1628540642909,
          "duration" : 2811
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "c1981e0c01966d77.json",
  "parameterValues" : [ ]
}