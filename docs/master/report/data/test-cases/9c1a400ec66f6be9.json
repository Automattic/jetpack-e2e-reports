{
  "uid" : "9c1a400ec66f6be9",
  "name" : "Eventbrite block",
  "fullName" : "Eventbrite block",
  "historyId" : "0b4a15ebb314cfb213eb3e305bfce89d",
  "time" : {
    "start" : 1627733446809,
    "stop" : 1627733478602,
    "duration" : 31793
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const eventId = \"112691417062\";\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Eventbrite block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _eventbrite.default.name(),\n        _eventbrite.default.title()\n      );\n      const eventbriteBlock = new _eventbrite.default(blockId, page, eventId);\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post with a Eventbrite block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can assert that Eventbrite block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_eventbrite.default, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const eventId = &quot;112691417062&quot;;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a Eventbrite block&quot;,\n    async () =&gt; {\n      const blockId = await blockEditor.insertBlock(\n        _eventbrite.default.name(),\n        _eventbrite.default.title()\n      );\n      const eventbriteBlock = new _eventbrite.default(blockId, page, eventId);\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post with a Eventbrite block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can assert that Eventbrite block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_eventbrite.default, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "TimeoutError",
  "statusTrace" : "page.press: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \".block-editor-inserter__search-input\"\n============================================================\nNote: use DEBUG=pw:api environment variable to capture Playwright logs.",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  const eventId = \"112691417062\";\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Eventbrite block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _eventbrite.default.name(),\n        _eventbrite.default.title()\n      );\n      const eventbriteBlock = new _eventbrite.default(blockId, page, eventId);\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post with a Eventbrite block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can assert that Eventbrite block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_eventbrite.default, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "broken",
    "statusMessage" : "TimeoutError",
    "statusTrace" : "page.press: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \".block-editor-inserter__search-input\"\n============================================================\nNote: use DEBUG=pw:api environment variable to capture Playwright logs.",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "ad3c973d63efdee4",
      "name" : "Free blocks - Eventbrite block",
      "source" : "ad3c973d63efdee4.png",
      "type" : "image/png",
      "size" : 52984
    }, {
      "uid" : "53f73fcb4d796f51",
      "name" : "1627733478401_Free_blocks___Eventbrite_block.webm",
      "source" : "53f73fcb4d796f51.webm",
      "type" : "video/webm",
      "size" : 636744
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "eee233a9f7d32889",
      "status" : "passed",
      "time" : {
        "start" : 1627733368434,
        "stop" : 1627733377939,
        "duration" : 9505
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 5,
        "skipped" : 0,
        "passed" : 196,
        "unknown" : 0,
        "total" : 201
      },
      "items" : [ {
        "uid" : "a767eb5aa1a9862b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/a767eb5aa1a9862b",
        "status" : "passed",
        "time" : {
          "start" : 1627717275454,
          "stop" : 1627717284541,
          "duration" : 9087
        }
      }, {
        "uid" : "f49e1d51762ec1f0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/f49e1d51762ec1f0",
        "status" : "passed",
        "time" : {
          "start" : 1627690178919,
          "stop" : 1627690186844,
          "duration" : 7925
        }
      }, {
        "uid" : "6d3e50722685d3fd",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/6d3e50722685d3fd",
        "status" : "passed",
        "time" : {
          "start" : 1627687596749,
          "stop" : 1627687609510,
          "duration" : 12761
        }
      }, {
        "uid" : "ba35bc228a070c86",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/ba35bc228a070c86",
        "status" : "passed",
        "time" : {
          "start" : 1627680936023,
          "stop" : 1627680945647,
          "duration" : 9624
        }
      }, {
        "uid" : "d4ec18a706520700",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/d4ec18a706520700",
        "status" : "passed",
        "time" : {
          "start" : 1627647088718,
          "stop" : 1627647098410,
          "duration" : 9692
        }
      }, {
        "uid" : "effc1f8917f67401",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/effc1f8917f67401",
        "status" : "passed",
        "time" : {
          "start" : 1627618935404,
          "stop" : 1627618943548,
          "duration" : 8144
        }
      }, {
        "uid" : "473653e217e223ea",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/473653e217e223ea",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1627603853565,
          "stop" : 1627603885041,
          "duration" : 31476
        }
      }, {
        "uid" : "1e54511b2e86277d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/1e54511b2e86277d",
        "status" : "passed",
        "time" : {
          "start" : 1627593038076,
          "stop" : 1627593045857,
          "duration" : 7781
        }
      }, {
        "uid" : "5b98246d1062cf5f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/5b98246d1062cf5f",
        "status" : "passed",
        "time" : {
          "start" : 1627589502270,
          "stop" : 1627589512729,
          "duration" : 10459
        }
      }, {
        "uid" : "adc071b70de6c121",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/adc071b70de6c121",
        "status" : "passed",
        "time" : {
          "start" : 1627588571962,
          "stop" : 1627588581669,
          "duration" : 9707
        }
      }, {
        "uid" : "7efd0f889af43c6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/7efd0f889af43c6",
        "status" : "passed",
        "time" : {
          "start" : 1627587203973,
          "stop" : 1627587213694,
          "duration" : 9721
        }
      }, {
        "uid" : "907cb33e1898bdeb",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/907cb33e1898bdeb",
        "status" : "passed",
        "time" : {
          "start" : 1627582239752,
          "stop" : 1627582246671,
          "duration" : 6919
        }
      }, {
        "uid" : "803029822097a62e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/803029822097a62e",
        "status" : "passed",
        "time" : {
          "start" : 1627577271766,
          "stop" : 1627577279351,
          "duration" : 7585
        }
      }, {
        "uid" : "247cb0c793029f2",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/247cb0c793029f2",
        "status" : "passed",
        "time" : {
          "start" : 1627569047224,
          "stop" : 1627569056373,
          "duration" : 9149
        }
      }, {
        "uid" : "5ef855a6891db26a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/5ef855a6891db26a",
        "status" : "passed",
        "time" : {
          "start" : 1627560668130,
          "stop" : 1627560680089,
          "duration" : 11959
        }
      }, {
        "uid" : "92073fce52907a1e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/92073fce52907a1e",
        "status" : "passed",
        "time" : {
          "start" : 1627523815286,
          "stop" : 1627523826496,
          "duration" : 11210
        }
      }, {
        "uid" : "f8f06d17f2bf2ab1",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/f8f06d17f2bf2ab1",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1627517445880,
          "stop" : 1627517477506,
          "duration" : 31626
        }
      }, {
        "uid" : "ce78a63a1672b861",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/ce78a63a1672b861",
        "status" : "passed",
        "time" : {
          "start" : 1627512573329,
          "stop" : 1627512581055,
          "duration" : 7726
        }
      }, {
        "uid" : "b1ee6572d7e62369",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/b1ee6572d7e62369",
        "status" : "passed",
        "time" : {
          "start" : 1627474290939,
          "stop" : 1627474301238,
          "duration" : 10299
        }
      }, {
        "uid" : "a6c23a23bc610f56",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/a6c23a23bc610f56",
        "status" : "passed",
        "time" : {
          "start" : 1627431119878,
          "stop" : 1627431131038,
          "duration" : 11160
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "9c1a400ec66f6be9.json",
  "parameterValues" : [ ]
}