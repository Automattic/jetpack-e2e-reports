{
  "uid" : "fe1dd6c946c8fff7",
  "name" : "MailChimp Block",
  "fullName" : "MailChimp Block",
  "historyId" : "1e0e5667b8c419e68fc1ae6a0d73dd61",
  "time" : {
    "start" : 1630409013062,
    "stop" : 1630409071056,
    "duration" : 57994
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _reporter.testStep)(\"Add a MailChimp block\", async () => {\n    blockId = await blockEditor.insertBlock(\n      _mailchimp.default.name(),\n      _mailchimp.default.title()\n    );\n  });\n  await (0, _reporter.testStep)(\"Connect to MailChimp\", async () => {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post and assert that MailChimp block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _reporter.testStep)(&quot;Add a MailChimp block&quot;, async () =&gt; {\n    blockId = await blockEditor.insertBlock(\n      _mailchimp.default.name(),\n      _mailchimp.default.title()\n    );\n  });\n  await (0, _reporter.testStep)(&quot;Connect to MailChimp&quot;, async () =&gt; {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _reporter.testStep)(\n    &quot;Publish a post and assert that MailChimp block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "TimeoutError",
  "statusTrace" : "page.waitForSelector: Timeout 40000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"//option[contains(text(), 'e2etesting')]\"\n============================================================\nNote: use DEBUG=pw:api environment variable to capture Playwright logs.",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1630409005635,
        "stop" : 1630409013056,
        "duration" : 7421
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1630409071114,
        "stop" : 1630409074811,
        "duration" : 3697
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1630409082098,
        "stop" : 1630409084823,
        "duration" : 2725
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _reporter.testStep)(\"Add a MailChimp block\", async () => {\n    blockId = await blockEditor.insertBlock(\n      _mailchimp.default.name(),\n      _mailchimp.default.title()\n    );\n  });\n  await (0, _reporter.testStep)(\"Connect to MailChimp\", async () => {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post and assert that MailChimp block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "broken",
    "statusMessage" : "TimeoutError",
    "statusTrace" : "page.waitForSelector: Timeout 40000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"//option[contains(text(), 'e2etesting')]\"\n============================================================\nNote: use DEBUG=pw:api environment variable to capture Playwright logs.",
    "steps" : [ {
      "name" : "Add a MailChimp block",
      "time" : {
        "start" : 1630409013141,
        "stop" : 1630409014976,
        "duration" : 1835
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Mailchimp",
        "time" : {
          "start" : 1630409013142,
          "stop" : 1630409014416,
          "duration" : 1274
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: mailchimp",
        "time" : {
          "start" : 1630409014417,
          "stop" : 1630409014808,
          "duration" : 391
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Connect to MailChimp",
      "time" : {
        "start" : 1630409014978,
        "stop" : 1630409062316,
        "duration" : 47338
      },
      "status" : "failed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ {
      "uid" : "9d18347e5f4054e1",
      "name" : "Paid blocks - MailChimp Block",
      "source" : "9d18347e5f4054e1.png",
      "type" : "image/png",
      "size" : 42256
    }, {
      "uid" : "831f053c79ffd50c",
      "name" : "Paid blocks - MailChimp Block",
      "source" : "831f053c79ffd50c.png",
      "type" : "image/png",
      "size" : 132900
    }, {
      "uid" : "c4c91476ee99d2f8",
      "name" : "1630409062990_Paid_blocks___MailChimp_Block.webm",
      "source" : "c4c91476ee99d2f8.webm",
      "type" : "video/webm",
      "size" : 1076570
    } ],
    "parameters" : [ ],
    "stepsCount" : 4,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 84,
        "skipped" : 0,
        "passed" : 364,
        "unknown" : 0,
        "total" : 448
      },
      "items" : [ {
        "uid" : "821c492cf6bc509d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/821c492cf6bc509d",
        "status" : "passed",
        "time" : {
          "start" : 1630405323019,
          "stop" : 1630405340374,
          "duration" : 17355
        }
      }, {
        "uid" : "7b3e3b75e0b32da9",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/7b3e3b75e0b32da9",
        "status" : "passed",
        "time" : {
          "start" : 1630368468612,
          "stop" : 1630368487019,
          "duration" : 18407
        }
      }, {
        "uid" : "ef0dbb0a2bb51ee0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/ef0dbb0a2bb51ee0",
        "status" : "passed",
        "time" : {
          "start" : 1630353653018,
          "stop" : 1630353670068,
          "duration" : 17050
        }
      }, {
        "uid" : "c451bdf374a1e7f8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/c451bdf374a1e7f8",
        "status" : "passed",
        "time" : {
          "start" : 1630352498920,
          "stop" : 1630352514867,
          "duration" : 15947
        }
      }, {
        "uid" : "c43d7d399c85b432",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/c43d7d399c85b432",
        "status" : "passed",
        "time" : {
          "start" : 1630351684192,
          "stop" : 1630351700485,
          "duration" : 16293
        }
      }, {
        "uid" : "bc618882de7325c8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/bc618882de7325c8",
        "status" : "passed",
        "time" : {
          "start" : 1630348766785,
          "stop" : 1630348790094,
          "duration" : 23309
        }
      }, {
        "uid" : "75b0195b38d2dec8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/75b0195b38d2dec8",
        "status" : "passed",
        "time" : {
          "start" : 1630347886078,
          "stop" : 1630347904153,
          "duration" : 18075
        }
      }, {
        "uid" : "cdb4c2cd76621147",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/cdb4c2cd76621147",
        "status" : "passed",
        "time" : {
          "start" : 1630347034921,
          "stop" : 1630347051315,
          "duration" : 16394
        }
      }, {
        "uid" : "728180758328ba5e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/728180758328ba5e",
        "status" : "passed",
        "time" : {
          "start" : 1630343545689,
          "stop" : 1630343561508,
          "duration" : 15819
        }
      }, {
        "uid" : "3f4467072d8c2452",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/3f4467072d8c2452",
        "status" : "passed",
        "time" : {
          "start" : 1630339083048,
          "stop" : 1630339106679,
          "duration" : 23631
        }
      }, {
        "uid" : "2ab7c082efd1978f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/2ab7c082efd1978f",
        "status" : "passed",
        "time" : {
          "start" : 1630337013531,
          "stop" : 1630337029320,
          "duration" : 15789
        }
      }, {
        "uid" : "aad089c7d3fed463",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/aad089c7d3fed463",
        "status" : "passed",
        "time" : {
          "start" : 1630335853043,
          "stop" : 1630335871152,
          "duration" : 18109
        }
      }, {
        "uid" : "2c4b8265c0813762",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/2c4b8265c0813762",
        "status" : "passed",
        "time" : {
          "start" : 1630334255078,
          "stop" : 1630334274465,
          "duration" : 19387
        }
      }, {
        "uid" : "a040622ff139a8c7",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/a040622ff139a8c7",
        "status" : "passed",
        "time" : {
          "start" : 1630332672262,
          "stop" : 1630332685932,
          "duration" : 13670
        }
      }, {
        "uid" : "60fb54a6a278d867",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/60fb54a6a278d867",
        "status" : "passed",
        "time" : {
          "start" : 1630327515851,
          "stop" : 1630327531542,
          "duration" : 15691
        }
      }, {
        "uid" : "aeab2e91a9e4817f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/aeab2e91a9e4817f",
        "status" : "passed",
        "time" : {
          "start" : 1630325564176,
          "stop" : 1630325585388,
          "duration" : 21212
        }
      }, {
        "uid" : "5a642f9da9958035",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/5a642f9da9958035",
        "status" : "passed",
        "time" : {
          "start" : 1630306940209,
          "stop" : 1630306960935,
          "duration" : 20726
        }
      }, {
        "uid" : "39be91eb885882f9",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/39be91eb885882f9",
        "status" : "broken",
        "statusDetails" : "Error",
        "time" : {
          "start" : 1630305201707,
          "stop" : 1630305219636,
          "duration" : 17929
        }
      }, {
        "uid" : "8329ce1b0ed6b767",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/8329ce1b0ed6b767",
        "status" : "passed",
        "time" : {
          "start" : 1630304547000,
          "stop" : 1630304564912,
          "duration" : 17912
        }
      }, {
        "uid" : "40226ca88c78c2a0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/40226ca88c78c2a0",
        "status" : "passed",
        "time" : {
          "start" : 1630282055962,
          "stop" : 1630282074537,
          "duration" : 18575
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "fe1dd6c946c8fff7.json",
  "parameterValues" : [ ]
}