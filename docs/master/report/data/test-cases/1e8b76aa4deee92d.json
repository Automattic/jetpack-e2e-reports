{
  "uid" : "1e8b76aa4deee92d",
  "name" : "Recommendations (Jetpack Assistant)",
  "fullName" : "Recommendations (Jetpack Assistant)",
  "historyId" : "6acbca09fe63fb0db4bf908821bc38aa",
  "time" : {
    "start" : 1626286837828,
    "stop" : 1626286852607,
    "duration" : 14779
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let recommendationsPage;\n  await (0, _testSetup.step)(\n    \"Navigate to the Recommendations module\",\n    async () => {\n      recommendationsPage = await _recommendations.default.visit(page);\n      const isPageVisible =\n        await recommendationsPage.areSiteTypeQuestionsVisible();\n\n      expect(isPageVisible).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"site-type\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Check Personal and Other checkboxes\",\n    async () => {\n      await recommendationsPage.checkPersonalSiteType();\n      await recommendationsPage.checkOtherSiteType();\n      expect(\n        await recommendationsPage.isPersonalSiteTypeChecked()\n      ).toBeTruthy();\n      expect(await recommendationsPage.isOtherSiteTypeChecked()).toBeTruthy();\n      expect(await recommendationsPage.isBusinessTypeUnchecked()).toBeFalsy();\n      expect(await recommendationsPage.isStoreTypeUnchecked()).toBeFalsy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Save answers and continue to the Monitor step\",\n    async () => {\n      await recommendationsPage.saveSiteTypeAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isMonitorStep =\n        await recommendationsPage.isEnableMonitoringButtonVisible();\n      expect(isMonitorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"monitor\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Enable Monitoring and continue to Related Post step\",\n    async () => {\n      await recommendationsPage.enableMonitoringAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isRelatedPostsStep =\n        await recommendationsPage.isEnableRelatedPostsButtonVisible();\n      expect(isRelatedPostsStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"related-posts\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Enable Related Posts and continue to Creative Mail step\",\n    async () => {\n      await recommendationsPage.enableRelatedPostsAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isCreativeMailStep =\n        await recommendationsPage.isInstallCreativeMailButtonVisible();\n      expect(isCreativeMailStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"creative-mail\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Skip Creative Mail and continue to Site Accelerator\",\n    async () => {\n      await recommendationsPage.skipCreativeMailAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSiteAcceleratorStep =\n        await recommendationsPage.isEnableSiteAcceleratorButtonVisible();\n      expect(isSiteAcceleratorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"site-accelerator\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Skip Site Accelerator and continue to Summary\",\n    async () => {\n      await recommendationsPage.skipSiteAcceleratorAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSummaryContent =\n        await recommendationsPage.isSummaryContentVisible();\n      const isSummarySidebar =\n        await recommendationsPage.isSummarySidebarVisible();\n      expect(isSummaryContent && isSummarySidebar).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"summary\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Verify Monitoring and Related Posts are enabled\",\n    async () => {\n      const isMonitoringFeatureEnabled =\n        await recommendationsPage.isMonitoringFeatureEnabled();\n      const isRelatedPostsFeatureEnabled =\n        await recommendationsPage.isRelatedPostsFeatureEnabled();\n      expect(\n        isMonitoringFeatureEnabled && isRelatedPostsFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Verify Creative Mail and Site Accelerator are disabled\",\n    async () => {\n      const isCreativeMailFeatureEnabled =\n        await recommendationsPage.isCreativeMailFeatureEnabled();\n      const isSiteAcceleratorFeatureEnabled =\n        await recommendationsPage.isSiteAcceleratorFeatureEnabled();\n      expect(\n        isCreativeMailFeatureEnabled && isSiteAcceleratorFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let recommendationsPage;\n  await (0, _testSetup.step)(\n    &quot;Navigate to the Recommendations module&quot;,\n    async () =&gt; {\n      recommendationsPage = await _recommendations.default.visit(page);\n      const isPageVisible =\n        await recommendationsPage.areSiteTypeQuestionsVisible();\n\n      expect(isPageVisible).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;site-type&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Check Personal and Other checkboxes&quot;,\n    async () =&gt; {\n      await recommendationsPage.checkPersonalSiteType();\n      await recommendationsPage.checkOtherSiteType();\n      expect(\n        await recommendationsPage.isPersonalSiteTypeChecked()\n      ).toBeTruthy();\n      expect(await recommendationsPage.isOtherSiteTypeChecked()).toBeTruthy();\n      expect(await recommendationsPage.isBusinessTypeUnchecked()).toBeFalsy();\n      expect(await recommendationsPage.isStoreTypeUnchecked()).toBeFalsy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Save answers and continue to the Monitor step&quot;,\n    async () =&gt; {\n      await recommendationsPage.saveSiteTypeAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isMonitorStep =\n        await recommendationsPage.isEnableMonitoringButtonVisible();\n      expect(isMonitorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;monitor&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Enable Monitoring and continue to Related Post step&quot;,\n    async () =&gt; {\n      await recommendationsPage.enableMonitoringAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isRelatedPostsStep =\n        await recommendationsPage.isEnableRelatedPostsButtonVisible();\n      expect(isRelatedPostsStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;related-posts&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Enable Related Posts and continue to Creative Mail step&quot;,\n    async () =&gt; {\n      await recommendationsPage.enableRelatedPostsAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isCreativeMailStep =\n        await recommendationsPage.isInstallCreativeMailButtonVisible();\n      expect(isCreativeMailStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;creative-mail&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Skip Creative Mail and continue to Site Accelerator&quot;,\n    async () =&gt; {\n      await recommendationsPage.skipCreativeMailAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSiteAcceleratorStep =\n        await recommendationsPage.isEnableSiteAcceleratorButtonVisible();\n      expect(isSiteAcceleratorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;site-accelerator&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Skip Site Accelerator and continue to Summary&quot;,\n    async () =&gt; {\n      await recommendationsPage.skipSiteAcceleratorAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSummaryContent =\n        await recommendationsPage.isSummaryContentVisible();\n      const isSummarySidebar =\n        await recommendationsPage.isSummarySidebarVisible();\n      expect(isSummaryContent &amp;&amp; isSummarySidebar).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;summary&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Verify Monitoring and Related Posts are enabled&quot;,\n    async () =&gt; {\n      const isMonitoringFeatureEnabled =\n        await recommendationsPage.isMonitoringFeatureEnabled();\n      const isRelatedPostsFeatureEnabled =\n        await recommendationsPage.isRelatedPostsFeatureEnabled();\n      expect(\n        isMonitoringFeatureEnabled &amp;&amp; isRelatedPostsFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Verify Creative Mail and Site Accelerator are disabled&quot;,\n    async () =&gt; {\n      const isCreativeMailFeatureEnabled =\n        await recommendationsPage.isCreativeMailFeatureEnabled();\n      const isSiteAcceleratorFeatureEnabled =\n        await recommendationsPage.isSiteAcceleratorFeatureEnabled();\n      expect(\n        isCreativeMailFeatureEnabled &amp;&amp; isSiteAcceleratorFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "recommendations.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 93,
        "unknown" : 0,
        "total" : 93
      },
      "items" : [ {
        "uid" : "24a518bdb88e07b1",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/24a518bdb88e07b1",
        "status" : "passed",
        "time" : {
          "start" : 1626284818363,
          "stop" : 1626284832992,
          "duration" : 14629
        }
      }, {
        "uid" : "8e062d12765926b1",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/8e062d12765926b1",
        "status" : "passed",
        "time" : {
          "start" : 1626280089199,
          "stop" : 1626280106241,
          "duration" : 17042
        }
      }, {
        "uid" : "802a2e6604c643f9",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/802a2e6604c643f9",
        "status" : "passed",
        "time" : {
          "start" : 1626278287071,
          "stop" : 1626278300969,
          "duration" : 13898
        }
      }, {
        "uid" : "9f63da1beeb20391",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/9f63da1beeb20391",
        "status" : "passed",
        "time" : {
          "start" : 1626275037116,
          "stop" : 1626275052867,
          "duration" : 15751
        }
      }, {
        "uid" : "cd44eb177d112249",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/cd44eb177d112249",
        "status" : "passed",
        "time" : {
          "start" : 1626270128293,
          "stop" : 1626270142739,
          "duration" : 14446
        }
      }, {
        "uid" : "d107d97e17ce5d2",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/d107d97e17ce5d2",
        "status" : "passed",
        "time" : {
          "start" : 1626268028201,
          "stop" : 1626268044930,
          "duration" : 16729
        }
      }, {
        "uid" : "cba059848a1e1aa2",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/cba059848a1e1aa2",
        "status" : "passed",
        "time" : {
          "start" : 1626264414594,
          "stop" : 1626264428971,
          "duration" : 14377
        }
      }, {
        "uid" : "3173b5f2b9afa08e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/3173b5f2b9afa08e",
        "status" : "passed",
        "time" : {
          "start" : 1626263728942,
          "stop" : 1626263743101,
          "duration" : 14159
        }
      }, {
        "uid" : "2a4506dc2158799",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/2a4506dc2158799",
        "status" : "passed",
        "time" : {
          "start" : 1626258321431,
          "stop" : 1626258335772,
          "duration" : 14341
        }
      }, {
        "uid" : "f27290354fa581e2",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/f27290354fa581e2",
        "status" : "passed",
        "time" : {
          "start" : 1626256580243,
          "stop" : 1626256593213,
          "duration" : 12970
        }
      }, {
        "uid" : "8835869a09ce27f4",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/8835869a09ce27f4",
        "status" : "passed",
        "time" : {
          "start" : 1626255617074,
          "stop" : 1626255632688,
          "duration" : 15614
        }
      }, {
        "uid" : "f371a1006ca3e7ed",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/f371a1006ca3e7ed",
        "status" : "passed",
        "time" : {
          "start" : 1626252984843,
          "stop" : 1626252999163,
          "duration" : 14320
        }
      }, {
        "uid" : "2015c0e1585947a0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/2015c0e1585947a0",
        "status" : "passed",
        "time" : {
          "start" : 1626221186837,
          "stop" : 1626221202966,
          "duration" : 16129
        }
      }, {
        "uid" : "13105d0081ce4f9d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/13105d0081ce4f9d",
        "status" : "passed",
        "time" : {
          "start" : 1626218578877,
          "stop" : 1626218594754,
          "duration" : 15877
        }
      }, {
        "uid" : "78fdc472e1defb96",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/78fdc472e1defb96",
        "status" : "passed",
        "time" : {
          "start" : 1626209037540,
          "stop" : 1626209050655,
          "duration" : 13115
        }
      }, {
        "uid" : "f420ea262a9ec571",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/f420ea262a9ec571",
        "status" : "passed",
        "time" : {
          "start" : 1626194168335,
          "stop" : 1626194181892,
          "duration" : 13557
        }
      }, {
        "uid" : "d46c643c73d7c7bb",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/d46c643c73d7c7bb",
        "status" : "passed",
        "time" : {
          "start" : 1626187695812,
          "stop" : 1626187711319,
          "duration" : 15507
        }
      }, {
        "uid" : "cea6ba206548561a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/cea6ba206548561a",
        "status" : "passed",
        "time" : {
          "start" : 1626180101928,
          "stop" : 1626180118564,
          "duration" : 16636
        }
      }, {
        "uid" : "3c2f8ce7e70edc2c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/3c2f8ce7e70edc2c",
        "status" : "passed",
        "time" : {
          "start" : 1626178010181,
          "stop" : 1626178025558,
          "duration" : 15377
        }
      }, {
        "uid" : "74494409bc879f89",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/74494409bc879f89",
        "status" : "passed",
        "time" : {
          "start" : 1626176872052,
          "stop" : 1626176884801,
          "duration" : 12749
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "1e8b76aa4deee92d.json",
  "parameterValues" : [ ]
}