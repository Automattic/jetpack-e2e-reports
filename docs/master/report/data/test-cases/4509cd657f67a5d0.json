{
  "uid" : "4509cd657f67a5d0",
  "name" : "Pinterest block",
  "fullName" : "Pinterest block",
  "historyId" : "bf919c5c1253559f0d007402decf47af",
  "time" : {
    "start" : 1628899826165,
    "stop" : 1628899831976,
    "duration" : 5811
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _reporter.testStep)(\"Add a Pinterest block\", async () => {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const pinId = _config.default.get(&quot;blocks.pinterest.pinId&quot;);\n\n  await (0, _reporter.testStep)(&quot;Add a Pinterest block&quot;, async () =&gt; {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    &quot;Publish a post with a Pinterest block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can assert that Pinterest block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1628899819368,
        "stop" : 1628899826156,
        "duration" : 6788
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1628899832142,
        "stop" : 1628899834513,
        "duration" : 2371
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _reporter.testStep)(\"Add a Pinterest block\", async () => {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Add a Pinterest block",
      "time" : {
        "start" : 1628899826223,
        "stop" : 1628899829460,
        "duration" : 3237
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Pinterest",
        "time" : {
          "start" : 1628899826233,
          "stop" : 1628899827471,
          "duration" : 1238
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: pinterest",
        "time" : {
          "start" : 1628899827475,
          "stop" : 1628899827900,
          "duration" : 425
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Publish a post with a Pinterest block",
      "time" : {
        "start" : 1628899829462,
        "stop" : 1628899831063,
        "duration" : 1601
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Publish post",
        "time" : {
          "start" : 1628899829595,
          "stop" : 1628899830553,
          "duration" : 958
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "View post",
        "time" : {
          "start" : 1628899830555,
          "stop" : 1628899831056,
          "duration" : 501
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Can assert that Pinterest block is rendered",
      "time" : {
        "start" : 1628899831068,
        "stop" : 1628899831959,
        "duration" : 891
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "ca73bb55301a5a8",
      "status" : "passed",
      "time" : {
        "start" : 1628899669454,
        "stop" : 1628899675998,
        "duration" : 6544
      }
    } ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 8,
        "skipped" : 0,
        "passed" : 302,
        "unknown" : 0,
        "total" : 310
      },
      "items" : [ {
        "uid" : "516ec9f5130a676e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/516ec9f5130a676e",
        "status" : "passed",
        "time" : {
          "start" : 1628895326891,
          "stop" : 1628895334307,
          "duration" : 7416
        }
      }, {
        "uid" : "85718173e2eeac7a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/85718173e2eeac7a",
        "status" : "passed",
        "time" : {
          "start" : 1628882591020,
          "stop" : 1628882596861,
          "duration" : 5841
        }
      }, {
        "uid" : "ec6f2c2fc34edf1e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/ec6f2c2fc34edf1e",
        "status" : "passed",
        "time" : {
          "start" : 1628871658591,
          "stop" : 1628871663552,
          "duration" : 4961
        }
      }, {
        "uid" : "e26fcefeb5f3a912",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/e26fcefeb5f3a912",
        "status" : "passed",
        "time" : {
          "start" : 1628870245445,
          "stop" : 1628870251772,
          "duration" : 6327
        }
      }, {
        "uid" : "ee9879bd31f66005",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/ee9879bd31f66005",
        "status" : "passed",
        "time" : {
          "start" : 1628862269881,
          "stop" : 1628862274839,
          "duration" : 4958
        }
      }, {
        "uid" : "559ec7fd069d730f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/559ec7fd069d730f",
        "status" : "passed",
        "time" : {
          "start" : 1628850857614,
          "stop" : 1628850866730,
          "duration" : 9116
        }
      }, {
        "uid" : "f340fb3b1f72b599",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/f340fb3b1f72b599",
        "status" : "passed",
        "time" : {
          "start" : 1628848892612,
          "stop" : 1628848898026,
          "duration" : 5414
        }
      }, {
        "uid" : "efef56536c95731d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/efef56536c95731d",
        "status" : "passed",
        "time" : {
          "start" : 1628844825123,
          "stop" : 1628844833440,
          "duration" : 8317
        }
      }, {
        "uid" : "4d628cac4de386fc",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/4d628cac4de386fc",
        "status" : "passed",
        "time" : {
          "start" : 1628841439338,
          "stop" : 1628841446867,
          "duration" : 7529
        }
      }, {
        "uid" : "274ecaf9f4567da6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/274ecaf9f4567da6",
        "status" : "passed",
        "time" : {
          "start" : 1628813336982,
          "stop" : 1628813343400,
          "duration" : 6418
        }
      }, {
        "uid" : "50a0950d10aa7c82",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/50a0950d10aa7c82",
        "status" : "passed",
        "time" : {
          "start" : 1628811467737,
          "stop" : 1628811476490,
          "duration" : 8753
        }
      }, {
        "uid" : "c9b6194cafc505ad",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/c9b6194cafc505ad",
        "status" : "passed",
        "time" : {
          "start" : 1628809590894,
          "stop" : 1628809598672,
          "duration" : 7778
        }
      }, {
        "uid" : "50b0f0bcd9e15e27",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/50b0f0bcd9e15e27",
        "status" : "passed",
        "time" : {
          "start" : 1628800079168,
          "stop" : 1628800084665,
          "duration" : 5497
        }
      }, {
        "uid" : "32bbda14903cdb6e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/32bbda14903cdb6e",
        "status" : "passed",
        "time" : {
          "start" : 1628783570994,
          "stop" : 1628783576677,
          "duration" : 5683
        }
      }, {
        "uid" : "a2f804c1ca2ab1a1",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/a2f804c1ca2ab1a1",
        "status" : "passed",
        "time" : {
          "start" : 1628770161941,
          "stop" : 1628770169117,
          "duration" : 7176
        }
      }, {
        "uid" : "51537fde17a66a25",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/51537fde17a66a25",
        "status" : "passed",
        "time" : {
          "start" : 1628765790068,
          "stop" : 1628765795308,
          "duration" : 5240
        }
      }, {
        "uid" : "6b2814680ecb28bd",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/6b2814680ecb28bd",
        "status" : "passed",
        "time" : {
          "start" : 1628764132703,
          "stop" : 1628764139450,
          "duration" : 6747
        }
      }, {
        "uid" : "6930cb0346ce49a1",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/6930cb0346ce49a1",
        "status" : "passed",
        "time" : {
          "start" : 1628763382720,
          "stop" : 1628763389853,
          "duration" : 7133
        }
      }, {
        "uid" : "fad01a7d9536af70",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/fad01a7d9536af70",
        "status" : "passed",
        "time" : {
          "start" : 1628762529402,
          "stop" : 1628762536415,
          "duration" : 7013
        }
      }, {
        "uid" : "db0e74988ee2a0b5",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/db0e74988ee2a0b5",
        "status" : "passed",
        "time" : {
          "start" : 1628757597282,
          "stop" : 1628757603652,
          "duration" : 6370
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "4509cd657f67a5d0.json",
  "parameterValues" : [ ]
}