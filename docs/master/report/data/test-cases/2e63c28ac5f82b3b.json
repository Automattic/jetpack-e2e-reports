{
  "uid" : "2e63c28ac5f82b3b",
  "name" : "Pay with PayPal",
  "fullName" : "Pay with PayPal",
  "historyId" : "2b956f1af1e91da7ea3b442b8c2cddca",
  "time" : {
    "start" : 1625173513810,
    "stop" : 1625173520958,
    "duration" : 7148
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pay with PayPal block\",\n    async () => {\n      await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n      blockId = await blockEditor.insertBlock(\n        _simplePayments.default.name(),\n        _simplePayments.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can fill details of Pay with PayPal block\",\n    async () => {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that Pay with PayPal block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a Pay with PayPal block&quot;,\n    async () =&gt; {\n      await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n      blockId = await blockEditor.insertBlock(\n        _simplePayments.default.name(),\n        _simplePayments.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can fill details of Pay with PayPal block&quot;,\n    async () =&gt; {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that Pay with PayPal block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 12,
        "unknown" : 0,
        "total" : 12
      },
      "items" : [ {
        "uid" : "5757a0c47f22938c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/5757a0c47f22938c",
        "status" : "passed",
        "time" : {
          "start" : 1625162270977,
          "stop" : 1625162279162,
          "duration" : 8185
        }
      }, {
        "uid" : "600071460f9bf277",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/600071460f9bf277",
        "status" : "passed",
        "time" : {
          "start" : 1625159069381,
          "stop" : 1625159075509,
          "duration" : 6128
        }
      }, {
        "uid" : "f5291cf2c34465c1",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/f5291cf2c34465c1",
        "status" : "passed",
        "time" : {
          "start" : 1625154188484,
          "stop" : 1625154194641,
          "duration" : 6157
        }
      }, {
        "uid" : "aab412c47d05a8a4",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/#testresult/aab412c47d05a8a4",
        "status" : "passed",
        "time" : {
          "start" : 1625153622592,
          "stop" : 1625153630000,
          "duration" : 7408
        }
      }, {
        "uid" : "8cc15a0f1e39b265",
        "status" : "passed",
        "time" : {
          "start" : 1625147613426,
          "stop" : 1625147621864,
          "duration" : 8438
        }
      }, {
        "uid" : "5fc283692b2f1534",
        "status" : "passed",
        "time" : {
          "start" : 1625141357794,
          "stop" : 1625141366580,
          "duration" : 8786
        }
      }, {
        "uid" : "566977933a46bd19",
        "status" : "passed",
        "time" : {
          "start" : 1625140217647,
          "stop" : 1625140224267,
          "duration" : 6620
        }
      }, {
        "uid" : "75374ab042539277",
        "status" : "passed",
        "time" : {
          "start" : 1625138718380,
          "stop" : 1625138726522,
          "duration" : 8142
        }
      }, {
        "uid" : "d75065c28f4d2fbb",
        "status" : "passed",
        "time" : {
          "start" : 1625135410697,
          "stop" : 1625135417523,
          "duration" : 6826
        }
      }, {
        "uid" : "5b0af128ad91a7e",
        "status" : "passed",
        "time" : {
          "start" : 1625068007330,
          "stop" : 1625068014618,
          "duration" : 7288
        }
      }, {
        "uid" : "572a47be164c0bb0",
        "status" : "passed",
        "time" : {
          "start" : 1625055587442,
          "stop" : 1625055593544,
          "duration" : 6102
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "2e63c28ac5f82b3b.json",
  "parameterValues" : [ ]
}