{
  "uid" : "d767eb923ad9d840",
  "name" : "Can perform search with default settings",
  "fullName" : "Can perform search with default settings",
  "historyId" : "8a48effa07b2a0dc8118fcc35772e118",
  "time" : {
    "start" : 1629072388267,
    "stop" : 1629072391690,
    "duration" : 3423
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _reporter.testStep)(\n    \"Can open the overlay by entering a query\",\n    async () => {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search controls in the overlay\",\n    async () => {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search results in the overlay\",\n    async () => {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can sort results by relevance by default\",\n    async () => {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        \"<mark>Test1</mark> Record 1\"\n      );\n    }\n  );\n  await (0, _reporter.testStep)(\"Can edit query in search form\", async () => {\n    await homepage.enterQueryToOverlay(\"test2\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 1\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can change sort order\", async () => {\n    await homepage.chooseSortingLink(\"newest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"newest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n    await homepage.chooseSortingLink(\"oldest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"oldest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can apply filters\", async () => {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n  });\n  await (0, _reporter.testStep)(\n    \"Can close overlay by clicking the cross\",\n    async () => {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  await (0, _reporter.testStep)(\n    &quot;Can open the overlay by entering a query&quot;,\n    async () =&gt; {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can show search controls in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can show search results in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can sort results by relevance by default&quot;,\n    async () =&gt; {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        &quot;&lt;mark&gt;Test1&lt;/mark&gt; Record 1&quot;\n      );\n    }\n  );\n  await (0, _reporter.testStep)(&quot;Can edit query in search form&quot;, async () =&gt; {\n    await homepage.enterQueryToOverlay(&quot;test2&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 1&quot;\n    );\n  });\n  await (0, _reporter.testStep)(&quot;Can change sort order&quot;, async () =&gt; {\n    await homepage.chooseSortingLink(&quot;newest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;newest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n    await homepage.chooseSortingLink(&quot;oldest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;oldest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n  });\n  await (0, _reporter.testStep)(&quot;Can apply filters&quot;, async () =&gt; {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n  });\n  await (0, _reporter.testStep)(\n    &quot;Can close overlay by clicking the cross&quot;,\n    async () =&gt; {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _reporter.testStep)(\n    \"Can open the overlay by entering a query\",\n    async () => {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search controls in the overlay\",\n    async () => {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search results in the overlay\",\n    async () => {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can sort results by relevance by default\",\n    async () => {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        \"<mark>Test1</mark> Record 1\"\n      );\n    }\n  );\n  await (0, _reporter.testStep)(\"Can edit query in search form\", async () => {\n    await homepage.enterQueryToOverlay(\"test2\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 1\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can change sort order\", async () => {\n    await homepage.chooseSortingLink(\"newest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"newest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n    await homepage.chooseSortingLink(\"oldest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"oldest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can apply filters\", async () => {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n  });\n  await (0, _reporter.testStep)(\n    \"Can close overlay by clicking the cross\",\n    async () => {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Can open the overlay by entering a query",
      "time" : {
        "start" : 1629072388346,
        "stop" : 1629072389018,
        "duration" : 672
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can show search controls in the overlay",
      "time" : {
        "start" : 1629072389023,
        "stop" : 1629072389228,
        "duration" : 205
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can show search results in the overlay",
      "time" : {
        "start" : 1629072389229,
        "stop" : 1629072389263,
        "duration" : 34
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can sort results by relevance by default",
      "time" : {
        "start" : 1629072389265,
        "stop" : 1629072389297,
        "duration" : 32
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can edit query in search form",
      "time" : {
        "start" : 1629072389298,
        "stop" : 1629072389678,
        "duration" : 380
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can change sort order",
      "time" : {
        "start" : 1629072389682,
        "stop" : 1629072390595,
        "duration" : 913
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can apply filters",
      "time" : {
        "start" : 1629072390597,
        "stop" : 1629072391460,
        "duration" : 863
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can close overlay by clicking the cross",
      "time" : {
        "start" : 1629072391461,
        "stop" : 1629072391666,
        "duration" : 205
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "search.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 59,
        "skipped" : 0,
        "passed" : 255,
        "unknown" : 0,
        "total" : 314
      },
      "items" : [ {
        "uid" : "1d7779673d628192",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/1d7779673d628192",
        "status" : "passed",
        "time" : {
          "start" : 1629029123147,
          "stop" : 1629029125878,
          "duration" : 2731
        }
      }, {
        "uid" : "39dbc65aa5c84f1a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/39dbc65aa5c84f1a",
        "status" : "passed",
        "time" : {
          "start" : 1628986006235,
          "stop" : 1628986009496,
          "duration" : 3261
        }
      }, {
        "uid" : "d42af305eca4c2d9",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/d42af305eca4c2d9",
        "status" : "passed",
        "time" : {
          "start" : 1628942812815,
          "stop" : 1628942816187,
          "duration" : 3372
        }
      }, {
        "uid" : "917605ce7fff09ff",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/917605ce7fff09ff",
        "status" : "passed",
        "time" : {
          "start" : 1628899607773,
          "stop" : 1628899611108,
          "duration" : 3335
        }
      }, {
        "uid" : "1e0960028fb73d3c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/1e0960028fb73d3c",
        "status" : "passed",
        "time" : {
          "start" : 1628895165497,
          "stop" : 1628895168966,
          "duration" : 3469
        }
      }, {
        "uid" : "5d09bff0755d94f0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/5d09bff0755d94f0",
        "status" : "passed",
        "time" : {
          "start" : 1628882379913,
          "stop" : 1628882383592,
          "duration" : 3679
        }
      }, {
        "uid" : "15d89b5a0268fced",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/15d89b5a0268fced",
        "status" : "passed",
        "time" : {
          "start" : 1628871510756,
          "stop" : 1628871514089,
          "duration" : 3333
        }
      }, {
        "uid" : "76d37c4fd9ec1e13",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/76d37c4fd9ec1e13",
        "status" : "passed",
        "time" : {
          "start" : 1628870100095,
          "stop" : 1628870103285,
          "duration" : 3190
        }
      }, {
        "uid" : "82d6976a50c8326e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/82d6976a50c8326e",
        "status" : "passed",
        "time" : {
          "start" : 1628862109573,
          "stop" : 1628862112900,
          "duration" : 3327
        }
      }, {
        "uid" : "d2d6f14b4bc84d50",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/d2d6f14b4bc84d50",
        "status" : "passed",
        "time" : {
          "start" : 1628850668071,
          "stop" : 1628850671489,
          "duration" : 3418
        }
      }, {
        "uid" : "6efeb03411070aef",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/6efeb03411070aef",
        "status" : "passed",
        "time" : {
          "start" : 1628848763492,
          "stop" : 1628848766157,
          "duration" : 2665
        }
      }, {
        "uid" : "6009dd75d0b63285",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/6009dd75d0b63285",
        "status" : "passed",
        "time" : {
          "start" : 1628844643722,
          "stop" : 1628844647385,
          "duration" : 3663
        }
      }, {
        "uid" : "e289823715321717",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/e289823715321717",
        "status" : "passed",
        "time" : {
          "start" : 1628841269403,
          "stop" : 1628841272209,
          "duration" : 2806
        }
      }, {
        "uid" : "a77a0c1e087968ed",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/a77a0c1e087968ed",
        "status" : "passed",
        "time" : {
          "start" : 1628813188245,
          "stop" : 1628813191603,
          "duration" : 3358
        }
      }, {
        "uid" : "c125267672f02646",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/c125267672f02646",
        "status" : "passed",
        "time" : {
          "start" : 1628811270459,
          "stop" : 1628811274712,
          "duration" : 4253
        }
      }, {
        "uid" : "5ff8aefc72bd703d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/5ff8aefc72bd703d",
        "status" : "passed",
        "time" : {
          "start" : 1628809428831,
          "stop" : 1628809432395,
          "duration" : 3564
        }
      }, {
        "uid" : "45af3c1c1dd01df8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/45af3c1c1dd01df8",
        "status" : "passed",
        "time" : {
          "start" : 1628799948459,
          "stop" : 1628799951406,
          "duration" : 2947
        }
      }, {
        "uid" : "56191fa9eb218e65",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/56191fa9eb218e65",
        "status" : "passed",
        "time" : {
          "start" : 1628783436210,
          "stop" : 1628783439160,
          "duration" : 2950
        }
      }, {
        "uid" : "6a8f92c6e6a5d18c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/6a8f92c6e6a5d18c",
        "status" : "passed",
        "time" : {
          "start" : 1628770008522,
          "stop" : 1628770011992,
          "duration" : 3470
        }
      }, {
        "uid" : "5394edbf51146635",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/5394edbf51146635",
        "status" : "passed",
        "time" : {
          "start" : 1628765661123,
          "stop" : 1628765664100,
          "duration" : 2977
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "d767eb923ad9d840.json",
  "parameterValues" : [ ]
}