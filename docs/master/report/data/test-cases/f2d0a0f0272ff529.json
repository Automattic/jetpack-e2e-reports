{
  "uid" : "f2d0a0f0272ff529",
  "name" : "Recommendations (Jetpack Assistant)",
  "fullName" : "Recommendations (Jetpack Assistant)",
  "historyId" : "6acbca09fe63fb0db4bf908821bc38aa",
  "time" : {
    "start" : 1623430265908,
    "stop" : 1623430280801,
    "duration" : 14893
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let recommendationsPage;\n  await (0, _testSetup.step)(\n    \"Navigate to the Recommendations module\",\n    async () => {\n      recommendationsPage = await _recommendations.default.visit(page);\n      const isPageVisible =\n        await recommendationsPage.areSiteTypeQuestionsVisible();\n\n      expect(isPageVisible).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"site-type\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Check Personal and Other checkboxes\",\n    async () => {\n      await recommendationsPage.checkPersonalSiteType();\n      await recommendationsPage.checkOtherSiteType();\n      expect(\n        await recommendationsPage.isPersonalSiteTypeChecked()\n      ).toBeTruthy();\n      expect(await recommendationsPage.isOtherSiteTypeChecked()).toBeTruthy();\n      expect(await recommendationsPage.isBusinessTypeUnchecked()).toBeFalsy();\n      expect(await recommendationsPage.isStoreTypeUnchecked()).toBeFalsy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Save answers and continue to the Monitor step\",\n    async () => {\n      await recommendationsPage.saveSiteTypeAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isMonitorStep =\n        await recommendationsPage.isEnableMonitoringButtonVisible();\n      expect(isMonitorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"monitor\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Enable Monitoring and continue to Related Post step\",\n    async () => {\n      await recommendationsPage.enableMonitoringAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isRelatedPostsStep =\n        await recommendationsPage.isEnableRelatedPostsButtonVisible();\n      expect(isRelatedPostsStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"related-posts\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Enable Related Posts and continue to Creative Mail step\",\n    async () => {\n      await recommendationsPage.enableRelatedPostsAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isCreativeMailStep =\n        await recommendationsPage.isInstallCreativeMailButtonVisible();\n      expect(isCreativeMailStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"creative-mail\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Skip Creative Mail and continue to Site Accelerator\",\n    async () => {\n      await recommendationsPage.skipCreativeMailAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSiteAcceleratorStep =\n        await recommendationsPage.isEnableSiteAcceleratorButtonVisible();\n      expect(isSiteAcceleratorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"site-accelerator\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Skip Site Accelerator and continue to Summary\",\n    async () => {\n      await recommendationsPage.skipSiteAcceleratorAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSummaryContent =\n        await recommendationsPage.isSummaryContentVisible();\n      const isSummarySidebar =\n        await recommendationsPage.isSummarySidebarVisible();\n      expect(isSummaryContent && isSummarySidebar).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"summary\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Verify Monitoring and Related Posts are enabled\",\n    async () => {\n      const isMonitoringFeatureEnabled =\n        await recommendationsPage.isMonitoringFeatureEnabled();\n      const isRelatedPostsFeatureEnabled =\n        await recommendationsPage.isRelatedPostsFeatureEnabled();\n      expect(\n        isMonitoringFeatureEnabled && isRelatedPostsFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Verify Creative Mail and Site Accelerator are disabled\",\n    async () => {\n      const isCreativeMailFeatureEnabled =\n        await recommendationsPage.isCreativeMailFeatureEnabled();\n      const isSiteAcceleratorFeatureEnabled =\n        await recommendationsPage.isSiteAcceleratorFeatureEnabled();\n      expect(\n        isCreativeMailFeatureEnabled && isSiteAcceleratorFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let recommendationsPage;\n  await (0, _testSetup.step)(\n    &quot;Navigate to the Recommendations module&quot;,\n    async () =&gt; {\n      recommendationsPage = await _recommendations.default.visit(page);\n      const isPageVisible =\n        await recommendationsPage.areSiteTypeQuestionsVisible();\n\n      expect(isPageVisible).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;site-type&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Check Personal and Other checkboxes&quot;,\n    async () =&gt; {\n      await recommendationsPage.checkPersonalSiteType();\n      await recommendationsPage.checkOtherSiteType();\n      expect(\n        await recommendationsPage.isPersonalSiteTypeChecked()\n      ).toBeTruthy();\n      expect(await recommendationsPage.isOtherSiteTypeChecked()).toBeTruthy();\n      expect(await recommendationsPage.isBusinessTypeUnchecked()).toBeFalsy();\n      expect(await recommendationsPage.isStoreTypeUnchecked()).toBeFalsy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Save answers and continue to the Monitor step&quot;,\n    async () =&gt; {\n      await recommendationsPage.saveSiteTypeAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isMonitorStep =\n        await recommendationsPage.isEnableMonitoringButtonVisible();\n      expect(isMonitorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;monitor&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Enable Monitoring and continue to Related Post step&quot;,\n    async () =&gt; {\n      await recommendationsPage.enableMonitoringAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isRelatedPostsStep =\n        await recommendationsPage.isEnableRelatedPostsButtonVisible();\n      expect(isRelatedPostsStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;related-posts&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Enable Related Posts and continue to Creative Mail step&quot;,\n    async () =&gt; {\n      await recommendationsPage.enableRelatedPostsAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isCreativeMailStep =\n        await recommendationsPage.isInstallCreativeMailButtonVisible();\n      expect(isCreativeMailStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;creative-mail&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Skip Creative Mail and continue to Site Accelerator&quot;,\n    async () =&gt; {\n      await recommendationsPage.skipCreativeMailAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSiteAcceleratorStep =\n        await recommendationsPage.isEnableSiteAcceleratorButtonVisible();\n      expect(isSiteAcceleratorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;site-accelerator&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Skip Site Accelerator and continue to Summary&quot;,\n    async () =&gt; {\n      await recommendationsPage.skipSiteAcceleratorAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSummaryContent =\n        await recommendationsPage.isSummaryContentVisible();\n      const isSummarySidebar =\n        await recommendationsPage.isSummarySidebarVisible();\n      expect(isSummaryContent &amp;&amp; isSummarySidebar).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;summary&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Verify Monitoring and Related Posts are enabled&quot;,\n    async () =&gt; {\n      const isMonitoringFeatureEnabled =\n        await recommendationsPage.isMonitoringFeatureEnabled();\n      const isRelatedPostsFeatureEnabled =\n        await recommendationsPage.isRelatedPostsFeatureEnabled();\n      expect(\n        isMonitoringFeatureEnabled &amp;&amp; isRelatedPostsFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Verify Creative Mail and Site Accelerator are disabled&quot;,\n    async () =&gt; {\n      const isCreativeMailFeatureEnabled =\n        await recommendationsPage.isCreativeMailFeatureEnabled();\n      const isSiteAcceleratorFeatureEnabled =\n        await recommendationsPage.isSiteAcceleratorFeatureEnabled();\n      expect(\n        isCreativeMailFeatureEnabled &amp;&amp; isSiteAcceleratorFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "recommendations.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "f5571069901c0092",
      "status" : "passed",
      "time" : {
        "start" : 1623425315305,
        "stop" : 1623425330508,
        "duration" : 15203
      }
    }, {
      "uid" : "f44892dec4097dbc",
      "status" : "passed",
      "time" : {
        "start" : 1623424642414,
        "stop" : 1623424657629,
        "duration" : 15215
      }
    }, {
      "uid" : "cfc6ebff273fc2ad",
      "status" : "passed",
      "time" : {
        "start" : 1623414801750,
        "stop" : 1623414818433,
        "duration" : 16683
      }
    }, {
      "uid" : "8e78a383b43858c6",
      "status" : "passed",
      "time" : {
        "start" : 1623413156477,
        "stop" : 1623413169212,
        "duration" : 12735
      }
    }, {
      "uid" : "be846cb401ac7b59",
      "status" : "passed",
      "time" : {
        "start" : 1623411689002,
        "stop" : 1623411703665,
        "duration" : 14663
      }
    }, {
      "uid" : "5fe17f38fb98fdaa",
      "status" : "passed",
      "time" : {
        "start" : 1623404865614,
        "stop" : 1623404880690,
        "duration" : 15076
      }
    }, {
      "uid" : "d5c71b1cc860ad03",
      "status" : "passed",
      "time" : {
        "start" : 1623370010549,
        "stop" : 1623370025700,
        "duration" : 15151
      }
    }, {
      "uid" : "4d16b0584416df88",
      "status" : "passed",
      "time" : {
        "start" : 1623359075157,
        "stop" : 1623359087982,
        "duration" : 12825
      }
    }, {
      "uid" : "66fda4f9d1dec65c",
      "status" : "passed",
      "time" : {
        "start" : 1623356922090,
        "stop" : 1623356935461,
        "duration" : 13371
      }
    }, {
      "uid" : "57c32f648fcf73ec",
      "status" : "passed",
      "time" : {
        "start" : 1623343096576,
        "stop" : 1623343111664,
        "duration" : 15088
      }
    }, {
      "uid" : "44ce491aa94bf416",
      "status" : "passed",
      "time" : {
        "start" : 1623342235772,
        "stop" : 1623342248124,
        "duration" : 12352
      }
    }, {
      "uid" : "cafec9d854ed4a8c",
      "status" : "passed",
      "time" : {
        "start" : 1623339175835,
        "stop" : 1623339188761,
        "duration" : 12926
      }
    }, {
      "uid" : "56df9ae7344c6a3a",
      "status" : "passed",
      "time" : {
        "start" : 1623326806429,
        "stop" : 1623326822271,
        "duration" : 15842
      }
    }, {
      "uid" : "5b8f0ff68c411221",
      "status" : "passed",
      "time" : {
        "start" : 1623283617207,
        "stop" : 1623283633287,
        "duration" : 16080
      }
    }, {
      "uid" : "a4c70a77628bc5bf",
      "status" : "passed",
      "time" : {
        "start" : 1623270811510,
        "stop" : 1623270829983,
        "duration" : 18473
      }
    }, {
      "uid" : "56d380cf64fbd9b3",
      "status" : "passed",
      "time" : {
        "start" : 1623264838124,
        "stop" : 1623264854378,
        "duration" : 16254
      }
    }, {
      "uid" : "63b6be1027789e1",
      "status" : "passed",
      "time" : {
        "start" : 1623250576927,
        "stop" : 1623250591946,
        "duration" : 15019
      }
    }, {
      "uid" : "6c1979369ab236c1",
      "status" : "passed",
      "time" : {
        "start" : 1623240486049,
        "stop" : 1623240504972,
        "duration" : 18923
      }
    }, {
      "uid" : "13aa5e718f37b93a",
      "status" : "passed",
      "time" : {
        "start" : 1623215403494,
        "stop" : 1623215416297,
        "duration" : 12803
      }
    }, {
      "uid" : "479d6b03ed1995e0",
      "status" : "passed",
      "time" : {
        "start" : 1623214150287,
        "stop" : 1623214165599,
        "duration" : 15312
      }
    }, {
      "uid" : "da0cf074c5028ecd",
      "status" : "passed",
      "time" : {
        "start" : 1623206512512,
        "stop" : 1623206527092,
        "duration" : 14580
      }
    }, {
      "uid" : "e542d4d147e9ac4c",
      "status" : "passed",
      "time" : {
        "start" : 1623197205796,
        "stop" : 1623197219911,
        "duration" : 14115
      }
    }, {
      "uid" : "31da5b351de293d5",
      "status" : "passed",
      "time" : {
        "start" : 1623182366350,
        "stop" : 1623182380789,
        "duration" : 14439
      }
    }, {
      "uid" : "b61820905ca37bf1",
      "status" : "passed",
      "time" : {
        "start" : 1623168473203,
        "stop" : 1623168487472,
        "duration" : 14269
      }
    }, {
      "uid" : "b9153ba5c086aeb6",
      "status" : "passed",
      "time" : {
        "start" : 1623163300960,
        "stop" : 1623163318594,
        "duration" : 17634
      }
    }, {
      "uid" : "75bee940ac4a96e5",
      "status" : "passed",
      "time" : {
        "start" : 1623160573108,
        "stop" : 1623160587409,
        "duration" : 14301
      }
    }, {
      "uid" : "4ed617a8a73a8513",
      "status" : "passed",
      "time" : {
        "start" : 1623154959421,
        "stop" : 1623154974493,
        "duration" : 15072
      }
    }, {
      "uid" : "370642e80435c4d9",
      "status" : "passed",
      "time" : {
        "start" : 1623154061211,
        "stop" : 1623154077818,
        "duration" : 16607
      }
    }, {
      "uid" : "d80f1a7bab11783f",
      "status" : "passed",
      "time" : {
        "start" : 1623111392559,
        "stop" : 1623111405510,
        "duration" : 12951
      }
    }, {
      "uid" : "56d1acf899f67ad7",
      "status" : "passed",
      "time" : {
        "start" : 1623105299223,
        "stop" : 1623105314667,
        "duration" : 15444
      }
    }, {
      "uid" : "462a7fd811bb46e5",
      "status" : "passed",
      "time" : {
        "start" : 1623102996831,
        "stop" : 1623103013760,
        "duration" : 16929
      }
    }, {
      "uid" : "5a9220d75656bcd5",
      "status" : "passed",
      "time" : {
        "start" : 1623097647869,
        "stop" : 1623097663449,
        "duration" : 15580
      }
    }, {
      "uid" : "6229fbe940ef806d",
      "status" : "passed",
      "time" : {
        "start" : 1623095517258,
        "stop" : 1623095534047,
        "duration" : 16789
      }
    }, {
      "uid" : "12843624661fbcea",
      "status" : "passed",
      "time" : {
        "start" : 1623068343373,
        "stop" : 1623068358499,
        "duration" : 15126
      }
    }, {
      "uid" : "176bbb948783e87b",
      "status" : "passed",
      "time" : {
        "start" : 1623067187572,
        "stop" : 1623067204129,
        "duration" : 16557
      }
    } ],
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "f2d0a0f0272ff529.json",
  "parameterValues" : [ ]
}