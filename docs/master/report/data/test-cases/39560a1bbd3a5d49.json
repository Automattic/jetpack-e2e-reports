{
  "uid" : "39560a1bbd3a5d49",
  "name" : "Recommendations (Jetpack Assistant)",
  "fullName" : "Recommendations (Jetpack Assistant)",
  "historyId" : "6acbca09fe63fb0db4bf908821bc38aa",
  "time" : {
    "start" : 1626171227798,
    "stop" : 1626171240743,
    "duration" : 12945
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let recommendationsPage;\n  await (0, _testSetup.step)(\n    \"Navigate to the Recommendations module\",\n    async () => {\n      recommendationsPage = await _recommendations.default.visit(page);\n      const isPageVisible =\n        await recommendationsPage.areSiteTypeQuestionsVisible();\n\n      expect(isPageVisible).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"site-type\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Check Personal and Other checkboxes\",\n    async () => {\n      await recommendationsPage.checkPersonalSiteType();\n      await recommendationsPage.checkOtherSiteType();\n      expect(\n        await recommendationsPage.isPersonalSiteTypeChecked()\n      ).toBeTruthy();\n      expect(await recommendationsPage.isOtherSiteTypeChecked()).toBeTruthy();\n      expect(await recommendationsPage.isBusinessTypeUnchecked()).toBeFalsy();\n      expect(await recommendationsPage.isStoreTypeUnchecked()).toBeFalsy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Save answers and continue to the Monitor step\",\n    async () => {\n      await recommendationsPage.saveSiteTypeAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isMonitorStep =\n        await recommendationsPage.isEnableMonitoringButtonVisible();\n      expect(isMonitorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"monitor\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Enable Monitoring and continue to Related Post step\",\n    async () => {\n      await recommendationsPage.enableMonitoringAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isRelatedPostsStep =\n        await recommendationsPage.isEnableRelatedPostsButtonVisible();\n      expect(isRelatedPostsStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"related-posts\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Enable Related Posts and continue to Creative Mail step\",\n    async () => {\n      await recommendationsPage.enableRelatedPostsAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isCreativeMailStep =\n        await recommendationsPage.isInstallCreativeMailButtonVisible();\n      expect(isCreativeMailStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"creative-mail\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Skip Creative Mail and continue to Site Accelerator\",\n    async () => {\n      await recommendationsPage.skipCreativeMailAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSiteAcceleratorStep =\n        await recommendationsPage.isEnableSiteAcceleratorButtonVisible();\n      expect(isSiteAcceleratorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"site-accelerator\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Skip Site Accelerator and continue to Summary\",\n    async () => {\n      await recommendationsPage.skipSiteAcceleratorAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSummaryContent =\n        await recommendationsPage.isSummaryContentVisible();\n      const isSummarySidebar =\n        await recommendationsPage.isSummarySidebarVisible();\n      expect(isSummaryContent && isSummarySidebar).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"summary\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Verify Monitoring and Related Posts are enabled\",\n    async () => {\n      const isMonitoringFeatureEnabled =\n        await recommendationsPage.isMonitoringFeatureEnabled();\n      const isRelatedPostsFeatureEnabled =\n        await recommendationsPage.isRelatedPostsFeatureEnabled();\n      expect(\n        isMonitoringFeatureEnabled && isRelatedPostsFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Verify Creative Mail and Site Accelerator are disabled\",\n    async () => {\n      const isCreativeMailFeatureEnabled =\n        await recommendationsPage.isCreativeMailFeatureEnabled();\n      const isSiteAcceleratorFeatureEnabled =\n        await recommendationsPage.isSiteAcceleratorFeatureEnabled();\n      expect(\n        isCreativeMailFeatureEnabled && isSiteAcceleratorFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let recommendationsPage;\n  await (0, _testSetup.step)(\n    &quot;Navigate to the Recommendations module&quot;,\n    async () =&gt; {\n      recommendationsPage = await _recommendations.default.visit(page);\n      const isPageVisible =\n        await recommendationsPage.areSiteTypeQuestionsVisible();\n\n      expect(isPageVisible).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;site-type&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Check Personal and Other checkboxes&quot;,\n    async () =&gt; {\n      await recommendationsPage.checkPersonalSiteType();\n      await recommendationsPage.checkOtherSiteType();\n      expect(\n        await recommendationsPage.isPersonalSiteTypeChecked()\n      ).toBeTruthy();\n      expect(await recommendationsPage.isOtherSiteTypeChecked()).toBeTruthy();\n      expect(await recommendationsPage.isBusinessTypeUnchecked()).toBeFalsy();\n      expect(await recommendationsPage.isStoreTypeUnchecked()).toBeFalsy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Save answers and continue to the Monitor step&quot;,\n    async () =&gt; {\n      await recommendationsPage.saveSiteTypeAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isMonitorStep =\n        await recommendationsPage.isEnableMonitoringButtonVisible();\n      expect(isMonitorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;monitor&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Enable Monitoring and continue to Related Post step&quot;,\n    async () =&gt; {\n      await recommendationsPage.enableMonitoringAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isRelatedPostsStep =\n        await recommendationsPage.isEnableRelatedPostsButtonVisible();\n      expect(isRelatedPostsStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;related-posts&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Enable Related Posts and continue to Creative Mail step&quot;,\n    async () =&gt; {\n      await recommendationsPage.enableRelatedPostsAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isCreativeMailStep =\n        await recommendationsPage.isInstallCreativeMailButtonVisible();\n      expect(isCreativeMailStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;creative-mail&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Skip Creative Mail and continue to Site Accelerator&quot;,\n    async () =&gt; {\n      await recommendationsPage.skipCreativeMailAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSiteAcceleratorStep =\n        await recommendationsPage.isEnableSiteAcceleratorButtonVisible();\n      expect(isSiteAcceleratorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;site-accelerator&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Skip Site Accelerator and continue to Summary&quot;,\n    async () =&gt; {\n      await recommendationsPage.skipSiteAcceleratorAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSummaryContent =\n        await recommendationsPage.isSummaryContentVisible();\n      const isSummarySidebar =\n        await recommendationsPage.isSummarySidebarVisible();\n      expect(isSummaryContent &amp;&amp; isSummarySidebar).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;summary&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Verify Monitoring and Related Posts are enabled&quot;,\n    async () =&gt; {\n      const isMonitoringFeatureEnabled =\n        await recommendationsPage.isMonitoringFeatureEnabled();\n      const isRelatedPostsFeatureEnabled =\n        await recommendationsPage.isRelatedPostsFeatureEnabled();\n      expect(\n        isMonitoringFeatureEnabled &amp;&amp; isRelatedPostsFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Verify Creative Mail and Site Accelerator are disabled&quot;,\n    async () =&gt; {\n      const isCreativeMailFeatureEnabled =\n        await recommendationsPage.isCreativeMailFeatureEnabled();\n      const isSiteAcceleratorFeatureEnabled =\n        await recommendationsPage.isSiteAcceleratorFeatureEnabled();\n      expect(\n        isCreativeMailFeatureEnabled &amp;&amp; isSiteAcceleratorFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "recommendations.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 71,
        "unknown" : 0,
        "total" : 71
      },
      "items" : [ {
        "uid" : "fc2362cc47b6cf11",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/fc2362cc47b6cf11",
        "status" : "passed",
        "time" : {
          "start" : 1626169438481,
          "stop" : 1626169454389,
          "duration" : 15908
        }
      }, {
        "uid" : "f189d18cee174ad0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/f189d18cee174ad0",
        "status" : "passed",
        "time" : {
          "start" : 1626134763900,
          "stop" : 1626134776990,
          "duration" : 13090
        }
      }, {
        "uid" : "46f63382d482f6f9",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/46f63382d482f6f9",
        "status" : "passed",
        "time" : {
          "start" : 1626127676433,
          "stop" : 1626127689118,
          "duration" : 12685
        }
      }, {
        "uid" : "900d9401cef5ed4a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/900d9401cef5ed4a",
        "status" : "passed",
        "time" : {
          "start" : 1626123845304,
          "stop" : 1626123861150,
          "duration" : 15846
        }
      }, {
        "uid" : "12d13fcb62ba96e6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/12d13fcb62ba96e6",
        "status" : "passed",
        "time" : {
          "start" : 1626117918105,
          "stop" : 1626117930680,
          "duration" : 12575
        }
      }, {
        "uid" : "6262da11c80adbf1",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/6262da11c80adbf1",
        "status" : "passed",
        "time" : {
          "start" : 1626108991175,
          "stop" : 1626109006817,
          "duration" : 15642
        }
      }, {
        "uid" : "97cfd928debe51f3",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/97cfd928debe51f3",
        "status" : "passed",
        "time" : {
          "start" : 1626102893266,
          "stop" : 1626102909255,
          "duration" : 15989
        }
      }, {
        "uid" : "199c6c1d57848825",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/199c6c1d57848825",
        "status" : "passed",
        "time" : {
          "start" : 1626091570200,
          "stop" : 1626091583058,
          "duration" : 12858
        }
      }, {
        "uid" : "ecd3cca2b4fe40fd",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/ecd3cca2b4fe40fd",
        "status" : "passed",
        "time" : {
          "start" : 1626076318022,
          "stop" : 1626076333360,
          "duration" : 15338
        }
      }, {
        "uid" : "d586ff1843288f34",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/d586ff1843288f34",
        "status" : "passed",
        "time" : {
          "start" : 1626067754013,
          "stop" : 1626067767486,
          "duration" : 13473
        }
      }, {
        "uid" : "820445c7e45ec52f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/820445c7e45ec52f",
        "status" : "passed",
        "time" : {
          "start" : 1626048393949,
          "stop" : 1626048408686,
          "duration" : 14737
        }
      }, {
        "uid" : "21402c66335e9261",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/21402c66335e9261",
        "status" : "passed",
        "time" : {
          "start" : 1626005207408,
          "stop" : 1626005222561,
          "duration" : 15153
        }
      }, {
        "uid" : "13d50fbab3b1d61c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/13d50fbab3b1d61c",
        "status" : "passed",
        "time" : {
          "start" : 1625962021315,
          "stop" : 1625962035820,
          "duration" : 14505
        }
      }, {
        "uid" : "f5b2e9a9221b2995",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/f5b2e9a9221b2995",
        "status" : "passed",
        "time" : {
          "start" : 1625918815637,
          "stop" : 1625918830634,
          "duration" : 14997
        }
      }, {
        "uid" : "683fdc412ef7c2f8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/683fdc412ef7c2f8",
        "status" : "passed",
        "time" : {
          "start" : 1625861331764,
          "stop" : 1625861345230,
          "duration" : 13466
        }
      }, {
        "uid" : "9edd2c3aa2695269",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/9edd2c3aa2695269",
        "status" : "passed",
        "time" : {
          "start" : 1625858070007,
          "stop" : 1625858087264,
          "duration" : 17257
        }
      }, {
        "uid" : "b31fa71e097d260e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/b31fa71e097d260e",
        "status" : "passed",
        "time" : {
          "start" : 1625853037653,
          "stop" : 1625853049697,
          "duration" : 12044
        }
      }, {
        "uid" : "c7c326200518b202",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/c7c326200518b202",
        "status" : "passed",
        "time" : {
          "start" : 1625837990196,
          "stop" : 1625838005644,
          "duration" : 15448
        }
      }, {
        "uid" : "ad0cbbd141c34dca",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/ad0cbbd141c34dca",
        "status" : "passed",
        "time" : {
          "start" : 1625837358631,
          "stop" : 1625837371648,
          "duration" : 13017
        }
      }, {
        "uid" : "e8a70a7485bdc980",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/e8a70a7485bdc980",
        "status" : "passed",
        "time" : {
          "start" : 1625832461829,
          "stop" : 1625832477887,
          "duration" : 16058
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "39560a1bbd3a5d49.json",
  "parameterValues" : [ ]
}