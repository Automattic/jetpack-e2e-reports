{
  "uid" : "ba498ec1c6320075",
  "name" : "Can perform search with default settings",
  "fullName" : "Can perform search with default settings",
  "historyId" : "8a48effa07b2a0dc8118fcc35772e118",
  "time" : {
    "start" : 1627733186435,
    "stop" : 1627733189011,
    "duration" : 2576
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _testSetup.step)(\n    \"Can open the overlay by entering a query\",\n    async () => {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can show search controls in the overlay\",\n    async () => {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can show search results in the overlay\",\n    async () => {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can sort results by relevance by default\",\n    async () => {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        \"<mark>Test1</mark> Record 1\"\n      );\n    }\n  );\n  await (0, _testSetup.step)(\"Can edit query in search form\", async () => {\n    await homepage.enterQueryToOverlay(\"test2\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 1\"\n    );\n  });\n  await (0, _testSetup.step)(\"Can change sort order\", async () => {\n    await homepage.chooseSortingLink(\"newest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"newest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n    await homepage.chooseSortingLink(\"oldest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"oldest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n  });\n  await (0, _testSetup.step)(\"Can apply filters\", async () => {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n  });\n  await (0, _testSetup.step)(\n    \"Can close overlay by clicking the cross\",\n    async () => {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  await (0, _testSetup.step)(\n    &quot;Can open the overlay by entering a query&quot;,\n    async () =&gt; {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can show search controls in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can show search results in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can sort results by relevance by default&quot;,\n    async () =&gt; {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        &quot;&lt;mark&gt;Test1&lt;/mark&gt; Record 1&quot;\n      );\n    }\n  );\n  await (0, _testSetup.step)(&quot;Can edit query in search form&quot;, async () =&gt; {\n    await homepage.enterQueryToOverlay(&quot;test2&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 1&quot;\n    );\n  });\n  await (0, _testSetup.step)(&quot;Can change sort order&quot;, async () =&gt; {\n    await homepage.chooseSortingLink(&quot;newest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;newest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n    await homepage.chooseSortingLink(&quot;oldest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;oldest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n  });\n  await (0, _testSetup.step)(&quot;Can apply filters&quot;, async () =&gt; {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n  });\n  await (0, _testSetup.step)(\n    &quot;Can close overlay by clicking the cross&quot;,\n    async () =&gt; {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "search.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 58,
        "skipped" : 0,
        "passed" : 143,
        "unknown" : 0,
        "total" : 201
      },
      "items" : [ {
        "uid" : "3f6f234adf599a3b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/3f6f234adf599a3b",
        "status" : "passed",
        "time" : {
          "start" : 1627717090342,
          "stop" : 1627717092987,
          "duration" : 2645
        }
      }, {
        "uid" : "742a63a53c84053b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/742a63a53c84053b",
        "status" : "passed",
        "time" : {
          "start" : 1627689988587,
          "stop" : 1627689991477,
          "duration" : 2890
        }
      }, {
        "uid" : "1dbed5a4553e50a3",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/1dbed5a4553e50a3",
        "status" : "passed",
        "time" : {
          "start" : 1627687359188,
          "stop" : 1627687362201,
          "duration" : 3013
        }
      }, {
        "uid" : "3314720e7d9cde6c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/3314720e7d9cde6c",
        "status" : "passed",
        "time" : {
          "start" : 1627680682985,
          "stop" : 1627680685693,
          "duration" : 2708
        }
      }, {
        "uid" : "7f94aa56e1431d69",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/7f94aa56e1431d69",
        "status" : "passed",
        "time" : {
          "start" : 1627646818950,
          "stop" : 1627646821819,
          "duration" : 2869
        }
      }, {
        "uid" : "c26ce40588a29923",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/c26ce40588a29923",
        "status" : "passed",
        "time" : {
          "start" : 1627618770794,
          "stop" : 1627618773127,
          "duration" : 2333
        }
      }, {
        "uid" : "ea071b4cf401bd49",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/ea071b4cf401bd49",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1627603551588,
          "stop" : 1627603586475,
          "duration" : 34887
        }
      }, {
        "uid" : "a1bf231db390ba0e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/a1bf231db390ba0e",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1627592773289,
          "stop" : 1627592808250,
          "duration" : 34961
        }
      }, {
        "uid" : "42bad71e67c2ecbb",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/42bad71e67c2ecbb",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1627589191824,
          "stop" : 1627589225795,
          "duration" : 33971
        }
      }, {
        "uid" : "360acf89fad6e229",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/360acf89fad6e229",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1627588287812,
          "stop" : 1627588323656,
          "duration" : 35844
        }
      }, {
        "uid" : "792a0037826b2816",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/792a0037826b2816",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1627586922970,
          "stop" : 1627586957945,
          "duration" : 34975
        }
      }, {
        "uid" : "a63f4179c749f9f7",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/a63f4179c749f9f7",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1627581975194,
          "stop" : 1627582009509,
          "duration" : 34315
        }
      }, {
        "uid" : "fb2f01d49b7f84a0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/fb2f01d49b7f84a0",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1627576972918,
          "stop" : 1627577008293,
          "duration" : 35375
        }
      }, {
        "uid" : "96df610e4347b1c5",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/96df610e4347b1c5",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1627568761371,
          "stop" : 1627568796551,
          "duration" : 35180
        }
      }, {
        "uid" : "cca3f7925f2414a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/cca3f7925f2414a",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1627560385749,
          "stop" : 1627560420794,
          "duration" : 35045
        }
      }, {
        "uid" : "2540e050fff0ab86",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/2540e050fff0ab86",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1627523504296,
          "stop" : 1627523540486,
          "duration" : 36190
        }
      }, {
        "uid" : "6082323b3d2872d2",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/6082323b3d2872d2",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1627517149881,
          "stop" : 1627517184282,
          "duration" : 34401
        }
      }, {
        "uid" : "2e38ecb8125d2553",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/2e38ecb8125d2553",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1627512174655,
          "stop" : 1627512209059,
          "duration" : 34404
        }
      }, {
        "uid" : "d9e3476bd57d176",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/d9e3476bd57d176",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1627473974148,
          "stop" : 1627474009388,
          "duration" : 35240
        }
      }, {
        "uid" : "554e1dcc4479915a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/554e1dcc4479915a",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1627430794390,
          "stop" : 1627430829895,
          "duration" : 35505
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "ba498ec1c6320075.json",
  "parameterValues" : [ ]
}