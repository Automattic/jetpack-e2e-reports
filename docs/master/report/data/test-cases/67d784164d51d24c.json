{
  "uid" : "67d784164d51d24c",
  "name" : "MailChimp Block",
  "fullName" : "MailChimp Block",
  "historyId" : "1e0e5667b8c419e68fc1ae6a0d73dd61",
  "time" : {
    "start" : 1623182434158,
    "stop" : 1623182451114,
    "duration" : 16956
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a MailChimp block\",\n    async () => {\n      blockId = await blockEditor.insertBlock(\n        _mailchimp.default.name(),\n        _mailchimp.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\"Can connect to a MailChimp\", async () => {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that MailChimp block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a MailChimp block&quot;,\n    async () =&gt; {\n      blockId = await blockEditor.insertBlock(\n        _mailchimp.default.name(),\n        _mailchimp.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(&quot;Can connect to a MailChimp&quot;, async () =&gt; {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that MailChimp block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "718fb3cb0495bbe",
      "status" : "passed",
      "time" : {
        "start" : 1623168539346,
        "stop" : 1623168553034,
        "duration" : 13688
      }
    }, {
      "uid" : "777bbd9ec20aa2e1",
      "status" : "passed",
      "time" : {
        "start" : 1623163380731,
        "stop" : 1623163404750,
        "duration" : 24019
      }
    }, {
      "uid" : "84a010cc07b61567",
      "status" : "passed",
      "time" : {
        "start" : 1623160640630,
        "stop" : 1623160655932,
        "duration" : 15302
      }
    }, {
      "uid" : "a59af5e7277d19ac",
      "status" : "passed",
      "time" : {
        "start" : 1623155028899,
        "stop" : 1623155042631,
        "duration" : 13732
      }
    }, {
      "uid" : "764ae48d96afcc13",
      "status" : "passed",
      "time" : {
        "start" : 1623154137863,
        "stop" : 1623154156016,
        "duration" : 18153
      }
    }, {
      "uid" : "9d271a5a6e888f1d",
      "status" : "passed",
      "time" : {
        "start" : 1623154018566,
        "stop" : 1623154037584,
        "duration" : 19018
      }
    }, {
      "uid" : "dad0a80c193891e7",
      "status" : "passed",
      "time" : {
        "start" : 1623111453518,
        "stop" : 1623111467863,
        "duration" : 14345
      }
    }, {
      "uid" : "f23c02d328494265",
      "status" : "passed",
      "time" : {
        "start" : 1623111438105,
        "stop" : 1623111456757,
        "duration" : 18652
      }
    }, {
      "uid" : "ddfe769e4b267f03",
      "status" : "passed",
      "time" : {
        "start" : 1623105370504,
        "stop" : 1623105386838,
        "duration" : 16334
      }
    }, {
      "uid" : "1c493d437d856f00",
      "status" : "broken",
      "statusDetails" : "Error",
      "time" : {
        "start" : 1623103066385,
        "stop" : 1623103193075,
        "duration" : 126690
      }
    }, {
      "uid" : "ba2a80efd98f578f",
      "status" : "passed",
      "time" : {
        "start" : 1623097718093,
        "stop" : 1623097735528,
        "duration" : 17435
      }
    }, {
      "uid" : "9e9b7a950db4985a",
      "status" : "passed",
      "time" : {
        "start" : 1623095595241,
        "stop" : 1623095614330,
        "duration" : 19089
      }
    }, {
      "uid" : "affb6149ac18c02b",
      "status" : "passed",
      "time" : {
        "start" : 1623068412060,
        "stop" : 1623068427065,
        "duration" : 15005
      }
    }, {
      "uid" : "33b5a72d878533ce",
      "status" : "passed",
      "time" : {
        "start" : 1623068357315,
        "stop" : 1623068374885,
        "duration" : 17570
      }
    }, {
      "uid" : "fa3cbe4eb4232bfc",
      "status" : "passed",
      "time" : {
        "start" : 1623067266408,
        "stop" : 1623067287255,
        "duration" : 20847
      }
    } ],
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "67d784164d51d24c.json",
  "parameterValues" : [ ]
}