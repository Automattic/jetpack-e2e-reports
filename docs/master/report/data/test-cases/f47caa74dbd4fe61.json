{
  "uid" : "f47caa74dbd4fe61",
  "name" : "Can perform search with default settings",
  "fullName" : "Can perform search with default settings",
  "historyId" : "8a48effa07b2a0dc8118fcc35772e118",
  "time" : {
    "start" : 1628597799062,
    "stop" : 1628597802632,
    "duration" : 3570
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _reporter.testStep)(\n    \"Can open the overlay by entering a query\",\n    async () => {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search controls in the overlay\",\n    async () => {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search results in the overlay\",\n    async () => {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can sort results by relevance by default\",\n    async () => {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        \"<mark>Test1</mark> Record 1\"\n      );\n    }\n  );\n  await (0, _reporter.testStep)(\"Can edit query in search form\", async () => {\n    await homepage.enterQueryToOverlay(\"test2\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 1\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can change sort order\", async () => {\n    await homepage.chooseSortingLink(\"newest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"newest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n    await homepage.chooseSortingLink(\"oldest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"oldest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can apply filters\", async () => {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n  });\n  await (0, _reporter.testStep)(\n    \"Can close overlay by clicking the cross\",\n    async () => {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  await (0, _reporter.testStep)(\n    &quot;Can open the overlay by entering a query&quot;,\n    async () =&gt; {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can show search controls in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can show search results in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can sort results by relevance by default&quot;,\n    async () =&gt; {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        &quot;&lt;mark&gt;Test1&lt;/mark&gt; Record 1&quot;\n      );\n    }\n  );\n  await (0, _reporter.testStep)(&quot;Can edit query in search form&quot;, async () =&gt; {\n    await homepage.enterQueryToOverlay(&quot;test2&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 1&quot;\n    );\n  });\n  await (0, _reporter.testStep)(&quot;Can change sort order&quot;, async () =&gt; {\n    await homepage.chooseSortingLink(&quot;newest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;newest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n    await homepage.chooseSortingLink(&quot;oldest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;oldest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n  });\n  await (0, _reporter.testStep)(&quot;Can apply filters&quot;, async () =&gt; {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n  });\n  await (0, _reporter.testStep)(\n    &quot;Can close overlay by clicking the cross&quot;,\n    async () =&gt; {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _reporter.testStep)(\n    \"Can open the overlay by entering a query\",\n    async () => {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search controls in the overlay\",\n    async () => {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search results in the overlay\",\n    async () => {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can sort results by relevance by default\",\n    async () => {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        \"<mark>Test1</mark> Record 1\"\n      );\n    }\n  );\n  await (0, _reporter.testStep)(\"Can edit query in search form\", async () => {\n    await homepage.enterQueryToOverlay(\"test2\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 1\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can change sort order\", async () => {\n    await homepage.chooseSortingLink(\"newest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"newest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n    await homepage.chooseSortingLink(\"oldest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"oldest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can apply filters\", async () => {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n  });\n  await (0, _reporter.testStep)(\n    \"Can close overlay by clicking the cross\",\n    async () => {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Can open the overlay by entering a query",
      "time" : {
        "start" : 1628597799147,
        "stop" : 1628597799830,
        "duration" : 683
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can show search controls in the overlay",
      "time" : {
        "start" : 1628597799845,
        "stop" : 1628597800027,
        "duration" : 182
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can show search results in the overlay",
      "time" : {
        "start" : 1628597800032,
        "stop" : 1628597800091,
        "duration" : 59
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can sort results by relevance by default",
      "time" : {
        "start" : 1628597800093,
        "stop" : 1628597800121,
        "duration" : 28
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can edit query in search form",
      "time" : {
        "start" : 1628597800123,
        "stop" : 1628597800472,
        "duration" : 349
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can change sort order",
      "time" : {
        "start" : 1628597800475,
        "stop" : 1628597801464,
        "duration" : 989
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can apply filters",
      "time" : {
        "start" : 1628597801466,
        "stop" : 1628597802380,
        "duration" : 914
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can close overlay by clicking the cross",
      "time" : {
        "start" : 1628597802381,
        "stop" : 1628597802603,
        "duration" : 222
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "search.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 59,
        "skipped" : 0,
        "passed" : 212,
        "unknown" : 0,
        "total" : 271
      },
      "items" : [ {
        "uid" : "988d1ec1899e399d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/988d1ec1899e399d",
        "status" : "passed",
        "time" : {
          "start" : 1628587863079,
          "stop" : 1628587866676,
          "duration" : 3597
        }
      }, {
        "uid" : "6272de19498a8f0d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/6272de19498a8f0d",
        "status" : "passed",
        "time" : {
          "start" : 1628585857028,
          "stop" : 1628585860347,
          "duration" : 3319
        }
      }, {
        "uid" : "c5b41e337b6af9eb",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/c5b41e337b6af9eb",
        "status" : "passed",
        "time" : {
          "start" : 1628580069381,
          "stop" : 1628580072988,
          "duration" : 3607
        }
      }, {
        "uid" : "ed3b3c31657daac7",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/ed3b3c31657daac7",
        "status" : "passed",
        "time" : {
          "start" : 1628577615717,
          "stop" : 1628577618533,
          "duration" : 2816
        }
      }, {
        "uid" : "f8c93427be8177be",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/f8c93427be8177be",
        "status" : "passed",
        "time" : {
          "start" : 1628575581983,
          "stop" : 1628575585369,
          "duration" : 3386
        }
      }, {
        "uid" : "e7614d96a07233d8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/e7614d96a07233d8",
        "status" : "passed",
        "time" : {
          "start" : 1628567362640,
          "stop" : 1628567365394,
          "duration" : 2754
        }
      }, {
        "uid" : "e12f92184b827e29",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/e12f92184b827e29",
        "status" : "passed",
        "time" : {
          "start" : 1628562963340,
          "stop" : 1628562966378,
          "duration" : 3038
        }
      }, {
        "uid" : "df7e236597aa83e5",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/df7e236597aa83e5",
        "status" : "passed",
        "time" : {
          "start" : 1628553936645,
          "stop" : 1628553939746,
          "duration" : 3101
        }
      }, {
        "uid" : "b5981f2d624fc081",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/b5981f2d624fc081",
        "status" : "passed",
        "time" : {
          "start" : 1628548003425,
          "stop" : 1628548006208,
          "duration" : 2783
        }
      }, {
        "uid" : "2c6443168175fa1c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/2c6443168175fa1c",
        "status" : "passed",
        "time" : {
          "start" : 1628540640098,
          "stop" : 1628540642909,
          "duration" : 2811
        }
      }, {
        "uid" : "cf7a7e75fb42d95e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/cf7a7e75fb42d95e",
        "status" : "passed",
        "time" : {
          "start" : 1628533270102,
          "stop" : 1628533273797,
          "duration" : 3695
        }
      }, {
        "uid" : "a9af9850eb806660",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/a9af9850eb806660",
        "status" : "passed",
        "time" : {
          "start" : 1628520542513,
          "stop" : 1628520546231,
          "duration" : 3718
        }
      }, {
        "uid" : "bdc07d9678cdfafe",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/bdc07d9678cdfafe",
        "status" : "passed",
        "time" : {
          "start" : 1628510777788,
          "stop" : 1628510781149,
          "duration" : 3361
        }
      }, {
        "uid" : "fb4033fd538a7c7f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/fb4033fd538a7c7f",
        "status" : "passed",
        "time" : {
          "start" : 1628506387286,
          "stop" : 1628506390655,
          "duration" : 3369
        }
      }, {
        "uid" : "dace397a570a8910",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/dace397a570a8910",
        "status" : "passed",
        "time" : {
          "start" : 1628497587376,
          "stop" : 1628497589812,
          "duration" : 2436
        }
      }, {
        "uid" : "f567ff81c51755d6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/f567ff81c51755d6",
        "status" : "passed",
        "time" : {
          "start" : 1628495198223,
          "stop" : 1628495201267,
          "duration" : 3044
        }
      }, {
        "uid" : "b7708d0233ae5d84",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/b7708d0233ae5d84",
        "status" : "passed",
        "time" : {
          "start" : 1628467634336,
          "stop" : 1628467637162,
          "duration" : 2826
        }
      }, {
        "uid" : "401cc52a9ee2e4b6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/401cc52a9ee2e4b6",
        "status" : "passed",
        "time" : {
          "start" : 1628460711570,
          "stop" : 1628460713934,
          "duration" : 2364
        }
      }, {
        "uid" : "b64465ab442315bf",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/b64465ab442315bf",
        "status" : "passed",
        "time" : {
          "start" : 1628424386016,
          "stop" : 1628424388634,
          "duration" : 2618
        }
      }, {
        "uid" : "a9a5f0a61659c415",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/a9a5f0a61659c415",
        "status" : "passed",
        "time" : {
          "start" : 1628381166813,
          "stop" : 1628381169242,
          "duration" : 2429
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "f47caa74dbd4fe61.json",
  "parameterValues" : [ ]
}