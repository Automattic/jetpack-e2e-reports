{
  "uid" : "fc5ffe38fbcff871",
  "name" : "Can perform search with default settings",
  "fullName" : "Can perform search with default settings",
  "historyId" : "8a48effa07b2a0dc8118fcc35772e118",
  "time" : {
    "start" : 1626610048981,
    "stop" : 1626610051890,
    "duration" : 2909
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _testSetup.step)(\n    \"Can open the overlay by entering a query\",\n    async () => {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can show search controls in the overlay\",\n    async () => {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can show search results in the overlay\",\n    async () => {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can sort results by relevance by default\",\n    async () => {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        \"<mark>Test1</mark> Record 1\"\n      );\n    }\n  );\n  await (0, _testSetup.step)(\"Can edit query in search form\", async () => {\n    await homepage.enterQueryToOverlay(\"test2\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 1\"\n    );\n  });\n  await (0, _testSetup.step)(\"Can change sort order\", async () => {\n    await homepage.chooseSortingLink(\"newest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"newest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n    await homepage.chooseSortingLink(\"oldest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"oldest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n  });\n  await (0, _testSetup.step)(\"Can apply filters\", async () => {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n  });\n  await (0, _testSetup.step)(\n    \"Can close overlay by clicking the cross\",\n    async () => {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  await (0, _testSetup.step)(\n    &quot;Can open the overlay by entering a query&quot;,\n    async () =&gt; {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can show search controls in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can show search results in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can sort results by relevance by default&quot;,\n    async () =&gt; {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        &quot;&lt;mark&gt;Test1&lt;/mark&gt; Record 1&quot;\n      );\n    }\n  );\n  await (0, _testSetup.step)(&quot;Can edit query in search form&quot;, async () =&gt; {\n    await homepage.enterQueryToOverlay(&quot;test2&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 1&quot;\n    );\n  });\n  await (0, _testSetup.step)(&quot;Can change sort order&quot;, async () =&gt; {\n    await homepage.chooseSortingLink(&quot;newest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;newest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n    await homepage.chooseSortingLink(&quot;oldest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;oldest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n  });\n  await (0, _testSetup.step)(&quot;Can apply filters&quot;, async () =&gt; {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n  });\n  await (0, _testSetup.step)(\n    &quot;Can close overlay by clicking the cross&quot;,\n    async () =&gt; {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "search.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 119,
        "unknown" : 0,
        "total" : 121
      },
      "items" : [ {
        "uid" : "26a619ef9de3d41c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/26a619ef9de3d41c",
        "status" : "passed",
        "time" : {
          "start" : 1626566836560,
          "stop" : 1626566839504,
          "duration" : 2944
        }
      }, {
        "uid" : "3e307155e5ccbcbc",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/3e307155e5ccbcbc",
        "status" : "passed",
        "time" : {
          "start" : 1626523586970,
          "stop" : 1626523589609,
          "duration" : 2639
        }
      }, {
        "uid" : "dc82205833a0a64",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/dc82205833a0a64",
        "status" : "passed",
        "time" : {
          "start" : 1626480434593,
          "stop" : 1626480437396,
          "duration" : 2803
        }
      }, {
        "uid" : "36f2f62fd512bebd",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/36f2f62fd512bebd",
        "status" : "passed",
        "time" : {
          "start" : 1626471973581,
          "stop" : 1626471976204,
          "duration" : 2623
        }
      }, {
        "uid" : "1ed7b91aaf5c4b26",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/1ed7b91aaf5c4b26",
        "status" : "passed",
        "time" : {
          "start" : 1626462198836,
          "stop" : 1626462201639,
          "duration" : 2803
        }
      }, {
        "uid" : "fe3287d2d811d101",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/fe3287d2d811d101",
        "status" : "passed",
        "time" : {
          "start" : 1626458418215,
          "stop" : 1626458420793,
          "duration" : 2578
        }
      }, {
        "uid" : "e6ac1ff91030f85a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/e6ac1ff91030f85a",
        "status" : "passed",
        "time" : {
          "start" : 1626456009897,
          "stop" : 1626456012755,
          "duration" : 2858
        }
      }, {
        "uid" : "f5714d5963e38435",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/f5714d5963e38435",
        "status" : "passed",
        "time" : {
          "start" : 1626447176662,
          "stop" : 1626447179572,
          "duration" : 2910
        }
      }, {
        "uid" : "d7f9ab3e874e2d77",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/d7f9ab3e874e2d77",
        "status" : "passed",
        "time" : {
          "start" : 1626437244885,
          "stop" : 1626437248094,
          "duration" : 3209
        }
      }, {
        "uid" : "10b6cb5a165875a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/10b6cb5a165875a",
        "status" : "passed",
        "time" : {
          "start" : 1626433363966,
          "stop" : 1626433366345,
          "duration" : 2379
        }
      }, {
        "uid" : "895fd0b249c4a0c3",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/895fd0b249c4a0c3",
        "status" : "passed",
        "time" : {
          "start" : 1626425708845,
          "stop" : 1626425711257,
          "duration" : 2412
        }
      }, {
        "uid" : "82eb01de33aa5769",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/82eb01de33aa5769",
        "status" : "passed",
        "time" : {
          "start" : 1626421473437,
          "stop" : 1626421476112,
          "duration" : 2675
        }
      }, {
        "uid" : "e724595d0f3cbe84",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/e724595d0f3cbe84",
        "status" : "passed",
        "time" : {
          "start" : 1626393980851,
          "stop" : 1626393983288,
          "duration" : 2437
        }
      }, {
        "uid" : "c6f5e6fa80e832e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/c6f5e6fa80e832e",
        "status" : "passed",
        "time" : {
          "start" : 1626377310275,
          "stop" : 1626377312705,
          "duration" : 2430
        }
      }, {
        "uid" : "9355521414b6c753",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/9355521414b6c753",
        "status" : "passed",
        "time" : {
          "start" : 1626376248989,
          "stop" : 1626376251418,
          "duration" : 2429
        }
      }, {
        "uid" : "af38fe903cf118f7",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/af38fe903cf118f7",
        "status" : "passed",
        "time" : {
          "start" : 1626365544049,
          "stop" : 1626365546408,
          "duration" : 2359
        }
      }, {
        "uid" : "58a20061ba2749c4",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/58a20061ba2749c4",
        "status" : "passed",
        "time" : {
          "start" : 1626363987865,
          "stop" : 1626363990280,
          "duration" : 2415
        }
      }, {
        "uid" : "94ac22ba4c94b0ac",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/94ac22ba4c94b0ac",
        "status" : "passed",
        "time" : {
          "start" : 1626357803025,
          "stop" : 1626357806059,
          "duration" : 3034
        }
      }, {
        "uid" : "7bbd07594daf8692",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/7bbd07594daf8692",
        "status" : "passed",
        "time" : {
          "start" : 1626355278716,
          "stop" : 1626355281278,
          "duration" : 2562
        }
      }, {
        "uid" : "97ce8561ca01a8c4",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/97ce8561ca01a8c4",
        "status" : "passed",
        "time" : {
          "start" : 1626350829978,
          "stop" : 1626350832829,
          "duration" : 2851
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "fc5ffe38fbcff871.json",
  "parameterValues" : [ ]
}