{
  "uid" : "5208ef2f96f1633",
  "name" : "Can perform search with default settings",
  "fullName" : "Can perform search with default settings",
  "historyId" : "8a48effa07b2a0dc8118fcc35772e118",
  "time" : {
    "start" : 1631720035185,
    "stop" : 1631720037728,
    "duration" : 2543
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _reporter.testStep)(\n    \"Can open the overlay by entering a query\",\n    async () => {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search controls in the overlay\",\n    async () => {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search results in the overlay\",\n    async () => {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can sort results by relevance by default\",\n    async () => {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        \"<mark>Test1</mark> Record 1\"\n      );\n    }\n  );\n  await (0, _reporter.testStep)(\"Can edit query in search form\", async () => {\n    await homepage.enterQueryToOverlay(\"test2\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 1\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can change sort order\", async () => {\n    await homepage.chooseSortingLink(\"newest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"newest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n    await homepage.chooseSortingLink(\"oldest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"oldest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can apply filters\", async () => {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n  });\n  await (0, _reporter.testStep)(\n    \"Can close overlay by clicking the cross\",\n    async () => {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  await (0, _reporter.testStep)(\n    &quot;Can open the overlay by entering a query&quot;,\n    async () =&gt; {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can show search controls in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can show search results in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can sort results by relevance by default&quot;,\n    async () =&gt; {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        &quot;&lt;mark&gt;Test1&lt;/mark&gt; Record 1&quot;\n      );\n    }\n  );\n  await (0, _reporter.testStep)(&quot;Can edit query in search form&quot;, async () =&gt; {\n    await homepage.enterQueryToOverlay(&quot;test2&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 1&quot;\n    );\n  });\n  await (0, _reporter.testStep)(&quot;Can change sort order&quot;, async () =&gt; {\n    await homepage.chooseSortingLink(&quot;newest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;newest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n    await homepage.chooseSortingLink(&quot;oldest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;oldest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n  });\n  await (0, _reporter.testStep)(&quot;Can apply filters&quot;, async () =&gt; {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n  });\n  await (0, _reporter.testStep)(\n    &quot;Can close overlay by clicking the cross&quot;,\n    async () =&gt; {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _reporter.testStep)(\n    \"Can open the overlay by entering a query\",\n    async () => {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search controls in the overlay\",\n    async () => {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search results in the overlay\",\n    async () => {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can sort results by relevance by default\",\n    async () => {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        \"<mark>Test1</mark> Record 1\"\n      );\n    }\n  );\n  await (0, _reporter.testStep)(\"Can edit query in search form\", async () => {\n    await homepage.enterQueryToOverlay(\"test2\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 1\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can change sort order\", async () => {\n    await homepage.chooseSortingLink(\"newest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"newest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n    await homepage.chooseSortingLink(\"oldest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"oldest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can apply filters\", async () => {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n  });\n  await (0, _reporter.testStep)(\n    \"Can close overlay by clicking the cross\",\n    async () => {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Can open the overlay by entering a query",
      "time" : {
        "start" : 1631720035257,
        "stop" : 1631720035882,
        "duration" : 625
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can show search controls in the overlay",
      "time" : {
        "start" : 1631720035883,
        "stop" : 1631720035962,
        "duration" : 79
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can show search results in the overlay",
      "time" : {
        "start" : 1631720035963,
        "stop" : 1631720035977,
        "duration" : 14
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can sort results by relevance by default",
      "time" : {
        "start" : 1631720035978,
        "stop" : 1631720035990,
        "duration" : 12
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can edit query in search form",
      "time" : {
        "start" : 1631720035991,
        "stop" : 1631720036321,
        "duration" : 330
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can change sort order",
      "time" : {
        "start" : 1631720036322,
        "stop" : 1631720037019,
        "duration" : 697
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can apply filters",
      "time" : {
        "start" : 1631720037020,
        "stop" : 1631720037625,
        "duration" : 605
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can close overlay by clicking the cross",
      "time" : {
        "start" : 1631720037626,
        "stop" : 1631720037710,
        "duration" : 84
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "search.test.js"
  }, {
    "name" : "tag",
    "value" : "Jetpack version: [object Promise]"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 59,
        "skipped" : 0,
        "passed" : 503,
        "unknown" : 0,
        "total" : 562
      },
      "items" : [ {
        "uid" : "3b61ba5565545637",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/3b61ba5565545637",
        "status" : "passed",
        "time" : {
          "start" : 1631715283419,
          "stop" : 1631715286694,
          "duration" : 3275
        }
      }, {
        "uid" : "93e9f0248af10355",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/93e9f0248af10355",
        "status" : "passed",
        "time" : {
          "start" : 1631711199920,
          "stop" : 1631711203670,
          "duration" : 3750
        }
      }, {
        "uid" : "99bdfa68b411f0e8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/99bdfa68b411f0e8",
        "status" : "passed",
        "time" : {
          "start" : 1631707596666,
          "stop" : 1631707599904,
          "duration" : 3238
        }
      }, {
        "uid" : "696a314af7cece91",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/696a314af7cece91",
        "status" : "passed",
        "time" : {
          "start" : 1631703805743,
          "stop" : 1631703808263,
          "duration" : 2520
        }
      }, {
        "uid" : "83c624b9d7a1fe29",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/83c624b9d7a1fe29",
        "status" : "passed",
        "time" : {
          "start" : 1631664382503,
          "stop" : 1631664385554,
          "duration" : 3051
        }
      }, {
        "uid" : "e3a17957b412232f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/e3a17957b412232f",
        "status" : "passed",
        "time" : {
          "start" : 1631649377162,
          "stop" : 1631649380527,
          "duration" : 3365
        }
      }, {
        "uid" : "f56f9cc6e4a84430",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/f56f9cc6e4a84430",
        "status" : "passed",
        "time" : {
          "start" : 1631635883168,
          "stop" : 1631635885872,
          "duration" : 2704
        }
      }, {
        "uid" : "987f377fbc00af68",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/987f377fbc00af68",
        "status" : "passed",
        "time" : {
          "start" : 1631632488736,
          "stop" : 1631632492084,
          "duration" : 3348
        }
      }, {
        "uid" : "7c5e69260b502650",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/7c5e69260b502650",
        "status" : "passed",
        "time" : {
          "start" : 1631622012100,
          "stop" : 1631622015630,
          "duration" : 3530
        }
      }, {
        "uid" : "ad01eaed6b382747",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/ad01eaed6b382747",
        "status" : "passed",
        "time" : {
          "start" : 1631621150187,
          "stop" : 1631621153038,
          "duration" : 2851
        }
      }, {
        "uid" : "aae04ca74813b719",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/aae04ca74813b719",
        "status" : "passed",
        "time" : {
          "start" : 1631605937260,
          "stop" : 1631605940218,
          "duration" : 2958
        }
      }, {
        "uid" : "7e55f06cf708aae7",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/7e55f06cf708aae7",
        "status" : "passed",
        "time" : {
          "start" : 1631604145229,
          "stop" : 1631604148418,
          "duration" : 3189
        }
      }, {
        "uid" : "20a9658612a4316c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/20a9658612a4316c",
        "status" : "passed",
        "time" : {
          "start" : 1631599057217,
          "stop" : 1631599060671,
          "duration" : 3454
        }
      }, {
        "uid" : "8a6f664512609880",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/8a6f664512609880",
        "status" : "passed",
        "time" : {
          "start" : 1631586572218,
          "stop" : 1631586575442,
          "duration" : 3224
        }
      }, {
        "uid" : "44a1a6104f2de5d1",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/44a1a6104f2de5d1",
        "status" : "passed",
        "time" : {
          "start" : 1631578022251,
          "stop" : 1631578025695,
          "duration" : 3444
        }
      }, {
        "uid" : "ac247dd70bc0e22b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/ac247dd70bc0e22b",
        "status" : "passed",
        "time" : {
          "start" : 1631564312769,
          "stop" : 1631564316580,
          "duration" : 3811
        }
      }, {
        "uid" : "cc0a2cef423f3738",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/cc0a2cef423f3738",
        "status" : "passed",
        "time" : {
          "start" : 1631553509815,
          "stop" : 1631553512723,
          "duration" : 2908
        }
      }, {
        "uid" : "58784442b13f291f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/58784442b13f291f",
        "status" : "passed",
        "time" : {
          "start" : 1631550550111,
          "stop" : 1631550552727,
          "duration" : 2616
        }
      }, {
        "uid" : "bce7b825297032f3",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/bce7b825297032f3",
        "status" : "passed",
        "time" : {
          "start" : 1631548225719,
          "stop" : 1631548228344,
          "duration" : 2625
        }
      }, {
        "uid" : "e6da16e5ac2fc259",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/e6da16e5ac2fc259",
        "status" : "passed",
        "time" : {
          "start" : 1631545846859,
          "stop" : 1631545850700,
          "duration" : 3841
        }
      } ]
    },
    "tags" : [ "Jetpack version: [object Promise]" ]
  },
  "source" : "5208ef2f96f1633.json",
  "parameterValues" : [ ]
}