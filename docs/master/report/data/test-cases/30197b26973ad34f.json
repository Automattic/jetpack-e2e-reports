{
  "uid" : "30197b26973ad34f",
  "name" : "Plugin updater",
  "fullName" : "Plugin updater",
  "historyId" : "852b81330bf593f57dd55d00e7a2eb83",
  "time" : {
    "start" : 1623250483917,
    "stop" : 1623250528064,
    "duration" : 44147
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _testSetup.step)(\n    \"Can login and navigate to Plugins page\",\n    async () => {\n      await (await _sidebar.default.init(page)).selectInstalledPlugins();\n      await _plugins.default.init(page);\n    }\n  );\n  await (0, _testSetup.step)(\"Can update Jetpack\", async () => {\n    const pluginsPage = await _plugins.default.init(page);\n    const versionBefore = await pluginsPage.getJetpackVersion();\n    await pluginsPage.updateJetpack();\n    const versionAfter = await pluginsPage.getJetpackVersion();\n\n    expect(versionBefore).not.toBe(versionAfter);\n  });\n  await (0, _testSetup.step)(\"Can connect Jetpack\", async () => {\n    await (await _sidebar.default.init(page)).selectJetpack();\n    await (0, _jetpackConnect.doInPlaceConnection)();\n    const jetpackPage = await _jetpack.default.init(page);\n    expect(await jetpackPage.isConnected()).toBeTruthy();\n  });\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  await (0, _testSetup.step)(\n    &quot;Can login and navigate to Plugins page&quot;,\n    async () =&gt; {\n      await (await _sidebar.default.init(page)).selectInstalledPlugins();\n      await _plugins.default.init(page);\n    }\n  );\n  await (0, _testSetup.step)(&quot;Can update Jetpack&quot;, async () =&gt; {\n    const pluginsPage = await _plugins.default.init(page);\n    const versionBefore = await pluginsPage.getJetpackVersion();\n    await pluginsPage.updateJetpack();\n    const versionAfter = await pluginsPage.getJetpackVersion();\n\n    expect(versionBefore).not.toBe(versionAfter);\n  });\n  await (0, _testSetup.step)(&quot;Can connect Jetpack&quot;, async () =&gt; {\n    await (await _sidebar.default.init(page)).selectJetpack();\n    await (0, _jetpackConnect.doInPlaceConnection)();\n    const jetpackPage = await _jetpack.default.init(page);\n    expect(await jetpackPage.isConnected()).toBeTruthy();\n  });\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "plugin-updater.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "30197b26973ad34f.json",
  "parameterValues" : [ ]
}