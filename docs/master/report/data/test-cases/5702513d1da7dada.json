{
  "uid" : "5702513d1da7dada",
  "name" : "Can perform search with default settings",
  "fullName" : "Can perform search with default settings",
  "historyId" : "8a48effa07b2a0dc8118fcc35772e118",
  "time" : {
    "start" : 1632210526716,
    "stop" : 1632210532051,
    "duration" : 5335
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _reporter.testStep)(\n    \"Can open the overlay by entering a query\",\n    async () => {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search controls in the overlay\",\n    async () => {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search results in the overlay\",\n    async () => {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can sort results by relevance by default\",\n    async () => {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        \"<mark>Test1</mark> Record 1\"\n      );\n    }\n  );\n  await (0, _reporter.testStep)(\"Can edit query in search form\", async () => {\n    await homepage.enterQueryToOverlay(\"test2\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 1\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can change sort order\", async () => {\n    await homepage.chooseSortingLink(\"newest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"newest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n    await homepage.chooseSortingLink(\"oldest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"oldest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can apply filters\", async () => {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n  });\n  await (0, _reporter.testStep)(\n    \"Can close overlay by clicking the cross\",\n    async () => {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  await (0, _reporter.testStep)(\n    &quot;Can open the overlay by entering a query&quot;,\n    async () =&gt; {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can show search controls in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can show search results in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can sort results by relevance by default&quot;,\n    async () =&gt; {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        &quot;&lt;mark&gt;Test1&lt;/mark&gt; Record 1&quot;\n      );\n    }\n  );\n  await (0, _reporter.testStep)(&quot;Can edit query in search form&quot;, async () =&gt; {\n    await homepage.enterQueryToOverlay(&quot;test2&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 1&quot;\n    );\n  });\n  await (0, _reporter.testStep)(&quot;Can change sort order&quot;, async () =&gt; {\n    await homepage.chooseSortingLink(&quot;newest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;newest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n    await homepage.chooseSortingLink(&quot;oldest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;oldest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n  });\n  await (0, _reporter.testStep)(&quot;Can apply filters&quot;, async () =&gt; {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n  });\n  await (0, _reporter.testStep)(\n    &quot;Can close overlay by clicking the cross&quot;,\n    async () =&gt; {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _reporter.testStep)(\n    \"Can open the overlay by entering a query\",\n    async () => {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search controls in the overlay\",\n    async () => {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search results in the overlay\",\n    async () => {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can sort results by relevance by default\",\n    async () => {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        \"<mark>Test1</mark> Record 1\"\n      );\n    }\n  );\n  await (0, _reporter.testStep)(\"Can edit query in search form\", async () => {\n    await homepage.enterQueryToOverlay(\"test2\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 1\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can change sort order\", async () => {\n    await homepage.chooseSortingLink(\"newest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"newest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n    await homepage.chooseSortingLink(\"oldest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"oldest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can apply filters\", async () => {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n  });\n  await (0, _reporter.testStep)(\n    \"Can close overlay by clicking the cross\",\n    async () => {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Can open the overlay by entering a query",
      "time" : {
        "start" : 1632210526805,
        "stop" : 1632210527527,
        "duration" : 722
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can show search controls in the overlay",
      "time" : {
        "start" : 1632210527529,
        "stop" : 1632210527699,
        "duration" : 170
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can show search results in the overlay",
      "time" : {
        "start" : 1632210527701,
        "stop" : 1632210527721,
        "duration" : 20
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can sort results by relevance by default",
      "time" : {
        "start" : 1632210527722,
        "stop" : 1632210527738,
        "duration" : 16
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can edit query in search form",
      "time" : {
        "start" : 1632210527740,
        "stop" : 1632210528123,
        "duration" : 383
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can change sort order",
      "time" : {
        "start" : 1632210528124,
        "stop" : 1632210529112,
        "duration" : 988
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can apply filters",
      "time" : {
        "start" : 1632210529113,
        "stop" : 1632210530016,
        "duration" : 903
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can close overlay by clicking the cross",
      "time" : {
        "start" : 1632210530018,
        "stop" : 1632210530188,
        "duration" : 170
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "search.test.js"
  }, {
    "name" : "tag",
    "value" : "Jetpack version: undefined"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 59,
        "skipped" : 0,
        "passed" : 533,
        "unknown" : 0,
        "total" : 592
      },
      "items" : [ {
        "uid" : "a9edc60ca9cdd56b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/a9edc60ca9cdd56b",
        "status" : "passed",
        "time" : {
          "start" : 1632208123403,
          "stop" : 1632208126723,
          "duration" : 3320
        }
      }, {
        "uid" : "68e550a1b5d8d0f4",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/68e550a1b5d8d0f4",
        "status" : "passed",
        "time" : {
          "start" : 1632182767286,
          "stop" : 1632182771027,
          "duration" : 3741
        }
      }, {
        "uid" : "fd6740d9834e6c60",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/fd6740d9834e6c60",
        "status" : "passed",
        "time" : {
          "start" : 1632162173931,
          "stop" : 1632162177967,
          "duration" : 4036
        }
      }, {
        "uid" : "d9cd690f9d254ec6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/d9cd690f9d254ec6",
        "status" : "passed",
        "time" : {
          "start" : 1632152849532,
          "stop" : 1632152853276,
          "duration" : 3744
        }
      }, {
        "uid" : "9bf768c2015a021b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/9bf768c2015a021b",
        "status" : "passed",
        "time" : {
          "start" : 1632139623668,
          "stop" : 1632139628120,
          "duration" : 4452
        }
      }, {
        "uid" : "6a39d0c5793bd836",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/6a39d0c5793bd836",
        "status" : "passed",
        "time" : {
          "start" : 1632096344006,
          "stop" : 1632096347106,
          "duration" : 3100
        }
      }, {
        "uid" : "c71605cc7a76d4bf",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/c71605cc7a76d4bf",
        "status" : "passed",
        "time" : {
          "start" : 1632053226614,
          "stop" : 1632053231082,
          "duration" : 4468
        }
      }, {
        "uid" : "f2cb258d0add91ef",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/f2cb258d0add91ef",
        "status" : "passed",
        "time" : {
          "start" : 1632009994734,
          "stop" : 1632009998398,
          "duration" : 3664
        }
      }, {
        "uid" : "61fa2d3c2cd28e71",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/61fa2d3c2cd28e71",
        "status" : "passed",
        "time" : {
          "start" : 1631966776180,
          "stop" : 1631966780373,
          "duration" : 4193
        }
      }, {
        "uid" : "ba3ee3ac81697090",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/ba3ee3ac81697090",
        "status" : "passed",
        "time" : {
          "start" : 1631943608335,
          "stop" : 1631943612162,
          "duration" : 3827
        }
      }, {
        "uid" : "c9932c1ab79ccb04",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/c9932c1ab79ccb04",
        "status" : "passed",
        "time" : {
          "start" : 1631923614484,
          "stop" : 1631923619518,
          "duration" : 5034
        }
      }, {
        "uid" : "a65717d5c25d25ad",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/a65717d5c25d25ad",
        "status" : "passed",
        "time" : {
          "start" : 1631912873094,
          "stop" : 1631912877388,
          "duration" : 4294
        }
      }, {
        "uid" : "853256af0c3b49f3",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/853256af0c3b49f3",
        "status" : "passed",
        "time" : {
          "start" : 1631895945765,
          "stop" : 1631895949496,
          "duration" : 3731
        }
      }, {
        "uid" : "a0e41e23d782af3a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/a0e41e23d782af3a",
        "status" : "passed",
        "time" : {
          "start" : 1631886140875,
          "stop" : 1631886144851,
          "duration" : 3976
        }
      }, {
        "uid" : "f4563370a7d7f5fd",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/f4563370a7d7f5fd",
        "status" : "passed",
        "time" : {
          "start" : 1631880348266,
          "stop" : 1631880351471,
          "duration" : 3205
        }
      }, {
        "uid" : "1c6d0d0ad38d0dac",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/1c6d0d0ad38d0dac",
        "status" : "passed",
        "time" : {
          "start" : 1631837143205,
          "stop" : 1631837147356,
          "duration" : 4151
        }
      }, {
        "uid" : "88a6eb3a93477d03",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/88a6eb3a93477d03",
        "status" : "passed",
        "time" : {
          "start" : 1631823695224,
          "stop" : 1631823700362,
          "duration" : 5138
        }
      }, {
        "uid" : "1d9043eb4628f8a1",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/1d9043eb4628f8a1",
        "status" : "passed",
        "time" : {
          "start" : 1631822717387,
          "stop" : 1631822720766,
          "duration" : 3379
        }
      }, {
        "uid" : "3b9d4264ff7fd98f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/3b9d4264ff7fd98f",
        "status" : "passed",
        "time" : {
          "start" : 1631805680871,
          "stop" : 1631805684354,
          "duration" : 3483
        }
      }, {
        "uid" : "a74a50a05d1d5ecf",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/a74a50a05d1d5ecf",
        "status" : "passed",
        "time" : {
          "start" : 1631803318657,
          "stop" : 1631803323067,
          "duration" : 4410
        }
      } ]
    },
    "tags" : [ "Jetpack version: undefined" ]
  },
  "source" : "5702513d1da7dada.json",
  "parameterValues" : [ ]
}