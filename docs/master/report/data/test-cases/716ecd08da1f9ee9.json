{
  "uid" : "716ecd08da1f9ee9",
  "name" : "MailChimp Block",
  "fullName" : "MailChimp Block",
  "historyId" : "1e0e5667b8c419e68fc1ae6a0d73dd61",
  "time" : {
    "start" : 1628064693928,
    "stop" : 1628064756218,
    "duration" : 62290
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a MailChimp block\",\n    async () => {\n      blockId = await blockEditor.insertBlock(\n        _mailchimp.default.name(),\n        _mailchimp.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\"Can connect to a MailChimp\", async () => {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that MailChimp block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a MailChimp block&quot;,\n    async () =&gt; {\n      blockId = await blockEditor.insertBlock(\n        _mailchimp.default.name(),\n        _mailchimp.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(&quot;Can connect to a MailChimp&quot;, async () =&gt; {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that MailChimp block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "TimeoutError",
  "statusTrace" : "page.waitForSelector: Timeout 40000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"//span[contains(text(), 'e2etesting')]\" to be visible\n============================================================\nNote: use DEBUG=pw:api environment variable to capture Playwright logs.",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a MailChimp block\",\n    async () => {\n      blockId = await blockEditor.insertBlock(\n        _mailchimp.default.name(),\n        _mailchimp.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\"Can connect to a MailChimp\", async () => {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that MailChimp block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "broken",
    "statusMessage" : "TimeoutError",
    "statusTrace" : "page.waitForSelector: Timeout 40000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"//span[contains(text(), 'e2etesting')]\" to be visible\n============================================================\nNote: use DEBUG=pw:api environment variable to capture Playwright logs.",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "5811d96771459067",
      "name" : "Paid blocks - MailChimp Block",
      "source" : "5811d96771459067.png",
      "type" : "image/png",
      "size" : 42050
    }, {
      "uid" : "eb44eff7d2c7993f",
      "name" : "Paid blocks - MailChimp Block",
      "source" : "eb44eff7d2c7993f.png",
      "type" : "image/png",
      "size" : 133042
    }, {
      "uid" : "158399ccd1b0da37",
      "name" : "1628064745312_Paid_blocks___MailChimp_Block.webm",
      "source" : "158399ccd1b0da37.webm",
      "type" : "video/webm",
      "size" : 1059464
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 11,
        "skipped" : 0,
        "passed" : 210,
        "unknown" : 0,
        "total" : 221
      },
      "items" : [ {
        "uid" : "b489733bd69346c7",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/b489733bd69346c7",
        "status" : "passed",
        "time" : {
          "start" : 1628047495640,
          "stop" : 1628047510658,
          "duration" : 15018
        }
      }, {
        "uid" : "cc32c47796703413",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/cc32c47796703413",
        "status" : "passed",
        "time" : {
          "start" : 1628035704855,
          "stop" : 1628035720408,
          "duration" : 15553
        }
      }, {
        "uid" : "92e2c3ad9daf0330",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/92e2c3ad9daf0330",
        "status" : "passed",
        "time" : {
          "start" : 1628020973208,
          "stop" : 1628020989088,
          "duration" : 15880
        }
      }, {
        "uid" : "bd625d34ee86645b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/bd625d34ee86645b",
        "status" : "passed",
        "time" : {
          "start" : 1628012894004,
          "stop" : 1628012911292,
          "duration" : 17288
        }
      }, {
        "uid" : "ff24efad3668b041",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/ff24efad3668b041",
        "status" : "passed",
        "time" : {
          "start" : 1628009356253,
          "stop" : 1628009378472,
          "duration" : 22219
        }
      }, {
        "uid" : "ed28c8030e84b0fe",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/ed28c8030e84b0fe",
        "status" : "passed",
        "time" : {
          "start" : 1628002582108,
          "stop" : 1628002603266,
          "duration" : 21158
        }
      }, {
        "uid" : "f3d8213df5d95108",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/f3d8213df5d95108",
        "status" : "passed",
        "time" : {
          "start" : 1628000418630,
          "stop" : 1628000433581,
          "duration" : 14951
        }
      }, {
        "uid" : "e8efb84d4d072d9e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/e8efb84d4d072d9e",
        "status" : "passed",
        "time" : {
          "start" : 1627992428057,
          "stop" : 1627992443155,
          "duration" : 15098
        }
      }, {
        "uid" : "c148868e94cc94ec",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/c148868e94cc94ec",
        "status" : "passed",
        "time" : {
          "start" : 1627949231793,
          "stop" : 1627949245902,
          "duration" : 14109
        }
      }, {
        "uid" : "dae388c95edb6066",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/dae388c95edb6066",
        "status" : "passed",
        "time" : {
          "start" : 1627941213013,
          "stop" : 1627941227865,
          "duration" : 14852
        }
      }, {
        "uid" : "c4307b2029839d81",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/c4307b2029839d81",
        "status" : "passed",
        "time" : {
          "start" : 1627939462774,
          "stop" : 1627939480102,
          "duration" : 17328
        }
      }, {
        "uid" : "5cf9158f5e553596",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/5cf9158f5e553596",
        "status" : "passed",
        "time" : {
          "start" : 1627930652293,
          "stop" : 1627930667266,
          "duration" : 14973
        }
      }, {
        "uid" : "71c1c6df8394f07f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/71c1c6df8394f07f",
        "status" : "passed",
        "time" : {
          "start" : 1627914333066,
          "stop" : 1627914349855,
          "duration" : 16789
        }
      }, {
        "uid" : "7a66a6e1265723e9",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/7a66a6e1265723e9",
        "status" : "passed",
        "time" : {
          "start" : 1627906108730,
          "stop" : 1627906124688,
          "duration" : 15958
        }
      }, {
        "uid" : "886e12c707db32db",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/886e12c707db32db",
        "status" : "passed",
        "time" : {
          "start" : 1627889461989,
          "stop" : 1627889479262,
          "duration" : 17273
        }
      }, {
        "uid" : "4ea281721b57560e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/4ea281721b57560e",
        "status" : "passed",
        "time" : {
          "start" : 1627888702471,
          "stop" : 1627888719154,
          "duration" : 16683
        }
      }, {
        "uid" : "d4ad63aa31ec09c7",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/d4ad63aa31ec09c7",
        "status" : "passed",
        "time" : {
          "start" : 1627862848252,
          "stop" : 1627862863539,
          "duration" : 15287
        }
      }, {
        "uid" : "efbfa12824835660",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/efbfa12824835660",
        "status" : "passed",
        "time" : {
          "start" : 1627819766478,
          "stop" : 1627819789273,
          "duration" : 22795
        }
      }, {
        "uid" : "fa4e58fdda7a8189",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/fa4e58fdda7a8189",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1627776532388,
          "stop" : 1627776594071,
          "duration" : 61683
        }
      }, {
        "uid" : "405ad3601564093a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/405ad3601564093a",
        "status" : "passed",
        "time" : {
          "start" : 1627733284682,
          "stop" : 1627733300341,
          "duration" : 15659
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "716ecd08da1f9ee9.json",
  "parameterValues" : [ ]
}