{
  "uid" : "e41a57f9e7ec4f0",
  "name" : "Pay with PayPal",
  "fullName" : "Pay with PayPal",
  "historyId" : "2b956f1af1e91da7ea3b442b8c2cddca",
  "time" : {
    "start" : 1623163408052,
    "stop" : 1623163416677,
    "duration" : 8625
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pay with PayPal block\",\n    async () => {\n      await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n      blockId = await blockEditor.insertBlock(\n        _simplePayments.default.name(),\n        _simplePayments.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can fill details of Pay with PayPal block\",\n    async () => {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that Pay with PayPal block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a Pay with PayPal block&quot;,\n    async () =&gt; {\n      await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n      blockId = await blockEditor.insertBlock(\n        _simplePayments.default.name(),\n        _simplePayments.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can fill details of Pay with PayPal block&quot;,\n    async () =&gt; {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that Pay with PayPal block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "652a6378785f5345",
      "status" : "passed",
      "time" : {
        "start" : 1623160658628,
        "stop" : 1623160666585,
        "duration" : 7957
      }
    }, {
      "uid" : "922ff4bd51352689",
      "status" : "passed",
      "time" : {
        "start" : 1623155045152,
        "stop" : 1623155053421,
        "duration" : 8269
      }
    }, {
      "uid" : "45cee2f21e0f60bb",
      "status" : "passed",
      "time" : {
        "start" : 1623154160255,
        "stop" : 1623154169846,
        "duration" : 9591
      }
    }, {
      "uid" : "62820cf7dec2a819",
      "status" : "passed",
      "time" : {
        "start" : 1623154041190,
        "stop" : 1623154051731,
        "duration" : 10541
      }
    }, {
      "uid" : "cc4f1e5eeb60f28e",
      "status" : "passed",
      "time" : {
        "start" : 1623111470145,
        "stop" : 1623111476603,
        "duration" : 6458
      }
    }, {
      "uid" : "8c72fb8b4eaa162",
      "status" : "passed",
      "time" : {
        "start" : 1623111460218,
        "stop" : 1623111470823,
        "duration" : 10605
      }
    }, {
      "uid" : "f89a852a15e60a3f",
      "status" : "passed",
      "time" : {
        "start" : 1623105389674,
        "stop" : 1623105397791,
        "duration" : 8117
      }
    }, {
      "uid" : "19a4a714bb0b111e",
      "status" : "passed",
      "time" : {
        "start" : 1623103198282,
        "stop" : 1623103216422,
        "duration" : 18140
      }
    }, {
      "uid" : "378f827d9d403f98",
      "status" : "passed",
      "time" : {
        "start" : 1623097738361,
        "stop" : 1623097746179,
        "duration" : 7818
      }
    }, {
      "uid" : "ecf430fbdcded207",
      "status" : "passed",
      "time" : {
        "start" : 1623095617638,
        "stop" : 1623095626623,
        "duration" : 8985
      }
    }, {
      "uid" : "9290800f45649740",
      "status" : "passed",
      "time" : {
        "start" : 1623068429791,
        "stop" : 1623068437406,
        "duration" : 7615
      }
    }, {
      "uid" : "282c3158812386ea",
      "status" : "passed",
      "time" : {
        "start" : 1623068379997,
        "stop" : 1623068390256,
        "duration" : 10259
      }
    }, {
      "uid" : "108aba4e3cbef82e",
      "status" : "passed",
      "time" : {
        "start" : 1623067290627,
        "stop" : 1623067298730,
        "duration" : 8103
      }
    } ],
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "e41a57f9e7ec4f0.json",
  "parameterValues" : [ ]
}