{
  "uid" : "3c2685478d21c095",
  "name" : "Can perform search with default settings",
  "fullName" : "Can perform search with default settings",
  "historyId" : "8a48effa07b2a0dc8118fcc35772e118",
  "time" : {
    "start" : 1633090065491,
    "stop" : 1633090071209,
    "duration" : 5718
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _reporter.testStep)(\n    \"Can open the overlay by entering a query\",\n    async () => {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search controls in the overlay\",\n    async () => {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search results in the overlay\",\n    async () => {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can sort results by relevance by default\",\n    async () => {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        \"<mark>Test1</mark> Record 1\"\n      );\n    }\n  );\n  await (0, _reporter.testStep)(\"Can edit query in search form\", async () => {\n    await homepage.enterQueryToOverlay(\"test2\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 1\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can change sort order\", async () => {\n    await homepage.chooseSortingLink(\"newest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"newest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n    await homepage.chooseSortingLink(\"oldest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"oldest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can apply filters\", async () => {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n  });\n  await (0, _reporter.testStep)(\n    \"Can close overlay by clicking the cross\",\n    async () => {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  await (0, _reporter.testStep)(\n    &quot;Can open the overlay by entering a query&quot;,\n    async () =&gt; {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can show search controls in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can show search results in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can sort results by relevance by default&quot;,\n    async () =&gt; {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        &quot;&lt;mark&gt;Test1&lt;/mark&gt; Record 1&quot;\n      );\n    }\n  );\n  await (0, _reporter.testStep)(&quot;Can edit query in search form&quot;, async () =&gt; {\n    await homepage.enterQueryToOverlay(&quot;test2&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 1&quot;\n    );\n  });\n  await (0, _reporter.testStep)(&quot;Can change sort order&quot;, async () =&gt; {\n    await homepage.chooseSortingLink(&quot;newest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;newest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n    await homepage.chooseSortingLink(&quot;oldest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;oldest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n  });\n  await (0, _reporter.testStep)(&quot;Can apply filters&quot;, async () =&gt; {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n  });\n  await (0, _reporter.testStep)(\n    &quot;Can close overlay by clicking the cross&quot;,\n    async () =&gt; {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _reporter.testStep)(\n    \"Can open the overlay by entering a query\",\n    async () => {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search controls in the overlay\",\n    async () => {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can show search results in the overlay\",\n    async () => {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can sort results by relevance by default\",\n    async () => {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        \"<mark>Test1</mark> Record 1\"\n      );\n    }\n  );\n  await (0, _reporter.testStep)(\"Can edit query in search form\", async () => {\n    await homepage.enterQueryToOverlay(\"test2\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 1\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can change sort order\", async () => {\n    await homepage.chooseSortingLink(\"newest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"newest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n    await homepage.chooseSortingLink(\"oldest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"oldest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n  });\n  await (0, _reporter.testStep)(\"Can apply filters\", async () => {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n  });\n  await (0, _reporter.testStep)(\n    \"Can close overlay by clicking the cross\",\n    async () => {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Can open the overlay by entering a query",
      "time" : {
        "start" : 1633090065581,
        "stop" : 1633090066270,
        "duration" : 689
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can show search controls in the overlay",
      "time" : {
        "start" : 1633090066277,
        "stop" : 1633090066425,
        "duration" : 148
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can show search results in the overlay",
      "time" : {
        "start" : 1633090066428,
        "stop" : 1633090066451,
        "duration" : 23
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can sort results by relevance by default",
      "time" : {
        "start" : 1633090066452,
        "stop" : 1633090066469,
        "duration" : 17
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can edit query in search form",
      "time" : {
        "start" : 1633090066470,
        "stop" : 1633090066818,
        "duration" : 348
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can change sort order",
      "time" : {
        "start" : 1633090066829,
        "stop" : 1633090067821,
        "duration" : 992
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can apply filters",
      "time" : {
        "start" : 1633090067832,
        "stop" : 1633090068826,
        "duration" : 994
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can close overlay by clicking the cross",
      "time" : {
        "start" : 1633090068835,
        "stop" : 1633090069145,
        "duration" : 310
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "search.test.js"
  }, {
    "name" : "tag",
    "value" : "Jetpack version: 10.3-alpha-cfb38a707f7b3307130757bfb13af85f2a493e47"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 61,
        "skipped" : 0,
        "passed" : 612,
        "unknown" : 0,
        "total" : 673
      },
      "items" : [ {
        "uid" : "a544e5207e54d19c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/a544e5207e54d19c",
        "status" : "passed",
        "time" : {
          "start" : 1633085724774,
          "stop" : 1633085728219,
          "duration" : 3445
        }
      }, {
        "uid" : "13aaa050c7d0f991",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/13aaa050c7d0f991",
        "status" : "passed",
        "time" : {
          "start" : 1633071617620,
          "stop" : 1633071623493,
          "duration" : 5873
        }
      }, {
        "uid" : "b10b728e8b134301",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/b10b728e8b134301",
        "status" : "broken",
        "statusDetails" : "Error",
        "time" : {
          "start" : 1633046759554,
          "stop" : 1633046759749,
          "duration" : 195
        }
      }, {
        "uid" : "d0033b8784373291",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/d0033b8784373291",
        "status" : "passed",
        "time" : {
          "start" : 1633042233871,
          "stop" : 1633042239197,
          "duration" : 5326
        }
      }, {
        "uid" : "7d6ea2b22e439b93",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/7d6ea2b22e439b93",
        "status" : "passed",
        "time" : {
          "start" : 1633040891811,
          "stop" : 1633040895070,
          "duration" : 3259
        }
      }, {
        "uid" : "589b14aa3885fe56",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/589b14aa3885fe56",
        "status" : "passed",
        "time" : {
          "start" : 1633035145691,
          "stop" : 1633035150648,
          "duration" : 4957
        }
      }, {
        "uid" : "54e92bfa4bc93fb2",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/54e92bfa4bc93fb2",
        "status" : "passed",
        "time" : {
          "start" : 1633033017661,
          "stop" : 1633033020988,
          "duration" : 3327
        }
      }, {
        "uid" : "aeefff03486111bd",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/aeefff03486111bd",
        "status" : "broken",
        "statusDetails" : "Error",
        "time" : {
          "start" : 1633025902004,
          "stop" : 1633025902180,
          "duration" : 176
        }
      }, {
        "uid" : "74fb381b7cbbe5dc",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/74fb381b7cbbe5dc",
        "status" : "passed",
        "time" : {
          "start" : 1633021196441,
          "stop" : 1633021200492,
          "duration" : 4051
        }
      }, {
        "uid" : "7f360e05288e9586",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/7f360e05288e9586",
        "status" : "passed",
        "time" : {
          "start" : 1633012394068,
          "stop" : 1633012397371,
          "duration" : 3303
        }
      }, {
        "uid" : "7b5c609c38a23ede",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/7b5c609c38a23ede",
        "status" : "passed",
        "time" : {
          "start" : 1633007834666,
          "stop" : 1633007838181,
          "duration" : 3515
        }
      }, {
        "uid" : "aee7f4be7a89e262",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/aee7f4be7a89e262",
        "status" : "passed",
        "time" : {
          "start" : 1632997612227,
          "stop" : 1632997616324,
          "duration" : 4097
        }
      }, {
        "uid" : "1e778bc8b745f318",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/1e778bc8b745f318",
        "status" : "passed",
        "time" : {
          "start" : 1632976489036,
          "stop" : 1632976493198,
          "duration" : 4162
        }
      }, {
        "uid" : "76e7d6b34ccd95dc",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/76e7d6b34ccd95dc",
        "status" : "passed",
        "time" : {
          "start" : 1632971694536,
          "stop" : 1632971699105,
          "duration" : 4569
        }
      }, {
        "uid" : "96aeecb38ceab723",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/96aeecb38ceab723",
        "status" : "passed",
        "time" : {
          "start" : 1632960432852,
          "stop" : 1632960437858,
          "duration" : 5006
        }
      }, {
        "uid" : "ba09f3e847eab9a9",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/ba09f3e847eab9a9",
        "status" : "passed",
        "time" : {
          "start" : 1632946984694,
          "stop" : 1632946988511,
          "duration" : 3817
        }
      }, {
        "uid" : "4a4588ded595a3cb",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/4a4588ded595a3cb",
        "status" : "passed",
        "time" : {
          "start" : 1632928219421,
          "stop" : 1632928223571,
          "duration" : 4150
        }
      }, {
        "uid" : "a36de96624f52159",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/a36de96624f52159",
        "status" : "passed",
        "time" : {
          "start" : 1632923658093,
          "stop" : 1632923664141,
          "duration" : 6048
        }
      }, {
        "uid" : "fa7abc6223e731d7",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/fa7abc6223e731d7",
        "status" : "passed",
        "time" : {
          "start" : 1632922566141,
          "stop" : 1632922569265,
          "duration" : 3124
        }
      }, {
        "uid" : "3de7bc8dae3bdcfa",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/3de7bc8dae3bdcfa",
        "status" : "passed",
        "time" : {
          "start" : 1632917228757,
          "stop" : 1632917233210,
          "duration" : 4453
        }
      } ]
    },
    "tags" : [ "Jetpack version: 10.3-alpha-cfb38a707f7b3307130757bfb13af85f2a493e47" ]
  },
  "source" : "3c2685478d21c095.json",
  "parameterValues" : [ ]
}