{
  "uid" : "6c7f11f5e99c5b2e",
  "name" : "WordAds block",
  "fullName" : "WordAds block",
  "historyId" : "18efccdb8f3fb33e445e77a8ef2cffa3",
  "time" : {
    "start" : 1623182464133,
    "stop" : 1623182468665,
    "duration" : 4532
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a WordAds block\",\n    async () => {\n      await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n      blockId = await blockEditor.insertBlock(\n        _wordAds.default.name(),\n        _wordAds.default.title()\n      );\n      await blockEditor.selectPostTitle();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can switch to Wide Skyscraper ad format\",\n    async () => {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that WordAds block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a WordAds block&quot;,\n    async () =&gt; {\n      await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n      blockId = await blockEditor.insertBlock(\n        _wordAds.default.name(),\n        _wordAds.default.title()\n      );\n      await blockEditor.selectPostTitle();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can switch to Wide Skyscraper ad format&quot;,\n    async () =&gt; {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that WordAds block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "8617dee834b8c17a",
      "status" : "passed",
      "time" : {
        "start" : 1623168566173,
        "stop" : 1623168571312,
        "duration" : 5139
      }
    }, {
      "uid" : "11189b2be129e3f6",
      "status" : "passed",
      "time" : {
        "start" : 1623163419913,
        "stop" : 1623163426245,
        "duration" : 6332
      }
    }, {
      "uid" : "169938502f43ebf1",
      "status" : "passed",
      "time" : {
        "start" : 1623160669154,
        "stop" : 1623160674100,
        "duration" : 4946
      }
    }, {
      "uid" : "436563a844b5349f",
      "status" : "passed",
      "time" : {
        "start" : 1623155055925,
        "stop" : 1623155060586,
        "duration" : 4661
      }
    }, {
      "uid" : "bb50bc88c1b87866",
      "status" : "passed",
      "time" : {
        "start" : 1623154172965,
        "stop" : 1623154178750,
        "duration" : 5785
      }
    }, {
      "uid" : "f2f0a33724370cdf",
      "status" : "passed",
      "time" : {
        "start" : 1623154054923,
        "stop" : 1623154062026,
        "duration" : 7103
      }
    }, {
      "uid" : "fb997e4fd2306876",
      "status" : "passed",
      "time" : {
        "start" : 1623111478887,
        "stop" : 1623111482879,
        "duration" : 3992
      }
    }, {
      "uid" : "c9bcc9311e3b9ec8",
      "status" : "passed",
      "time" : {
        "start" : 1623111473917,
        "stop" : 1623111480496,
        "duration" : 6579
      }
    }, {
      "uid" : "767835f8196fac46",
      "status" : "passed",
      "time" : {
        "start" : 1623105400588,
        "stop" : 1623105406199,
        "duration" : 5611
      }
    }, {
      "uid" : "da167969cde1ec89",
      "status" : "passed",
      "time" : {
        "start" : 1623103220086,
        "stop" : 1623103225649,
        "duration" : 5563
      }
    }, {
      "uid" : "48b5c86d4c1d2e07",
      "status" : "passed",
      "time" : {
        "start" : 1623097748778,
        "stop" : 1623097754294,
        "duration" : 5516
      }
    }, {
      "uid" : "2350a2a4ba73102b",
      "status" : "passed",
      "time" : {
        "start" : 1623095629470,
        "stop" : 1623095636139,
        "duration" : 6669
      }
    }, {
      "uid" : "220beeb95b5b28b7",
      "status" : "passed",
      "time" : {
        "start" : 1623068439710,
        "stop" : 1623068444803,
        "duration" : 5093
      }
    }, {
      "uid" : "1d8b226272938821",
      "status" : "passed",
      "time" : {
        "start" : 1623068393819,
        "stop" : 1623068400996,
        "duration" : 7177
      }
    }, {
      "uid" : "b3bad19afa1fcda",
      "status" : "passed",
      "time" : {
        "start" : 1623067302046,
        "stop" : 1623067307520,
        "duration" : 5474
      }
    } ],
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "6c7f11f5e99c5b2e.json",
  "parameterValues" : [ ]
}