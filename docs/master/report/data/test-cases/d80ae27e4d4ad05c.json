{
  "uid" : "d80ae27e4d4ad05c",
  "name" : "Can perform search with default settings",
  "fullName" : "Can perform search with default settings",
  "historyId" : "8a48effa07b2a0dc8118fcc35772e118",
  "time" : {
    "start" : 1628064584390,
    "stop" : 1628064586917,
    "duration" : 2527
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _testSetup.step)(\n    \"Can open the overlay by entering a query\",\n    async () => {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can show search controls in the overlay\",\n    async () => {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can show search results in the overlay\",\n    async () => {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can sort results by relevance by default\",\n    async () => {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        \"<mark>Test1</mark> Record 1\"\n      );\n    }\n  );\n  await (0, _testSetup.step)(\"Can edit query in search form\", async () => {\n    await homepage.enterQueryToOverlay(\"test2\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 1\"\n    );\n  });\n  await (0, _testSetup.step)(\"Can change sort order\", async () => {\n    await homepage.chooseSortingLink(\"newest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"newest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n    await homepage.chooseSortingLink(\"oldest\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(\"oldest\")).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n  });\n  await (0, _testSetup.step)(\"Can apply filters\", async () => {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 2\"\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      \"<mark>Test2</mark> Record 3\"\n    );\n  });\n  await (0, _testSetup.step)(\n    \"Can close overlay by clicking the cross\",\n    async () => {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  await (0, _testSetup.step)(\n    &quot;Can open the overlay by entering a query&quot;,\n    async () =&gt; {\n      await homepage.focusSearchInput();\n      await homepage.enterQuery();\n      await homepage.waitForSearchResponse();\n\n      expect(await homepage.isOverlayVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can show search controls in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchFormVisible()).toBeTruthy();\n      expect(await homepage.isSortingVisible()).toBeTruthy();\n      expect(await homepage.isFilteringOptionsVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can show search results in the overlay&quot;,\n    async () =&gt; {\n      expect(await homepage.isSearchResultVisible()).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can sort results by relevance by default&quot;,\n    async () =&gt; {\n      expect(await homepage.getFirstResultTitle()).toBe(\n        &quot;&lt;mark&gt;Test1&lt;/mark&gt; Record 1&quot;\n      );\n    }\n  );\n  await (0, _testSetup.step)(&quot;Can edit query in search form&quot;, async () =&gt; {\n    await homepage.enterQueryToOverlay(&quot;test2&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 1&quot;\n    );\n  });\n  await (0, _testSetup.step)(&quot;Can change sort order&quot;, async () =&gt; {\n    await homepage.chooseSortingLink(&quot;newest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;newest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n    await homepage.chooseSortingLink(&quot;oldest&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isSortingLinkSelected(&quot;oldest&quot;)).toBeTruthy();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n  });\n  await (0, _testSetup.step)(&quot;Can apply filters&quot;, async () =&gt; {\n    await homepage.clickFilterCategory2();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 2&quot;\n    );\n    await homepage.clickFilterCategory2();\n    await homepage.clickFilterTag3();\n    await homepage.waitForSearchResponse();\n    expect(await homepage.getFirstResultTitle()).toBe(\n      &quot;&lt;mark&gt;Test2&lt;/mark&gt; Record 3&quot;\n    );\n  });\n  await (0, _testSetup.step)(\n    &quot;Can close overlay by clicking the cross&quot;,\n    async () =&gt; {\n      await homepage.clickCrossToCloseOverlay();\n      expect(await homepage.isOverlayVisible()).toBeFalsy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "search.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 58,
        "skipped" : 0,
        "passed" : 163,
        "unknown" : 0,
        "total" : 221
      },
      "items" : [ {
        "uid" : "6649f1cd56e5521e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/6649f1cd56e5521e",
        "status" : "passed",
        "time" : {
          "start" : 1628047406797,
          "stop" : 1628047409173,
          "duration" : 2376
        }
      }, {
        "uid" : "6e81572de5b2e723",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/6e81572de5b2e723",
        "status" : "passed",
        "time" : {
          "start" : 1628035604983,
          "stop" : 1628035607766,
          "duration" : 2783
        }
      }, {
        "uid" : "2df2c3aa69935212",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/2df2c3aa69935212",
        "status" : "passed",
        "time" : {
          "start" : 1628020872549,
          "stop" : 1628020875193,
          "duration" : 2644
        }
      }, {
        "uid" : "2b6d6898caf2ef29",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/2b6d6898caf2ef29",
        "status" : "passed",
        "time" : {
          "start" : 1628012788793,
          "stop" : 1628012791443,
          "duration" : 2650
        }
      }, {
        "uid" : "d05e76ed648b230d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/d05e76ed648b230d",
        "status" : "passed",
        "time" : {
          "start" : 1628009247978,
          "stop" : 1628009250779,
          "duration" : 2801
        }
      }, {
        "uid" : "657d629ef9d9f4bc",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/657d629ef9d9f4bc",
        "status" : "passed",
        "time" : {
          "start" : 1628002468693,
          "stop" : 1628002471401,
          "duration" : 2708
        }
      }, {
        "uid" : "68b687d93c9b6703",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/68b687d93c9b6703",
        "status" : "passed",
        "time" : {
          "start" : 1628000331845,
          "stop" : 1628000334230,
          "duration" : 2385
        }
      }, {
        "uid" : "b578fb614abed82c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/b578fb614abed82c",
        "status" : "passed",
        "time" : {
          "start" : 1627992339145,
          "stop" : 1627992341504,
          "duration" : 2359
        }
      }, {
        "uid" : "fa6760541ceb5518",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/fa6760541ceb5518",
        "status" : "passed",
        "time" : {
          "start" : 1627949141757,
          "stop" : 1627949144184,
          "duration" : 2427
        }
      }, {
        "uid" : "38da63d65996d882",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/38da63d65996d882",
        "status" : "passed",
        "time" : {
          "start" : 1627941119260,
          "stop" : 1627941121768,
          "duration" : 2508
        }
      }, {
        "uid" : "df5454a476c576db",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/df5454a476c576db",
        "status" : "passed",
        "time" : {
          "start" : 1627939356320,
          "stop" : 1627939359174,
          "duration" : 2854
        }
      }, {
        "uid" : "31ef2487af71a401",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/31ef2487af71a401",
        "status" : "passed",
        "time" : {
          "start" : 1627930549158,
          "stop" : 1627930551917,
          "duration" : 2759
        }
      }, {
        "uid" : "f71696f5a913a2fd",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/f71696f5a913a2fd",
        "status" : "passed",
        "time" : {
          "start" : 1627914227867,
          "stop" : 1627914230487,
          "duration" : 2620
        }
      }, {
        "uid" : "26b4c8879fcb078f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/26b4c8879fcb078f",
        "status" : "passed",
        "time" : {
          "start" : 1627906012949,
          "stop" : 1627906015457,
          "duration" : 2508
        }
      }, {
        "uid" : "4de3cbd7a29ef1fd",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/4de3cbd7a29ef1fd",
        "status" : "passed",
        "time" : {
          "start" : 1627889366283,
          "stop" : 1627889368895,
          "duration" : 2612
        }
      }, {
        "uid" : "a808ef75b79588f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/a808ef75b79588f",
        "status" : "passed",
        "time" : {
          "start" : 1627888596702,
          "stop" : 1627888599457,
          "duration" : 2755
        }
      }, {
        "uid" : "a4442c2330929b93",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/a4442c2330929b93",
        "status" : "passed",
        "time" : {
          "start" : 1627862756486,
          "stop" : 1627862758889,
          "duration" : 2403
        }
      }, {
        "uid" : "66bfb4b996f1d212",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/66bfb4b996f1d212",
        "status" : "passed",
        "time" : {
          "start" : 1627819642845,
          "stop" : 1627819645631,
          "duration" : 2786
        }
      }, {
        "uid" : "68ff5e274db6eea9",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/68ff5e274db6eea9",
        "status" : "passed",
        "time" : {
          "start" : 1627776419298,
          "stop" : 1627776422047,
          "duration" : 2749
        }
      }, {
        "uid" : "ba498ec1c6320075",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/master/report/#testresult/ba498ec1c6320075",
        "status" : "passed",
        "time" : {
          "start" : 1627733186435,
          "stop" : 1627733189011,
          "duration" : 2576
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "d80ae27e4d4ad05c.json",
  "parameterValues" : [ ]
}