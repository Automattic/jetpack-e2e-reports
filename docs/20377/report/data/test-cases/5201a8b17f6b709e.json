{
  "uid" : "5201a8b17f6b709e",
  "name" : "WordAds block",
  "fullName" : "WordAds block",
  "historyId" : "18efccdb8f3fb33e445e77a8ef2cffa3",
  "time" : {
    "start" : 1627363121835,
    "stop" : 1627363128077,
    "duration" : 6242
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a WordAds block\",\n    async () => {\n      await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n      blockId = await blockEditor.insertBlock(\n        _wordAds.default.name(),\n        _wordAds.default.title()\n      );\n      await blockEditor.selectPostTitle();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can switch to Wide Skyscraper ad format\",\n    async () => {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that WordAds block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a WordAds block&quot;,\n    async () =&gt; {\n      await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n      blockId = await blockEditor.insertBlock(\n        _wordAds.default.name(),\n        _wordAds.default.title()\n      );\n      await blockEditor.selectPostTitle();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can switch to Wide Skyscraper ad format&quot;,\n    async () =&gt; {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that WordAds block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 15,
        "unknown" : 0,
        "total" : 15
      },
      "items" : [ {
        "uid" : "83ceccc341ed14c9",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/83ceccc341ed14c9",
        "status" : "passed",
        "time" : {
          "start" : 1627003761466,
          "stop" : 1627003770351,
          "duration" : 8885
        }
      }, {
        "uid" : "5d4f299386bcb310",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/5d4f299386bcb310",
        "status" : "passed",
        "time" : {
          "start" : 1626982443063,
          "stop" : 1626982449950,
          "duration" : 6887
        }
      }, {
        "uid" : "a44427285db17bb",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/a44427285db17bb",
        "status" : "passed",
        "time" : {
          "start" : 1626979933250,
          "stop" : 1626979939524,
          "duration" : 6274
        }
      }, {
        "uid" : "e0c2a9204bc5c441",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/e0c2a9204bc5c441",
        "status" : "passed",
        "time" : {
          "start" : 1626978397184,
          "stop" : 1626978404050,
          "duration" : 6866
        }
      }, {
        "uid" : "eca2f6289c69b73b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/eca2f6289c69b73b",
        "status" : "passed",
        "time" : {
          "start" : 1626976453731,
          "stop" : 1626976460369,
          "duration" : 6638
        }
      }, {
        "uid" : "49991d6982ca9823",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/49991d6982ca9823",
        "status" : "passed",
        "time" : {
          "start" : 1626975198122,
          "stop" : 1626975206862,
          "duration" : 8740
        }
      }, {
        "uid" : "219f6adff395e6ba",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/219f6adff395e6ba",
        "status" : "passed",
        "time" : {
          "start" : 1626911437860,
          "stop" : 1626911443196,
          "duration" : 5336
        }
      }, {
        "uid" : "eeef70e96c62261a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/eeef70e96c62261a",
        "status" : "passed",
        "time" : {
          "start" : 1626902874542,
          "stop" : 1626902883273,
          "duration" : 8731
        }
      }, {
        "uid" : "6f2b60b694fb7077",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/6f2b60b694fb7077",
        "status" : "passed",
        "time" : {
          "start" : 1626901938002,
          "stop" : 1626901945274,
          "duration" : 7272
        }
      }, {
        "uid" : "ce1a45b5133512d3",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/ce1a45b5133512d3",
        "status" : "passed",
        "time" : {
          "start" : 1626819208823,
          "stop" : 1626819214997,
          "duration" : 6174
        }
      }, {
        "uid" : "79972d5b0ae1504d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/79972d5b0ae1504d",
        "status" : "passed",
        "time" : {
          "start" : 1626734471804,
          "stop" : 1626734478600,
          "duration" : 6796
        }
      }, {
        "uid" : "d42f6ab366a2cf24",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/d42f6ab366a2cf24",
        "status" : "passed",
        "time" : {
          "start" : 1626732893219,
          "stop" : 1626732898346,
          "duration" : 5127
        }
      }, {
        "uid" : "31a9a40bb2ff7f10",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/31a9a40bb2ff7f10",
        "status" : "passed",
        "time" : {
          "start" : 1626477218881,
          "stop" : 1626477224740,
          "duration" : 5859
        }
      }, {
        "uid" : "d9c91bd3eb62af1b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/d9c91bd3eb62af1b",
        "status" : "passed",
        "time" : {
          "start" : 1626396770207,
          "stop" : 1626396776756,
          "duration" : 6549
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "5201a8b17f6b709e.json",
  "parameterValues" : [ ]
}