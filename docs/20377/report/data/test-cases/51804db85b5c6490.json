{
  "uid" : "51804db85b5c6490",
  "name" : "Eventbrite block",
  "fullName" : "Eventbrite block",
  "historyId" : "0b4a15ebb314cfb213eb3e305bfce89d",
  "time" : {
    "start" : 1626979981259,
    "stop" : 1626979991765,
    "duration" : 10506
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const eventId = \"112691417062\";\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Eventbrite block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _eventbrite.default.name(),\n        _eventbrite.default.title()\n      );\n      const eventbriteBlock = new _eventbrite.default(blockId, page, eventId);\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post with a Eventbrite block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can assert that Eventbrite block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_eventbrite.default, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const eventId = &quot;112691417062&quot;;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a Eventbrite block&quot;,\n    async () =&gt; {\n      const blockId = await blockEditor.insertBlock(\n        _eventbrite.default.name(),\n        _eventbrite.default.title()\n      );\n      const eventbriteBlock = new _eventbrite.default(blockId, page, eventId);\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post with a Eventbrite block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can assert that Eventbrite block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_eventbrite.default, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 12,
        "unknown" : 0,
        "total" : 12
      },
      "items" : [ {
        "uid" : "f832da56f06ec4b4",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/f832da56f06ec4b4",
        "status" : "passed",
        "time" : {
          "start" : 1626978447513,
          "stop" : 1626978456078,
          "duration" : 8565
        }
      }, {
        "uid" : "91bacc17e0407901",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/91bacc17e0407901",
        "status" : "passed",
        "time" : {
          "start" : 1626976510238,
          "stop" : 1626976518264,
          "duration" : 8026
        }
      }, {
        "uid" : "eec3dfa00800b8ae",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/eec3dfa00800b8ae",
        "status" : "passed",
        "time" : {
          "start" : 1626975279317,
          "stop" : 1626975291682,
          "duration" : 12365
        }
      }, {
        "uid" : "e39e886bf166eb0d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/e39e886bf166eb0d",
        "status" : "passed",
        "time" : {
          "start" : 1626911487940,
          "stop" : 1626911495374,
          "duration" : 7434
        }
      }, {
        "uid" : "f62c7cc991d8a3f1",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/f62c7cc991d8a3f1",
        "status" : "passed",
        "time" : {
          "start" : 1626902950620,
          "stop" : 1626902962167,
          "duration" : 11547
        }
      }, {
        "uid" : "471ec5f408a6b6ca",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/471ec5f408a6b6ca",
        "status" : "passed",
        "time" : {
          "start" : 1626901998419,
          "stop" : 1626902008724,
          "duration" : 10305
        }
      }, {
        "uid" : "31bcaf97745d31b3",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/31bcaf97745d31b3",
        "status" : "passed",
        "time" : {
          "start" : 1626819261425,
          "stop" : 1626819270151,
          "duration" : 8726
        }
      }, {
        "uid" : "342bfd2723a5f7d1",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/342bfd2723a5f7d1",
        "status" : "passed",
        "time" : {
          "start" : 1626734532790,
          "stop" : 1626734541918,
          "duration" : 9128
        }
      }, {
        "uid" : "ccbceebf3e0d1280",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/ccbceebf3e0d1280",
        "status" : "passed",
        "time" : {
          "start" : 1626732941815,
          "stop" : 1626732951931,
          "duration" : 10116
        }
      }, {
        "uid" : "5abe57d761bf0ee1",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/5abe57d761bf0ee1",
        "status" : "passed",
        "time" : {
          "start" : 1626477276749,
          "stop" : 1626477286479,
          "duration" : 9730
        }
      }, {
        "uid" : "13225c341c083fd1",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/13225c341c083fd1",
        "status" : "passed",
        "time" : {
          "start" : 1626396836899,
          "stop" : 1626396847642,
          "duration" : 10743
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "51804db85b5c6490.json",
  "parameterValues" : [ ]
}