{
  "uid" : "6519420447563698",
  "name" : "Pinterest block",
  "fullName" : "Pinterest block",
  "historyId" : "bf919c5c1253559f0d007402decf47af",
  "time" : {
    "start" : 1626978439138,
    "stop" : 1626978445423,
    "duration" : 6285
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pinterest block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _pinterest.default.name(),\n        _pinterest.default.title()\n      );\n      const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n      await pinterestBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const pinId = _config.default.get(&quot;blocks.pinterest.pinId&quot;);\n\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a Pinterest block&quot;,\n    async () =&gt; {\n      const blockId = await blockEditor.insertBlock(\n        _pinterest.default.name(),\n        _pinterest.default.title()\n      );\n      const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n      await pinterestBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post with a Pinterest block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can assert that Pinterest block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 11,
        "unknown" : 0,
        "total" : 11
      },
      "items" : [ {
        "uid" : "ad642c4c0361edae",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/ad642c4c0361edae",
        "status" : "passed",
        "time" : {
          "start" : 1626976501116,
          "stop" : 1626976507797,
          "duration" : 6681
        }
      }, {
        "uid" : "dce968e97c5329ba",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/dce968e97c5329ba",
        "status" : "passed",
        "time" : {
          "start" : 1626975265810,
          "stop" : 1626975276086,
          "duration" : 10276
        }
      }, {
        "uid" : "b7d2e511bd435ddd",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/b7d2e511bd435ddd",
        "status" : "passed",
        "time" : {
          "start" : 1626911480123,
          "stop" : 1626911486037,
          "duration" : 5914
        }
      }, {
        "uid" : "a769815b24c4b41",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/a769815b24c4b41",
        "status" : "passed",
        "time" : {
          "start" : 1626902937902,
          "stop" : 1626902946792,
          "duration" : 8890
        }
      }, {
        "uid" : "a130ed40a0c52b74",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/a130ed40a0c52b74",
        "status" : "passed",
        "time" : {
          "start" : 1626901989017,
          "stop" : 1626901996076,
          "duration" : 7059
        }
      }, {
        "uid" : "b3feb1b8ba730ac4",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/b3feb1b8ba730ac4",
        "status" : "passed",
        "time" : {
          "start" : 1626819252483,
          "stop" : 1626819259274,
          "duration" : 6791
        }
      }, {
        "uid" : "65ef80fe1325f5a4",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/65ef80fe1325f5a4",
        "status" : "passed",
        "time" : {
          "start" : 1626734523476,
          "stop" : 1626734530451,
          "duration" : 6975
        }
      }, {
        "uid" : "9a85fee9118825ce",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/9a85fee9118825ce",
        "status" : "passed",
        "time" : {
          "start" : 1626732933456,
          "stop" : 1626732939937,
          "duration" : 6481
        }
      }, {
        "uid" : "84d254a4a3cc4c44",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/84d254a4a3cc4c44",
        "status" : "passed",
        "time" : {
          "start" : 1626477267115,
          "stop" : 1626477274326,
          "duration" : 7211
        }
      }, {
        "uid" : "2327ab415ed99a10",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20377/report/#testresult/2327ab415ed99a10",
        "status" : "passed",
        "time" : {
          "start" : 1626396825289,
          "stop" : 1626396833873,
          "duration" : 8584
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "6519420447563698.json",
  "parameterValues" : [ ]
}