{
  "uid" : "a8a4c4091076e966",
  "name" : "MailChimp Block",
  "fullName" : "MailChimp Block",
  "historyId" : "1e0e5667b8c419e68fc1ae6a0d73dd61",
  "time" : {
    "start" : 1626253469798,
    "stop" : 1626253609579,
    "duration" : 139781
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a MailChimp block\",\n    async () => {\n      blockId = await blockEditor.insertBlock(\n        _mailchimp.default.name(),\n        _mailchimp.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\"Can connect to a MailChimp\", async () => {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that MailChimp block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a MailChimp block&quot;,\n    async () =&gt; {\n      blockId = await blockEditor.insertBlock(\n        _mailchimp.default.name(),\n        _mailchimp.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(&quot;Can connect to a MailChimp&quot;, async () =&gt; {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that MailChimp block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "Error",
  "statusTrace" : "ConnectionsPage is not available after 3rd attempt",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a MailChimp block\",\n    async () => {\n      blockId = await blockEditor.insertBlock(\n        _mailchimp.default.name(),\n        _mailchimp.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\"Can connect to a MailChimp\", async () => {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that MailChimp block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "broken",
    "statusMessage" : "Error",
    "statusTrace" : "ConnectionsPage is not available after 3rd attempt",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d80a6308fbd3e0c6",
      "name" : "Paid blocks - MailChimp Block",
      "source" : "d80a6308fbd3e0c6.png",
      "type" : "image/png",
      "size" : 42063
    }, {
      "uid" : "82b9f8b45e76fce9",
      "name" : "Paid blocks - MailChimp Block",
      "source" : "82b9f8b45e76fce9.png",
      "type" : "image/png",
      "size" : 15401
    }, {
      "uid" : "1b68a66d3f612f34",
      "name" : "1626253597456_Paid_blocks___MailChimp_Block.webm",
      "source" : "1b68a66d3f612f34.webm",
      "type" : "video/webm",
      "size" : 2206075
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 9,
        "unknown" : 0,
        "total" : 11
      },
      "items" : [ {
        "uid" : "abc2517387f402e0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20252/report/#testresult/abc2517387f402e0",
        "status" : "passed",
        "time" : {
          "start" : 1626251870668,
          "stop" : 1626251886110,
          "duration" : 15442
        }
      }, {
        "uid" : "cee039926a50384d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20252/report/#testresult/cee039926a50384d",
        "status" : "passed",
        "time" : {
          "start" : 1626134258704,
          "stop" : 1626134273827,
          "duration" : 15123
        }
      }, {
        "uid" : "dec0512d058925c6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20252/report/#testresult/dec0512d058925c6",
        "status" : "passed",
        "time" : {
          "start" : 1626132735394,
          "stop" : 1626132750565,
          "duration" : 15171
        }
      }, {
        "uid" : "4b8996efaaa699cb",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20252/report/#testresult/4b8996efaaa699cb",
        "status" : "passed",
        "time" : {
          "start" : 1626085032085,
          "stop" : 1626085047807,
          "duration" : 15722
        }
      }, {
        "uid" : "90ed6849086d14f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20252/report/#testresult/90ed6849086d14f",
        "status" : "passed",
        "time" : {
          "start" : 1626083875430,
          "stop" : 1626083890789,
          "duration" : 15359
        }
      }, {
        "uid" : "3127fce066fcaef0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20252/report/#testresult/3127fce066fcaef0",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1626055761095,
          "stop" : 1626055818136,
          "duration" : 57041
        }
      }, {
        "uid" : "b493245e91a2296d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20252/report/#testresult/b493245e91a2296d",
        "status" : "passed",
        "time" : {
          "start" : 1625803557932,
          "stop" : 1625803575761,
          "duration" : 17829
        }
      }, {
        "uid" : "ced4e88ef6d71fee",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20252/report/#testresult/ced4e88ef6d71fee",
        "status" : "passed",
        "time" : {
          "start" : 1625708585467,
          "stop" : 1625708601685,
          "duration" : 16218
        }
      }, {
        "uid" : "6d82e0c35aee5807",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20252/report/#testresult/6d82e0c35aee5807",
        "status" : "passed",
        "time" : {
          "start" : 1625630909178,
          "stop" : 1625630925305,
          "duration" : 16127
        }
      }, {
        "uid" : "bd169d9e01050839",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20252/report/#testresult/bd169d9e01050839",
        "status" : "passed",
        "time" : {
          "start" : 1625192408093,
          "stop" : 1625192425979,
          "duration" : 17886
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "a8a4c4091076e966.json",
  "parameterValues" : [ ]
}