{
  "uid" : "2638c9b15f7ab6fa",
  "name" : "Eventbrite block",
  "fullName" : "Eventbrite block",
  "historyId" : "0b4a15ebb314cfb213eb3e305bfce89d",
  "time" : {
    "start" : 1626253678123,
    "stop" : 1626253687144,
    "duration" : 9021
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const eventId = \"112691417062\";\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Eventbrite block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _eventbrite.default.name(),\n        _eventbrite.default.title()\n      );\n      const eventbriteBlock = new _eventbrite.default(blockId, page, eventId);\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post with a Eventbrite block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can assert that Eventbrite block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_eventbrite.default, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const eventId = &quot;112691417062&quot;;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a Eventbrite block&quot;,\n    async () =&gt; {\n      const blockId = await blockEditor.insertBlock(\n        _eventbrite.default.name(),\n        _eventbrite.default.title()\n      );\n      const eventbriteBlock = new _eventbrite.default(blockId, page, eventId);\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post with a Eventbrite block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can assert that Eventbrite block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_eventbrite.default, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 11,
        "unknown" : 0,
        "total" : 11
      },
      "items" : [ {
        "uid" : "846de5b864348f3c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20252/report/#testresult/846de5b864348f3c",
        "status" : "passed",
        "time" : {
          "start" : 1626251951708,
          "stop" : 1626251960720,
          "duration" : 9012
        }
      }, {
        "uid" : "65a16c89e3d155aa",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20252/report/#testresult/65a16c89e3d155aa",
        "status" : "passed",
        "time" : {
          "start" : 1626134340951,
          "stop" : 1626134349460,
          "duration" : 8509
        }
      }, {
        "uid" : "da4967b7c861a898",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20252/report/#testresult/da4967b7c861a898",
        "status" : "passed",
        "time" : {
          "start" : 1626132807627,
          "stop" : 1626132817065,
          "duration" : 9438
        }
      }, {
        "uid" : "3b47caa8480cfba",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20252/report/#testresult/3b47caa8480cfba",
        "status" : "passed",
        "time" : {
          "start" : 1626085114622,
          "stop" : 1626085123958,
          "duration" : 9336
        }
      }, {
        "uid" : "d2a530fa689ec1da",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20252/report/#testresult/d2a530fa689ec1da",
        "status" : "passed",
        "time" : {
          "start" : 1626083957599,
          "stop" : 1626083965962,
          "duration" : 8363
        }
      }, {
        "uid" : "931e50b9ad21b3ad",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20252/report/#testresult/931e50b9ad21b3ad",
        "status" : "passed",
        "time" : {
          "start" : 1626055883850,
          "stop" : 1626055891401,
          "duration" : 7551
        }
      }, {
        "uid" : "80932c991a4a7818",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20252/report/#testresult/80932c991a4a7818",
        "status" : "passed",
        "time" : {
          "start" : 1625803658497,
          "stop" : 1625803669200,
          "duration" : 10703
        }
      }, {
        "uid" : "c536113622b81a8a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20252/report/#testresult/c536113622b81a8a",
        "status" : "passed",
        "time" : {
          "start" : 1625708669987,
          "stop" : 1625708678791,
          "duration" : 8804
        }
      }, {
        "uid" : "a733a9a39d76d943",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20252/report/#testresult/a733a9a39d76d943",
        "status" : "passed",
        "time" : {
          "start" : 1625630994605,
          "stop" : 1625631002703,
          "duration" : 8098
        }
      }, {
        "uid" : "f9717dc612c1bef2",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20252/report/#testresult/f9717dc612c1bef2",
        "status" : "passed",
        "time" : {
          "start" : 1625192501871,
          "stop" : 1625192511029,
          "duration" : 9158
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "2638c9b15f7ab6fa.json",
  "parameterValues" : [ ]
}