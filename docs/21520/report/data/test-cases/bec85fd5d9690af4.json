{
  "uid" : "bec85fd5d9690af4",
  "name" : "Pay with PayPal",
  "fullName" : "Pay with PayPal",
  "historyId" : "2b956f1af1e91da7ea3b442b8c2cddca",
  "time" : {
    "start" : 1636044273371,
    "stop" : 1636044273405,
    "duration" : 34
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _reporters.testStep)(\"Add a Pay with PayPal block\", async () => {\n    blockId = await blockEditor.insertBlock(\n      _wpAdmin.SimplePaymentBlock.name(),\n      _wpAdmin.SimplePaymentBlock.title()\n    );\n  });\n  await (0, _reporters.testStep)(\n    \"Fill details of Pay with PayPal block\",\n    async () => {\n      const spBlock = new _wpAdmin.SimplePaymentBlock(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _reporters.testStep)(\n    \"Publish a post and assert that Pay with PayPal block is rendered\",\n    async () => {\n      await blockEditor.setTitle(\"Pay with PayPal block\");\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _pages.PostFrontendPage.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wpAdmin.SimplePaymentBlock)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _reporters.testStep)(&quot;Add a Pay with PayPal block&quot;, async () =&gt; {\n    blockId = await blockEditor.insertBlock(\n      _wpAdmin.SimplePaymentBlock.name(),\n      _wpAdmin.SimplePaymentBlock.title()\n    );\n  });\n  await (0, _reporters.testStep)(\n    &quot;Fill details of Pay with PayPal block&quot;,\n    async () =&gt; {\n      const spBlock = new _wpAdmin.SimplePaymentBlock(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _reporters.testStep)(\n    &quot;Publish a post and assert that Pay with PayPal block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.setTitle(&quot;Pay with PayPal block&quot;);\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _pages.PostFrontendPage.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wpAdmin.SimplePaymentBlock)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "TimeoutError",
  "statusTrace" : "page.click: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"a[href*='my-plan'] span\"\n============================================================",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : true,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "broken",
    "statusMessage" : "TimeoutError",
    "statusTrace" : "page.click: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"a[href*='my-plan'] span\"\n============================================================",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "e83316df4c9aa7cf",
      "name" : "beforeAll - Paid blocks",
      "source" : "e83316df4c9aa7cf.png",
      "type" : "image/png",
      "size" : 291088
    }, {
      "uid" : "91dcfbdb93ff69",
      "name" : "1636044268508_beforeAll___Paid_blocks.webm",
      "source" : "91dcfbdb93ff69.webm",
      "type" : "video/webm",
      "size" : 901440
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Timeout waiting for selector",
      "traceRegex" : ".*waiting for selector.*",
      "matchedStatuses" : [ "failed", "broken" ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 5,
        "unknown" : 0,
        "total" : 6
      },
      "items" : [ {
        "uid" : "99084dd3b1cef77",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21520/report/#testresult/99084dd3b1cef77",
        "status" : "passed",
        "time" : {
          "start" : 1635805734931,
          "stop" : 1635805742324,
          "duration" : 7393
        }
      }, {
        "uid" : "72e727b4306f2911",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21520/report/#testresult/72e727b4306f2911",
        "status" : "passed",
        "time" : {
          "start" : 1635504871205,
          "stop" : 1635504878756,
          "duration" : 7551
        }
      }, {
        "uid" : "e3021e1b00ce5df",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21520/report/#testresult/e3021e1b00ce5df",
        "status" : "passed",
        "time" : {
          "start" : 1635502017821,
          "stop" : 1635502023238,
          "duration" : 5417
        }
      }, {
        "uid" : "d7cc4aaeec80286c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21520/report/#testresult/d7cc4aaeec80286c",
        "status" : "passed",
        "time" : {
          "start" : 1635501293184,
          "stop" : 1635501299979,
          "duration" : 6795
        }
      }, {
        "uid" : "6ecd3c19281a62e6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21520/report/#testresult/6ecd3c19281a62e6",
        "status" : "passed",
        "time" : {
          "start" : 1635162538149,
          "stop" : 1635162543328,
          "duration" : 5179
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "bec85fd5d9690af4.json",
  "parameterValues" : [ ]
}