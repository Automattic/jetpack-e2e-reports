{
  "uid" : "cd9d6727e7b41124",
  "name" : "Eventbrite block",
  "fullName" : "Eventbrite block",
  "historyId" : "0b4a15ebb314cfb213eb3e305bfce89d",
  "time" : {
    "start" : 1627078546665,
    "stop" : 1627078555611,
    "duration" : 8946
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const eventId = \"112691417062\";\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Eventbrite block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _eventbrite.default.name(),\n        _eventbrite.default.title()\n      );\n      const eventbriteBlock = new _eventbrite.default(blockId, page, eventId);\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post with a Eventbrite block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can assert that Eventbrite block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_eventbrite.default, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const eventId = &quot;112691417062&quot;;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a Eventbrite block&quot;,\n    async () =&gt; {\n      const blockId = await blockEditor.insertBlock(\n        _eventbrite.default.name(),\n        _eventbrite.default.title()\n      );\n      const eventbriteBlock = new _eventbrite.default(blockId, page, eventId);\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post with a Eventbrite block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can assert that Eventbrite block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_eventbrite.default, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 8,
        "unknown" : 0,
        "total" : 8
      },
      "items" : [ {
        "uid" : "cc9801f24e014dbb",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20227/report/#testresult/cc9801f24e014dbb",
        "status" : "passed",
        "time" : {
          "start" : 1627012634361,
          "stop" : 1627012644476,
          "duration" : 10115
        }
      }, {
        "uid" : "a34c66e862ff8751",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20227/report/#testresult/a34c66e862ff8751",
        "status" : "passed",
        "time" : {
          "start" : 1626985790479,
          "stop" : 1626985801250,
          "duration" : 10771
        }
      }, {
        "uid" : "964c864a77407942",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20227/report/#testresult/964c864a77407942",
        "status" : "passed",
        "time" : {
          "start" : 1626381680762,
          "stop" : 1626381691315,
          "duration" : 10553
        }
      }, {
        "uid" : "5a83d48b06dac7b8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20227/report/#testresult/5a83d48b06dac7b8",
        "status" : "passed",
        "time" : {
          "start" : 1626380370525,
          "stop" : 1626380380339,
          "duration" : 9814
        }
      }, {
        "uid" : "ad3ce55c9aa46624",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20227/report/#testresult/ad3ce55c9aa46624",
        "status" : "passed",
        "time" : {
          "start" : 1625452306995,
          "stop" : 1625452318129,
          "duration" : 11134
        }
      }, {
        "uid" : "f10eefc6128a5ff9",
        "status" : "passed",
        "time" : {
          "start" : 1625122569260,
          "stop" : 1625122578364,
          "duration" : 9104
        }
      }, {
        "uid" : "df04ab31d730a52d",
        "status" : "passed",
        "time" : {
          "start" : 1625035243120,
          "stop" : 1625035256074,
          "duration" : 12954
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "cd9d6727e7b41124.json",
  "parameterValues" : [ ]
}