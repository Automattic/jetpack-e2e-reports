{
  "uid" : "96710f1f3ae1ce8d",
  "name" : "Recommendations (Jetpack Assistant)",
  "fullName" : "Recommendations (Jetpack Assistant)",
  "historyId" : "6acbca09fe63fb0db4bf908821bc38aa",
  "time" : {
    "start" : 1631622545347,
    "stop" : 1631622583260,
    "duration" : 37913
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let recommendationsPage;\n  await (0, _reporter.testStep)(\n    \"Navigate to the Recommendations module\",\n    async () => {\n      recommendationsPage = await _recommendations.default.visit(page);\n      const isPageVisible =\n        await recommendationsPage.areSiteTypeQuestionsVisible();\n\n      expect(isPageVisible).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"site-type\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Check Personal and Other checkboxes\",\n    async () => {\n      await recommendationsPage.checkPersonalSiteType();\n      await recommendationsPage.checkOtherSiteType();\n      expect(\n        await recommendationsPage.isPersonalSiteTypeChecked()\n      ).toBeTruthy();\n      expect(await recommendationsPage.isOtherSiteTypeChecked()).toBeTruthy();\n      expect(await recommendationsPage.isBusinessTypeUnchecked()).toBeFalsy();\n      expect(await recommendationsPage.isStoreTypeUnchecked()).toBeFalsy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Save answers and continue to the Monitor step\",\n    async () => {\n      await recommendationsPage.saveSiteTypeAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isMonitorStep =\n        await recommendationsPage.isEnableMonitoringButtonVisible();\n      expect(isMonitorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"monitor\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Enable Monitoring and continue to Related Post step\",\n    async () => {\n      await recommendationsPage.enableMonitoringAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isRelatedPostsStep =\n        await recommendationsPage.isEnableRelatedPostsButtonVisible();\n      expect(isRelatedPostsStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"related-posts\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Enable Related Posts and continue to Creative Mail step\",\n    async () => {\n      await recommendationsPage.enableRelatedPostsAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isCreativeMailStep =\n        await recommendationsPage.isInstallCreativeMailButtonVisible();\n      expect(isCreativeMailStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"creative-mail\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Skip Creative Mail and continue to Site Accelerator\",\n    async () => {\n      await recommendationsPage.skipCreativeMailAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSiteAcceleratorStep =\n        await recommendationsPage.isEnableSiteAcceleratorButtonVisible();\n      expect(isSiteAcceleratorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"site-accelerator\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Skip Site Accelerator and continue to Summary\",\n    async () => {\n      await recommendationsPage.skipSiteAcceleratorAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSummaryContent =\n        await recommendationsPage.isSummaryContentVisible();\n      const isSummarySidebar =\n        await recommendationsPage.isSummarySidebarVisible();\n      expect(isSummaryContent && isSummarySidebar).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"summary\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Verify Monitoring and Related Posts are enabled\",\n    async () => {\n      const isMonitoringFeatureEnabled =\n        await recommendationsPage.isMonitoringFeatureEnabled();\n      const isRelatedPostsFeatureEnabled =\n        await recommendationsPage.isRelatedPostsFeatureEnabled();\n      expect(\n        isMonitoringFeatureEnabled && isRelatedPostsFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Verify Creative Mail and Site Accelerator are disabled\",\n    async () => {\n      const isCreativeMailFeatureEnabled =\n        await recommendationsPage.isCreativeMailFeatureEnabled();\n      const isSiteAcceleratorFeatureEnabled =\n        await recommendationsPage.isSiteAcceleratorFeatureEnabled();\n      expect(\n        isCreativeMailFeatureEnabled && isSiteAcceleratorFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let recommendationsPage;\n  await (0, _reporter.testStep)(\n    &quot;Navigate to the Recommendations module&quot;,\n    async () =&gt; {\n      recommendationsPage = await _recommendations.default.visit(page);\n      const isPageVisible =\n        await recommendationsPage.areSiteTypeQuestionsVisible();\n\n      expect(isPageVisible).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;site-type&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Check Personal and Other checkboxes&quot;,\n    async () =&gt; {\n      await recommendationsPage.checkPersonalSiteType();\n      await recommendationsPage.checkOtherSiteType();\n      expect(\n        await recommendationsPage.isPersonalSiteTypeChecked()\n      ).toBeTruthy();\n      expect(await recommendationsPage.isOtherSiteTypeChecked()).toBeTruthy();\n      expect(await recommendationsPage.isBusinessTypeUnchecked()).toBeFalsy();\n      expect(await recommendationsPage.isStoreTypeUnchecked()).toBeFalsy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Save answers and continue to the Monitor step&quot;,\n    async () =&gt; {\n      await recommendationsPage.saveSiteTypeAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isMonitorStep =\n        await recommendationsPage.isEnableMonitoringButtonVisible();\n      expect(isMonitorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;monitor&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Enable Monitoring and continue to Related Post step&quot;,\n    async () =&gt; {\n      await recommendationsPage.enableMonitoringAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isRelatedPostsStep =\n        await recommendationsPage.isEnableRelatedPostsButtonVisible();\n      expect(isRelatedPostsStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;related-posts&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Enable Related Posts and continue to Creative Mail step&quot;,\n    async () =&gt; {\n      await recommendationsPage.enableRelatedPostsAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isCreativeMailStep =\n        await recommendationsPage.isInstallCreativeMailButtonVisible();\n      expect(isCreativeMailStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;creative-mail&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Skip Creative Mail and continue to Site Accelerator&quot;,\n    async () =&gt; {\n      await recommendationsPage.skipCreativeMailAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSiteAcceleratorStep =\n        await recommendationsPage.isEnableSiteAcceleratorButtonVisible();\n      expect(isSiteAcceleratorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;site-accelerator&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Skip Site Accelerator and continue to Summary&quot;,\n    async () =&gt; {\n      await recommendationsPage.skipSiteAcceleratorAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSummaryContent =\n        await recommendationsPage.isSummaryContentVisible();\n      const isSummarySidebar =\n        await recommendationsPage.isSummarySidebarVisible();\n      expect(isSummaryContent &amp;&amp; isSummarySidebar).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;summary&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Verify Monitoring and Related Posts are enabled&quot;,\n    async () =&gt; {\n      const isMonitoringFeatureEnabled =\n        await recommendationsPage.isMonitoringFeatureEnabled();\n      const isRelatedPostsFeatureEnabled =\n        await recommendationsPage.isRelatedPostsFeatureEnabled();\n      expect(\n        isMonitoringFeatureEnabled &amp;&amp; isRelatedPostsFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Verify Creative Mail and Site Accelerator are disabled&quot;,\n    async () =&gt; {\n      const isCreativeMailFeatureEnabled =\n        await recommendationsPage.isCreativeMailFeatureEnabled();\n      const isSiteAcceleratorFeatureEnabled =\n        await recommendationsPage.isSiteAcceleratorFeatureEnabled();\n      expect(\n        isCreativeMailFeatureEnabled &amp;&amp; isSiteAcceleratorFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "TimeoutError",
  "statusTrace" : "page.click: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"a[href*=\"recommendations/monitor\"] >> text=\"Continue\"\"\n============================================================\nNote: use DEBUG=pw:api environment variable to capture Playwright logs.",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  let recommendationsPage;\n  await (0, _reporter.testStep)(\n    \"Navigate to the Recommendations module\",\n    async () => {\n      recommendationsPage = await _recommendations.default.visit(page);\n      const isPageVisible =\n        await recommendationsPage.areSiteTypeQuestionsVisible();\n\n      expect(isPageVisible).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"site-type\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Check Personal and Other checkboxes\",\n    async () => {\n      await recommendationsPage.checkPersonalSiteType();\n      await recommendationsPage.checkOtherSiteType();\n      expect(\n        await recommendationsPage.isPersonalSiteTypeChecked()\n      ).toBeTruthy();\n      expect(await recommendationsPage.isOtherSiteTypeChecked()).toBeTruthy();\n      expect(await recommendationsPage.isBusinessTypeUnchecked()).toBeFalsy();\n      expect(await recommendationsPage.isStoreTypeUnchecked()).toBeFalsy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Save answers and continue to the Monitor step\",\n    async () => {\n      await recommendationsPage.saveSiteTypeAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isMonitorStep =\n        await recommendationsPage.isEnableMonitoringButtonVisible();\n      expect(isMonitorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"monitor\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Enable Monitoring and continue to Related Post step\",\n    async () => {\n      await recommendationsPage.enableMonitoringAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isRelatedPostsStep =\n        await recommendationsPage.isEnableRelatedPostsButtonVisible();\n      expect(isRelatedPostsStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"related-posts\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Enable Related Posts and continue to Creative Mail step\",\n    async () => {\n      await recommendationsPage.enableRelatedPostsAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isCreativeMailStep =\n        await recommendationsPage.isInstallCreativeMailButtonVisible();\n      expect(isCreativeMailStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"creative-mail\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Skip Creative Mail and continue to Site Accelerator\",\n    async () => {\n      await recommendationsPage.skipCreativeMailAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSiteAcceleratorStep =\n        await recommendationsPage.isEnableSiteAcceleratorButtonVisible();\n      expect(isSiteAcceleratorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"site-accelerator\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Skip Site Accelerator and continue to Summary\",\n    async () => {\n      await recommendationsPage.skipSiteAcceleratorAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSummaryContent =\n        await recommendationsPage.isSummaryContentVisible();\n      const isSummarySidebar =\n        await recommendationsPage.isSummarySidebarVisible();\n      expect(isSummaryContent && isSummarySidebar).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"summary\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Verify Monitoring and Related Posts are enabled\",\n    async () => {\n      const isMonitoringFeatureEnabled =\n        await recommendationsPage.isMonitoringFeatureEnabled();\n      const isRelatedPostsFeatureEnabled =\n        await recommendationsPage.isRelatedPostsFeatureEnabled();\n      expect(\n        isMonitoringFeatureEnabled && isRelatedPostsFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Verify Creative Mail and Site Accelerator are disabled\",\n    async () => {\n      const isCreativeMailFeatureEnabled =\n        await recommendationsPage.isCreativeMailFeatureEnabled();\n      const isSiteAcceleratorFeatureEnabled =\n        await recommendationsPage.isSiteAcceleratorFeatureEnabled();\n      expect(\n        isCreativeMailFeatureEnabled && isSiteAcceleratorFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "broken",
    "statusMessage" : "TimeoutError",
    "statusTrace" : "page.click: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"a[href*=\"recommendations/monitor\"] >> text=\"Continue\"\"\n============================================================\nNote: use DEBUG=pw:api environment variable to capture Playwright logs.",
    "steps" : [ {
      "name" : "Navigate to the Recommendations module",
      "time" : {
        "start" : 1631622545418,
        "stop" : 1631622548092,
        "duration" : 2674
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Check Personal and Other checkboxes",
      "time" : {
        "start" : 1631622548093,
        "stop" : 1631622548319,
        "duration" : 226
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Save answers and continue to the Monitor step",
      "time" : {
        "start" : 1631622548320,
        "stop" : 1631622578325,
        "duration" : 30005
      },
      "status" : "failed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ {
      "uid" : "558a4966b3258450",
      "name" : "Recommendations (Jetpack Assistant) - Recommendations (Jetpack Assistant)",
      "source" : "558a4966b3258450.png",
      "type" : "image/png",
      "size" : 175130
    }, {
      "uid" : "92494d86942a0a89",
      "name" : "1631622578713_Recommendations__Jetpack_Assistant____Recommendations__Jetpack_Assistant_.webm",
      "source" : "92494d86942a0a89.webm",
      "type" : "video/webm",
      "size" : 1009974
    } ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "recommendations.test.js"
  }, {
    "name" : "tag",
    "value" : "Jetpack version: [object Promise]"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 18,
        "unknown" : 0,
        "total" : 19
      },
      "items" : [ {
        "uid" : "8083afbb3d8c0bff",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20764/report/#testresult/8083afbb3d8c0bff",
        "status" : "passed",
        "time" : {
          "start" : 1631603797707,
          "stop" : 1631603818614,
          "duration" : 20907
        }
      }, {
        "uid" : "1a2f5bc19250a23b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20764/report/#testresult/1a2f5bc19250a23b",
        "status" : "passed",
        "time" : {
          "start" : 1631598819807,
          "stop" : 1631598834347,
          "duration" : 14540
        }
      }, {
        "uid" : "6d47e18e613c1848",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20764/report/#testresult/6d47e18e613c1848",
        "status" : "passed",
        "time" : {
          "start" : 1631590648391,
          "stop" : 1631590669813,
          "duration" : 21422
        }
      }, {
        "uid" : "fdbff893c52f4054",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20764/report/#testresult/fdbff893c52f4054",
        "status" : "passed",
        "time" : {
          "start" : 1630983478176,
          "stop" : 1630983495665,
          "duration" : 17489
        }
      }, {
        "uid" : "345e7bc14d3420d6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20764/report/#testresult/345e7bc14d3420d6",
        "status" : "passed",
        "time" : {
          "start" : 1630982284712,
          "stop" : 1630982301923,
          "duration" : 17211
        }
      }, {
        "uid" : "2500911a91c3b0ef",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20764/report/#testresult/2500911a91c3b0ef",
        "status" : "passed",
        "time" : {
          "start" : 1630649947145,
          "stop" : 1630649966799,
          "duration" : 19654
        }
      }, {
        "uid" : "e725e82d2b561bb0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20764/report/#testresult/e725e82d2b561bb0",
        "status" : "passed",
        "time" : {
          "start" : 1630591458943,
          "stop" : 1630591481502,
          "duration" : 22559
        }
      }, {
        "uid" : "3441bd05d1050673",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20764/report/#testresult/3441bd05d1050673",
        "status" : "passed",
        "time" : {
          "start" : 1630378869477,
          "stop" : 1630378887426,
          "duration" : 17949
        }
      }, {
        "uid" : "ae21c306f6b3b2f5",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20764/report/#testresult/ae21c306f6b3b2f5",
        "status" : "passed",
        "time" : {
          "start" : 1630378037306,
          "stop" : 1630378057955,
          "duration" : 20649
        }
      }, {
        "uid" : "63d95509387ad1c5",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20764/report/#testresult/63d95509387ad1c5",
        "status" : "passed",
        "time" : {
          "start" : 1630376067447,
          "stop" : 1630376086580,
          "duration" : 19133
        }
      }, {
        "uid" : "6c593062a1697834",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20764/report/#testresult/6c593062a1697834",
        "status" : "passed",
        "time" : {
          "start" : 1630069976680,
          "stop" : 1630069993434,
          "duration" : 16754
        }
      }, {
        "uid" : "b8814c61111b5727",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20764/report/#testresult/b8814c61111b5727",
        "status" : "passed",
        "time" : {
          "start" : 1630068435276,
          "stop" : 1630068454334,
          "duration" : 19058
        }
      }, {
        "uid" : "1f65f166bda1e15d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20764/report/#testresult/1f65f166bda1e15d",
        "status" : "passed",
        "time" : {
          "start" : 1630066866137,
          "stop" : 1630066880282,
          "duration" : 14145
        }
      }, {
        "uid" : "3fe881b09c6a264",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20764/report/#testresult/3fe881b09c6a264",
        "status" : "passed",
        "time" : {
          "start" : 1629812008880,
          "stop" : 1629812027589,
          "duration" : 18709
        }
      }, {
        "uid" : "df1f69822b6a1fd7",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20764/report/#testresult/df1f69822b6a1fd7",
        "status" : "passed",
        "time" : {
          "start" : 1629438463173,
          "stop" : 1629438479333,
          "duration" : 16160
        }
      }, {
        "uid" : "4cddad2962c4bcc8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20764/report/#testresult/4cddad2962c4bcc8",
        "status" : "passed",
        "time" : {
          "start" : 1629431048879,
          "stop" : 1629431063068,
          "duration" : 14189
        }
      }, {
        "uid" : "93f828f6a4638d35",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20764/report/#testresult/93f828f6a4638d35",
        "status" : "passed",
        "time" : {
          "start" : 1629428898767,
          "stop" : 1629428918917,
          "duration" : 20150
        }
      }, {
        "uid" : "af0b3f950fc97969",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20764/report/#testresult/af0b3f950fc97969",
        "status" : "passed",
        "time" : {
          "start" : 1629381879408,
          "stop" : 1629381896445,
          "duration" : 17037
        }
      } ]
    },
    "tags" : [ "Jetpack version: [object Promise]" ]
  },
  "source" : "96710f1f3ae1ce8d.json",
  "parameterValues" : [ ]
}