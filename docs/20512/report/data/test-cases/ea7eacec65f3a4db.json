{
  "uid" : "ea7eacec65f3a4db",
  "name" : "MailChimp Block",
  "fullName" : "MailChimp Block",
  "historyId" : "1e0e5667b8c419e68fc1ae6a0d73dd61",
  "time" : {
    "start" : 1627705076668,
    "stop" : 1627705221301,
    "duration" : 144633
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a MailChimp block\",\n    async () => {\n      blockId = await blockEditor.insertBlock(\n        _mailchimp.default.name(),\n        _mailchimp.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\"Can connect to a MailChimp\", async () => {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that MailChimp block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a MailChimp block&quot;,\n    async () =&gt; {\n      blockId = await blockEditor.insertBlock(\n        _mailchimp.default.name(),\n        _mailchimp.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(&quot;Can connect to a MailChimp&quot;, async () =&gt; {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that MailChimp block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "Error",
  "statusTrace" : "ConnectionsPage is not available after 3rd attempt",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a MailChimp block\",\n    async () => {\n      blockId = await blockEditor.insertBlock(\n        _mailchimp.default.name(),\n        _mailchimp.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\"Can connect to a MailChimp\", async () => {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that MailChimp block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "broken",
    "statusMessage" : "Error",
    "statusTrace" : "ConnectionsPage is not available after 3rd attempt",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "e63d94cd0fc92a9b",
      "name" : "Paid blocks - MailChimp Block",
      "source" : "e63d94cd0fc92a9b.png",
      "type" : "image/png",
      "size" : 42050
    }, {
      "uid" : "a4ad254a6d330029",
      "name" : "Paid blocks - MailChimp Block",
      "source" : "a4ad254a6d330029.png",
      "type" : "image/png",
      "size" : 15666
    }, {
      "uid" : "4c409bcb2f9060eb",
      "name" : "1627705205782_Paid_blocks___MailChimp_Block.webm",
      "source" : "4c409bcb2f9060eb.webm",
      "type" : "video/webm",
      "size" : 2215343
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 9,
        "unknown" : 0,
        "total" : 12
      },
      "items" : [ {
        "uid" : "dec16c86cefb8419",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/dec16c86cefb8419",
        "status" : "passed",
        "time" : {
          "start" : 1627704005792,
          "stop" : 1627704019582,
          "duration" : 13790
        }
      }, {
        "uid" : "6655ae3ca669b141",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/6655ae3ca669b141",
        "status" : "passed",
        "time" : {
          "start" : 1627703312460,
          "stop" : 1627703330099,
          "duration" : 17639
        }
      }, {
        "uid" : "3a6ec6e89bd22d99",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/3a6ec6e89bd22d99",
        "status" : "passed",
        "time" : {
          "start" : 1627702142767,
          "stop" : 1627702158345,
          "duration" : 15578
        }
      }, {
        "uid" : "2257984d1f02ff80",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/2257984d1f02ff80",
        "status" : "passed",
        "time" : {
          "start" : 1627700274712,
          "stop" : 1627700290677,
          "duration" : 15965
        }
      }, {
        "uid" : "8ab2d4df1e1aa31",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/8ab2d4df1e1aa31",
        "status" : "passed",
        "time" : {
          "start" : 1627698721205,
          "stop" : 1627698738856,
          "duration" : 17651
        }
      }, {
        "uid" : "f0084c1e123dea0d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/f0084c1e123dea0d",
        "status" : "passed",
        "time" : {
          "start" : 1627696860725,
          "stop" : 1627696878939,
          "duration" : 18214
        }
      }, {
        "uid" : "7ac586ea8f32d771",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/7ac586ea8f32d771",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1627681344975,
          "stop" : 1627681407743,
          "duration" : 62768
        }
      }, {
        "uid" : "697defb9f1848921",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/697defb9f1848921",
        "status" : "passed",
        "time" : {
          "start" : 1627679373543,
          "stop" : 1627679391591,
          "duration" : 18048
        }
      }, {
        "uid" : "af20f2386b25cc76",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/af20f2386b25cc76",
        "status" : "passed",
        "time" : {
          "start" : 1627678171063,
          "stop" : 1627678185547,
          "duration" : 14484
        }
      }, {
        "uid" : "bd1b94f70ee97824",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/bd1b94f70ee97824",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1627676217335,
          "stop" : 1627676273769,
          "duration" : 56434
        }
      }, {
        "uid" : "72401885065354b8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/72401885065354b8",
        "status" : "passed",
        "time" : {
          "start" : 1627675517517,
          "stop" : 1627675537550,
          "duration" : 20033
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "ea7eacec65f3a4db.json",
  "parameterValues" : [ ]
}