{
  "uid" : "b71a6f44688c6b7",
  "name" : "WordAds block",
  "fullName" : "WordAds block",
  "historyId" : "18efccdb8f3fb33e445e77a8ef2cffa3",
  "time" : {
    "start" : 1627708535153,
    "stop" : 1627708542694,
    "duration" : 7541
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a WordAds block\",\n    async () => {\n      await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n      blockId = await blockEditor.insertBlock(\n        _wordAds.default.name(),\n        _wordAds.default.title()\n      );\n      await blockEditor.selectPostTitle();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can switch to Wide Skyscraper ad format\",\n    async () => {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that WordAds block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a WordAds block&quot;,\n    async () =&gt; {\n      await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n      blockId = await blockEditor.insertBlock(\n        _wordAds.default.name(),\n        _wordAds.default.title()\n      );\n      await blockEditor.selectPostTitle();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can switch to Wide Skyscraper ad format&quot;,\n    async () =&gt; {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that WordAds block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 14,
        "unknown" : 0,
        "total" : 14
      },
      "items" : [ {
        "uid" : "dda63f72b8e64873",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/dda63f72b8e64873",
        "status" : "passed",
        "time" : {
          "start" : 1627707801113,
          "stop" : 1627707805915,
          "duration" : 4802
        }
      }, {
        "uid" : "39ade8806cbccaa2",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/39ade8806cbccaa2",
        "status" : "passed",
        "time" : {
          "start" : 1627705242122,
          "stop" : 1627705248280,
          "duration" : 6158
        }
      }, {
        "uid" : "bcced4f0c207f85d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/bcced4f0c207f85d",
        "status" : "passed",
        "time" : {
          "start" : 1627704032113,
          "stop" : 1627704036421,
          "duration" : 4308
        }
      }, {
        "uid" : "f9ce7b1f518bf636",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/f9ce7b1f518bf636",
        "status" : "passed",
        "time" : {
          "start" : 1627703348487,
          "stop" : 1627703354822,
          "duration" : 6335
        }
      }, {
        "uid" : "1ffb28999743cf21",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/1ffb28999743cf21",
        "status" : "passed",
        "time" : {
          "start" : 1627702172328,
          "stop" : 1627702177221,
          "duration" : 4893
        }
      }, {
        "uid" : "e5566b306a6a8f5c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/e5566b306a6a8f5c",
        "status" : "passed",
        "time" : {
          "start" : 1627700305608,
          "stop" : 1627700310828,
          "duration" : 5220
        }
      }, {
        "uid" : "c70a79a4bc5da40",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/c70a79a4bc5da40",
        "status" : "passed",
        "time" : {
          "start" : 1627698754548,
          "stop" : 1627698760397,
          "duration" : 5849
        }
      }, {
        "uid" : "7ef6719b9f0ddf8b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/7ef6719b9f0ddf8b",
        "status" : "passed",
        "time" : {
          "start" : 1627696897618,
          "stop" : 1627696904195,
          "duration" : 6577
        }
      }, {
        "uid" : "a10d710661c3f1d5",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/a10d710661c3f1d5",
        "status" : "passed",
        "time" : {
          "start" : 1627681429406,
          "stop" : 1627681436206,
          "duration" : 6800
        }
      }, {
        "uid" : "b4b306149278306e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/b4b306149278306e",
        "status" : "passed",
        "time" : {
          "start" : 1627679420299,
          "stop" : 1627679426711,
          "duration" : 6412
        }
      }, {
        "uid" : "d9ce143310d88920",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/d9ce143310d88920",
        "status" : "passed",
        "time" : {
          "start" : 1627678197826,
          "stop" : 1627678202657,
          "duration" : 4831
        }
      }, {
        "uid" : "6563606c7e52db72",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/6563606c7e52db72",
        "status" : "passed",
        "time" : {
          "start" : 1627676288149,
          "stop" : 1627676292420,
          "duration" : 4271
        }
      }, {
        "uid" : "835d86d083194d28",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/835d86d083194d28",
        "status" : "passed",
        "time" : {
          "start" : 1627675552577,
          "stop" : 1627675564522,
          "duration" : 11945
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "b71a6f44688c6b7.json",
  "parameterValues" : [ ]
}