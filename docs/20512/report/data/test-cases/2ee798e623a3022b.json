{
  "uid" : "2ee798e623a3022b",
  "name" : "Pinterest block",
  "fullName" : "Pinterest block",
  "historyId" : "bf919c5c1253559f0d007402decf47af",
  "time" : {
    "start" : 1627704069238,
    "stop" : 1627704075903,
    "duration" : 6665
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pinterest block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _pinterest.default.name(),\n        _pinterest.default.title()\n      );\n      const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n      await pinterestBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const pinId = _config.default.get(&quot;blocks.pinterest.pinId&quot;);\n\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a Pinterest block&quot;,\n    async () =&gt; {\n      const blockId = await blockEditor.insertBlock(\n        _pinterest.default.name(),\n        _pinterest.default.title()\n      );\n      const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n      await pinterestBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post with a Pinterest block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can assert that Pinterest block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 11,
        "unknown" : 0,
        "total" : 11
      },
      "items" : [ {
        "uid" : "9131ec390a26fa4",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/9131ec390a26fa4",
        "status" : "passed",
        "time" : {
          "start" : 1627703396635,
          "stop" : 1627703403932,
          "duration" : 7297
        }
      }, {
        "uid" : "838d226999fbef2",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/838d226999fbef2",
        "status" : "passed",
        "time" : {
          "start" : 1627702215849,
          "stop" : 1627702222381,
          "duration" : 6532
        }
      }, {
        "uid" : "cad151481affcc40",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/cad151481affcc40",
        "status" : "passed",
        "time" : {
          "start" : 1627700349441,
          "stop" : 1627700356374,
          "duration" : 6933
        }
      }, {
        "uid" : "6f293b3f0caf48df",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/6f293b3f0caf48df",
        "status" : "passed",
        "time" : {
          "start" : 1627698801741,
          "stop" : 1627698807352,
          "duration" : 5611
        }
      }, {
        "uid" : "6218622140b48059",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/6218622140b48059",
        "status" : "passed",
        "time" : {
          "start" : 1627696945496,
          "stop" : 1627696952992,
          "duration" : 7496
        }
      }, {
        "uid" : "198bb278529949c0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/198bb278529949c0",
        "status" : "passed",
        "time" : {
          "start" : 1627681489087,
          "stop" : 1627681497314,
          "duration" : 8227
        }
      }, {
        "uid" : "5ee8f1e40822a3b6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/5ee8f1e40822a3b6",
        "status" : "passed",
        "time" : {
          "start" : 1627679473621,
          "stop" : 1627679483171,
          "duration" : 9550
        }
      }, {
        "uid" : "71c148c54ead36e4",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/71c148c54ead36e4",
        "status" : "passed",
        "time" : {
          "start" : 1627678235583,
          "stop" : 1627678241752,
          "duration" : 6169
        }
      }, {
        "uid" : "539703a024517c3e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/539703a024517c3e",
        "status" : "passed",
        "time" : {
          "start" : 1627676329848,
          "stop" : 1627676335271,
          "duration" : 5423
        }
      }, {
        "uid" : "e67680170223d84a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20512/report/#testresult/e67680170223d84a",
        "status" : "passed",
        "time" : {
          "start" : 1627675605055,
          "stop" : 1627675614073,
          "duration" : 9018
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "2ee798e623a3022b.json",
  "parameterValues" : [ ]
}