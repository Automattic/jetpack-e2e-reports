{
  "uid" : "a6ffdededee70af",
  "name" : "WordAds block",
  "fullName" : "WordAds block",
  "historyId" : "18efccdb8f3fb33e445e77a8ef2cffa3",
  "time" : {
    "start" : 1629750138956,
    "stop" : 1629750152737,
    "duration" : 13781
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _prerequisites.prerequisitesBuilder)()\n    .withActiveModules([\"wordads\"])\n    .build();\n  let blockId;\n  await (0, _reporter.testStep)(\"Add a WordAds block\", async () => {\n    await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n    blockId = await blockEditor.insertBlock(\n      _wordAds.default.name(),\n      _wordAds.default.title()\n    );\n    await blockEditor.selectPostTitle();\n  });\n  await (0, _reporter.testStep)(\n    \"Switch to Wide Skyscraper ad format\",\n    async () => {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Publish a post and assert that WordAds block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  await (0, _prerequisites.prerequisitesBuilder)()\n    .withActiveModules([&quot;wordads&quot;])\n    .build();\n  let blockId;\n  await (0, _reporter.testStep)(&quot;Add a WordAds block&quot;, async () =&gt; {\n    await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n    blockId = await blockEditor.insertBlock(\n      _wordAds.default.name(),\n      _wordAds.default.title()\n    );\n    await blockEditor.selectPostTitle();\n  });\n  await (0, _reporter.testStep)(\n    &quot;Switch to Wide Skyscraper ad format&quot;,\n    async () =&gt; {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Publish a post and assert that WordAds block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1629750103960,
        "stop" : 1629750109811,
        "duration" : 5851
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1629750126944,
        "stop" : 1629750129799,
        "duration" : 2855
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1629750136726,
        "stop" : 1629750138950,
        "duration" : 2224
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _prerequisites.prerequisitesBuilder)()\n    .withActiveModules([\"wordads\"])\n    .build();\n  let blockId;\n  await (0, _reporter.testStep)(\"Add a WordAds block\", async () => {\n    await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n    blockId = await blockEditor.insertBlock(\n      _wordAds.default.name(),\n      _wordAds.default.title()\n    );\n    await blockEditor.selectPostTitle();\n  });\n  await (0, _reporter.testStep)(\n    \"Switch to Wide Skyscraper ad format\",\n    async () => {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Publish a post and assert that WordAds block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Add a WordAds block",
      "time" : {
        "start" : 1629750141444,
        "stop" : 1629750147816,
        "duration" : 6372
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Ad",
        "time" : {
          "start" : 1629750144928,
          "stop" : 1629750146270,
          "duration" : 1342
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: wordads",
        "time" : {
          "start" : 1629750146272,
          "stop" : 1629750147125,
          "duration" : 853
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Switch to Wide Skyscraper ad format",
      "time" : {
        "start" : 1629750147817,
        "stop" : 1629750148392,
        "duration" : 575
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Publish a post and assert that WordAds block is rendered",
      "time" : {
        "start" : 1629750148395,
        "stop" : 1629750152664,
        "duration" : 4269
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Publish post",
        "time" : {
          "start" : 1629750148575,
          "stop" : 1629750149914,
          "duration" : 1339
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "View post",
        "time" : {
          "start" : 1629750149916,
          "stop" : 1629750150318,
          "duration" : 402
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 19,
        "unknown" : 0,
        "total" : 19
      },
      "items" : [ {
        "uid" : "486c3eff2665c192",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20731/report/#testresult/486c3eff2665c192",
        "status" : "passed",
        "time" : {
          "start" : 1629748271075,
          "stop" : 1629748285026,
          "duration" : 13951
        }
      }, {
        "uid" : "fbd056339735412",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20731/report/#testresult/fbd056339735412",
        "status" : "passed",
        "time" : {
          "start" : 1629744212091,
          "stop" : 1629744235393,
          "duration" : 23302
        }
      }, {
        "uid" : "5841014447fac04f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20731/report/#testresult/5841014447fac04f",
        "status" : "passed",
        "time" : {
          "start" : 1629738482237,
          "stop" : 1629738496506,
          "duration" : 14269
        }
      }, {
        "uid" : "bad19a5283bd8ecd",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20731/report/#testresult/bad19a5283bd8ecd",
        "status" : "passed",
        "time" : {
          "start" : 1629736367218,
          "stop" : 1629736382533,
          "duration" : 15315
        }
      }, {
        "uid" : "a6b6fd794f1af0d4",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20731/report/#testresult/a6b6fd794f1af0d4",
        "status" : "passed",
        "time" : {
          "start" : 1629733866856,
          "stop" : 1629733878123,
          "duration" : 11267
        }
      }, {
        "uid" : "4a1e2b47f6ef6594",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20731/report/#testresult/4a1e2b47f6ef6594",
        "status" : "passed",
        "time" : {
          "start" : 1629732388956,
          "stop" : 1629732400898,
          "duration" : 11942
        }
      }, {
        "uid" : "d33cd60b429f5b06",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20731/report/#testresult/d33cd60b429f5b06",
        "status" : "passed",
        "time" : {
          "start" : 1629729214396,
          "stop" : 1629729227945,
          "duration" : 13549
        }
      }, {
        "uid" : "4101ceae8c87cc16",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20731/report/#testresult/4101ceae8c87cc16",
        "status" : "passed",
        "time" : {
          "start" : 1629492091156,
          "stop" : 1629492102506,
          "duration" : 11350
        }
      }, {
        "uid" : "d5da8d18bb8a4c2",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20731/report/#testresult/d5da8d18bb8a4c2",
        "status" : "passed",
        "time" : {
          "start" : 1629484523510,
          "stop" : 1629484536724,
          "duration" : 13214
        }
      }, {
        "uid" : "ba5544208848e865",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20731/report/#testresult/ba5544208848e865",
        "status" : "passed",
        "time" : {
          "start" : 1629483671281,
          "stop" : 1629483686723,
          "duration" : 15442
        }
      }, {
        "uid" : "ab50b7208658bfb9",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20731/report/#testresult/ab50b7208658bfb9",
        "status" : "passed",
        "time" : {
          "start" : 1629477383954,
          "stop" : 1629477396138,
          "duration" : 12184
        }
      }, {
        "uid" : "8a30ffac1644f855",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20731/report/#testresult/8a30ffac1644f855",
        "status" : "passed",
        "time" : {
          "start" : 1629474424672,
          "stop" : 1629474442865,
          "duration" : 18193
        }
      }, {
        "uid" : "d614eaba03ddca84",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20731/report/#testresult/d614eaba03ddca84",
        "status" : "passed",
        "time" : {
          "start" : 1629409821896,
          "stop" : 1629409835465,
          "duration" : 13569
        }
      }, {
        "uid" : "2b02901d3f770fe6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20731/report/#testresult/2b02901d3f770fe6",
        "status" : "passed",
        "time" : {
          "start" : 1629404559420,
          "stop" : 1629404576919,
          "duration" : 17499
        }
      }, {
        "uid" : "5c46e5d30125d94",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20731/report/#testresult/5c46e5d30125d94",
        "status" : "passed",
        "time" : {
          "start" : 1629389423101,
          "stop" : 1629389439566,
          "duration" : 16465
        }
      }, {
        "uid" : "c1afd322e22736b1",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20731/report/#testresult/c1afd322e22736b1",
        "status" : "passed",
        "time" : {
          "start" : 1629328395216,
          "stop" : 1629328407653,
          "duration" : 12437
        }
      }, {
        "uid" : "83f895bb83869c4d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20731/report/#testresult/83f895bb83869c4d",
        "status" : "passed",
        "time" : {
          "start" : 1629317519833,
          "stop" : 1629317531095,
          "duration" : 11262
        }
      }, {
        "uid" : "e73c361ae9b9adee",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20731/report/#testresult/e73c361ae9b9adee",
        "status" : "passed",
        "time" : {
          "start" : 1629239775539,
          "stop" : 1629239788083,
          "duration" : 12544
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "a6ffdededee70af.json",
  "parameterValues" : [ ]
}