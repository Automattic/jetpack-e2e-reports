{
  "uid" : "c2ae7d8e95b3ce19",
  "name" : "Pinterest block",
  "fullName" : "Pinterest block",
  "historyId" : "bf919c5c1253559f0d007402decf47af",
  "time" : {
    "start" : 1632760327180,
    "stop" : 1632760334002,
    "duration" : 6822
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _reporter.testStep)(\"Add a Pinterest block\", async () => {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const pinId = _config.default.get(&quot;blocks.pinterest.pinId&quot;);\n\n  await (0, _reporter.testStep)(&quot;Add a Pinterest block&quot;, async () =&gt; {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    &quot;Publish a post with a Pinterest block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can assert that Pinterest block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1632760322040,
        "stop" : 1632760327178,
        "duration" : 5138
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1632760334111,
        "stop" : 1632760336179,
        "duration" : 2068
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _reporter.testStep)(\"Add a Pinterest block\", async () => {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Add a Pinterest block",
      "time" : {
        "start" : 1632760327205,
        "stop" : 1632760329793,
        "duration" : 2588
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Pinterest",
        "time" : {
          "start" : 1632760327205,
          "stop" : 1632760328288,
          "duration" : 1083
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: pinterest",
        "time" : {
          "start" : 1632760328289,
          "stop" : 1632760328640,
          "duration" : 351
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Publish a post with a Pinterest block",
      "time" : {
        "start" : 1632760329794,
        "stop" : 1632760333325,
        "duration" : 3531
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Publish post",
        "time" : {
          "start" : 1632760329909,
          "stop" : 1632760332119,
          "duration" : 2210
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "View post",
        "time" : {
          "start" : 1632760332120,
          "stop" : 1632760333325,
          "duration" : 1205
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Can assert that Pinterest block is rendered",
      "time" : {
        "start" : 1632760333326,
        "stop" : 1632760333987,
        "duration" : 661
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "tag",
    "value" : "Jetpack version: 10.2-alpha-10c0b77412df746aa82e576b693bd28fdd740c83"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 10,
        "unknown" : 0,
        "total" : 10
      },
      "items" : [ {
        "uid" : "29c98682e2ef0be7",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20926/report/#testresult/29c98682e2ef0be7",
        "status" : "passed",
        "time" : {
          "start" : 1632435768154,
          "stop" : 1632435776954,
          "duration" : 8800
        }
      }, {
        "uid" : "b03d21c3d2a75cc2",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20926/report/#testresult/b03d21c3d2a75cc2",
        "status" : "passed",
        "time" : {
          "start" : 1632364577478,
          "stop" : 1632364582252,
          "duration" : 4774
        }
      }, {
        "uid" : "c58841cba31fe6b8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20926/report/#testresult/c58841cba31fe6b8",
        "status" : "passed",
        "time" : {
          "start" : 1632363828205,
          "stop" : 1632363835131,
          "duration" : 6926
        }
      }, {
        "uid" : "e56f023e56e64017",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20926/report/#testresult/e56f023e56e64017",
        "status" : "passed",
        "time" : {
          "start" : 1632357729212,
          "stop" : 1632357736337,
          "duration" : 7125
        }
      }, {
        "uid" : "6b1a5e65e178d725",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20926/report/#testresult/6b1a5e65e178d725",
        "status" : "passed",
        "time" : {
          "start" : 1632284979572,
          "stop" : 1632284987688,
          "duration" : 8116
        }
      }, {
        "uid" : "f6a39bab18fa9d16",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20926/report/#testresult/f6a39bab18fa9d16",
        "status" : "passed",
        "time" : {
          "start" : 1632092785848,
          "stop" : 1632092793083,
          "duration" : 7235
        }
      }, {
        "uid" : "44b20af2f2e3752e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20926/report/#testresult/44b20af2f2e3752e",
        "status" : "passed",
        "time" : {
          "start" : 1630891907200,
          "stop" : 1630891914869,
          "duration" : 7669
        }
      }, {
        "uid" : "891909ea7a91ec54",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20926/report/#testresult/891909ea7a91ec54",
        "status" : "passed",
        "time" : {
          "start" : 1630645906628,
          "stop" : 1630645916046,
          "duration" : 9418
        }
      }, {
        "uid" : "6b3fd7f03338c9c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20926/report/#testresult/6b3fd7f03338c9c",
        "status" : "passed",
        "time" : {
          "start" : 1630539007313,
          "stop" : 1630539017643,
          "duration" : 10330
        }
      } ]
    },
    "tags" : [ "Jetpack version: 10.2-alpha-10c0b77412df746aa82e576b693bd28fdd740c83" ]
  },
  "source" : "c2ae7d8e95b3ce19.json",
  "parameterValues" : [ ]
}