{
  "uid" : "21e8c4d10746fe81",
  "name" : "Eventbrite block",
  "fullName" : "Eventbrite block",
  "historyId" : "0b4a15ebb314cfb213eb3e305bfce89d",
  "time" : {
    "start" : 1636433346743,
    "stop" : 1636433360274,
    "duration" : 13531
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const eventId = \"112691417062\";\n  await (0, _reporters.testStep)(\n    \"Can visit the block editor and add a Eventbrite block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _wpAdmin.EventbriteBlock.name(),\n        _wpAdmin.EventbriteBlock.title()\n      );\n      const eventbriteBlock = new _wpAdmin.EventbriteBlock(\n        blockId,\n        page,\n        eventId\n      );\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _reporters.testStep)(\n    \"Can publish a post with a Eventbrite block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporters.testStep)(\n    \"Can assert that Eventbrite block is rendered\",\n    async () => {\n      const frontend = await _pages.PostFrontendPage.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wpAdmin.EventbriteBlock, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const eventId = &quot;112691417062&quot;;\n  await (0, _reporters.testStep)(\n    &quot;Can visit the block editor and add a Eventbrite block&quot;,\n    async () =&gt; {\n      const blockId = await blockEditor.insertBlock(\n        _wpAdmin.EventbriteBlock.name(),\n        _wpAdmin.EventbriteBlock.title()\n      );\n      const eventbriteBlock = new _wpAdmin.EventbriteBlock(\n        blockId,\n        page,\n        eventId\n      );\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _reporters.testStep)(\n    &quot;Can publish a post with a Eventbrite block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporters.testStep)(\n    &quot;Can assert that Eventbrite block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _pages.PostFrontendPage.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wpAdmin.EventbriteBlock, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1636433325213,
        "stop" : 1636433334724,
        "duration" : 9511
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1636433343033,
        "stop" : 1636433346735,
        "duration" : 3702
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  const eventId = \"112691417062\";\n  await (0, _reporters.testStep)(\n    \"Can visit the block editor and add a Eventbrite block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _wpAdmin.EventbriteBlock.name(),\n        _wpAdmin.EventbriteBlock.title()\n      );\n      const eventbriteBlock = new _wpAdmin.EventbriteBlock(\n        blockId,\n        page,\n        eventId\n      );\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _reporters.testStep)(\n    \"Can publish a post with a Eventbrite block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporters.testStep)(\n    \"Can assert that Eventbrite block is rendered\",\n    async () => {\n      const frontend = await _pages.PostFrontendPage.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wpAdmin.EventbriteBlock, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Can visit the block editor and add a Eventbrite block",
      "time" : {
        "start" : 1636433346778,
        "stop" : 1636433354555,
        "duration" : 7777
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Eventbrite",
        "time" : {
          "start" : 1636433346782,
          "stop" : 1636433347801,
          "duration" : 1019
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: eventbrite",
        "time" : {
          "start" : 1636433347806,
          "stop" : 1636433348271,
          "duration" : 465
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Can publish a post with a Eventbrite block",
      "time" : {
        "start" : 1636433354572,
        "stop" : 1636433359489,
        "duration" : 4917
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Publish post",
        "time" : {
          "start" : 1636433354764,
          "stop" : 1636433358733,
          "duration" : 3969
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "View post",
        "time" : {
          "start" : 1636433358738,
          "stop" : 1636433359489,
          "duration" : 751
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Can assert that Eventbrite block is rendered",
      "time" : {
        "start" : 1636433359502,
        "stop" : 1636433360219,
        "duration" : 717
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "tag",
    "value" : "Jetpack version: 10.4-a.2-cfcdcf43b12ad36ad92c560b6bd90502c465ffdd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 12,
        "unknown" : 0,
        "total" : 12
      },
      "items" : [ {
        "uid" : "e947ce092045987a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21456/report/#testresult/e947ce092045987a",
        "status" : "passed",
        "time" : {
          "start" : 1636428689275,
          "stop" : 1636428698588,
          "duration" : 9313
        }
      }, {
        "uid" : "87c57ab695ffa5b1",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21456/report/#testresult/87c57ab695ffa5b1",
        "status" : "passed",
        "time" : {
          "start" : 1635990688207,
          "stop" : 1635990696780,
          "duration" : 8573
        }
      }, {
        "uid" : "8da2463aa931193e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21456/report/#testresult/8da2463aa931193e",
        "status" : "passed",
        "time" : {
          "start" : 1635820724997,
          "stop" : 1635820732745,
          "duration" : 7748
        }
      }, {
        "uid" : "57cddf1adc6c8bd1",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21456/report/#testresult/57cddf1adc6c8bd1",
        "status" : "passed",
        "time" : {
          "start" : 1635475707146,
          "stop" : 1635475716066,
          "duration" : 8920
        }
      }, {
        "uid" : "86305ada71bc5778",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21456/report/#testresult/86305ada71bc5778",
        "status" : "passed",
        "time" : {
          "start" : 1635386926570,
          "stop" : 1635386937326,
          "duration" : 10756
        }
      }, {
        "uid" : "2bbe4d68efb2160e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21456/report/#testresult/2bbe4d68efb2160e",
        "status" : "passed",
        "time" : {
          "start" : 1635216161252,
          "stop" : 1635216173634,
          "duration" : 12382
        }
      }, {
        "uid" : "c7bdafc16641428d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21456/report/#testresult/c7bdafc16641428d",
        "status" : "passed",
        "time" : {
          "start" : 1634868016644,
          "stop" : 1634868026467,
          "duration" : 9823
        }
      }, {
        "uid" : "1b3fb89cc1e28435",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21456/report/#testresult/1b3fb89cc1e28435",
        "status" : "passed",
        "time" : {
          "start" : 1634826474589,
          "stop" : 1634826486144,
          "duration" : 11555
        }
      }, {
        "uid" : "7c70177519f08250",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21456/report/#testresult/7c70177519f08250",
        "status" : "passed",
        "time" : {
          "start" : 1634816994944,
          "stop" : 1634817004854,
          "duration" : 9910
        }
      }, {
        "uid" : "22340875909b50d1",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21456/report/#testresult/22340875909b50d1",
        "status" : "passed",
        "time" : {
          "start" : 1634785580190,
          "stop" : 1634785586999,
          "duration" : 6809
        }
      }, {
        "uid" : "9de73e8c78de6354",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21456/report/#testresult/9de73e8c78de6354",
        "status" : "passed",
        "time" : {
          "start" : 1634784752494,
          "stop" : 1634784764440,
          "duration" : 11946
        }
      } ]
    },
    "tags" : [ "Jetpack version: 10.4-a.2-cfcdcf43b12ad36ad92c560b6bd90502c465ffdd" ]
  },
  "source" : "21e8c4d10746fe81.json",
  "parameterValues" : [ ]
}