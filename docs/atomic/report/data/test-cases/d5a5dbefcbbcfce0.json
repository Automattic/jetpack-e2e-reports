{
  "uid" : "d5a5dbefcbbcfce0",
  "name" : "Pinterest block",
  "fullName" : "Pinterest block",
  "historyId" : "bf919c5c1253559f0d007402decf47af",
  "time" : {
    "start" : 1631621113663,
    "stop" : 1631621120781,
    "duration" : 7118
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _reporter.testStep)(\"Add a Pinterest block\", async () => {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const pinId = _config.default.get(&quot;blocks.pinterest.pinId&quot;);\n\n  await (0, _reporter.testStep)(&quot;Add a Pinterest block&quot;, async () =&gt; {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    &quot;Publish a post with a Pinterest block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can assert that Pinterest block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1631621110392,
        "stop" : 1631621113659,
        "duration" : 3267
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1631621120942,
        "stop" : 1631621123523,
        "duration" : 2581
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _reporter.testStep)(\"Add a Pinterest block\", async () => {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Add a Pinterest block",
      "time" : {
        "start" : 1631621113681,
        "stop" : 1631621116921,
        "duration" : 3240
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Pinterest",
        "time" : {
          "start" : 1631621113682,
          "stop" : 1631621115254,
          "duration" : 1572
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: pinterest",
        "time" : {
          "start" : 1631621115256,
          "stop" : 1631621115613,
          "duration" : 357
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Publish a post with a Pinterest block",
      "time" : {
        "start" : 1631621116922,
        "stop" : 1631621118877,
        "duration" : 1955
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Publish post",
        "time" : {
          "start" : 1631621117083,
          "stop" : 1631621118485,
          "duration" : 1402
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "View post",
        "time" : {
          "start" : 1631621118486,
          "stop" : 1631621118877,
          "duration" : 391
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Can assert that Pinterest block is rendered",
      "time" : {
        "start" : 1631621118879,
        "stop" : 1631621120755,
        "duration" : 1876
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "tag",
    "value" : "Jetpack version: [object Promise]"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 102,
        "unknown" : 0,
        "total" : 102
      },
      "items" : [ {
        "uid" : "2358c1861c51984a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/2358c1861c51984a",
        "status" : "passed",
        "time" : {
          "start" : 1631606736168,
          "stop" : 1631606745950,
          "duration" : 9782
        }
      }, {
        "uid" : "682c1827ed46fa37",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/682c1827ed46fa37",
        "status" : "passed",
        "time" : {
          "start" : 1631592300089,
          "stop" : 1631592307166,
          "duration" : 7077
        }
      }, {
        "uid" : "2525a8f5041c5972",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/2525a8f5041c5972",
        "status" : "passed",
        "time" : {
          "start" : 1631578112016,
          "stop" : 1631578121249,
          "duration" : 9233
        }
      }, {
        "uid" : "280457dd041d19ee",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/280457dd041d19ee",
        "status" : "passed",
        "time" : {
          "start" : 1631563529791,
          "stop" : 1631563539518,
          "duration" : 9727
        }
      }, {
        "uid" : "750880b492ad4350",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/750880b492ad4350",
        "status" : "passed",
        "time" : {
          "start" : 1631549125845,
          "stop" : 1631549138310,
          "duration" : 12465
        }
      }, {
        "uid" : "c3079f5ec8c9c0fc",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/c3079f5ec8c9c0fc",
        "status" : "passed",
        "time" : {
          "start" : 1631536329041,
          "stop" : 1631536342498,
          "duration" : 13457
        }
      }, {
        "uid" : "c81b9607b87cfc65",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/c81b9607b87cfc65",
        "status" : "passed",
        "time" : {
          "start" : 1631534744943,
          "stop" : 1631534756835,
          "duration" : 11892
        }
      }, {
        "uid" : "aa72076dd736d3f1",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/aa72076dd736d3f1",
        "status" : "passed",
        "time" : {
          "start" : 1631531095701,
          "stop" : 1631531107912,
          "duration" : 12211
        }
      }, {
        "uid" : "9cfe7d3541403e57",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/9cfe7d3541403e57",
        "status" : "passed",
        "time" : {
          "start" : 1631531040092,
          "stop" : 1631531051103,
          "duration" : 11011
        }
      }, {
        "uid" : "d520ec0ae9583e24",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/d520ec0ae9583e24",
        "status" : "passed",
        "time" : {
          "start" : 1631530171569,
          "stop" : 1631530179997,
          "duration" : 8428
        }
      }, {
        "uid" : "3a35985fc193d4df",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/3a35985fc193d4df",
        "status" : "passed",
        "time" : {
          "start" : 1631528474146,
          "stop" : 1631528486786,
          "duration" : 12640
        }
      }, {
        "uid" : "6e80e17a3a3b25f8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/6e80e17a3a3b25f8",
        "status" : "passed",
        "time" : {
          "start" : 1631520327553,
          "stop" : 1631520339348,
          "duration" : 11795
        }
      }, {
        "uid" : "3725d34cef4fb0ad",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/3725d34cef4fb0ad",
        "status" : "passed",
        "time" : {
          "start" : 1631506125360,
          "stop" : 1631506137264,
          "duration" : 11904
        }
      }, {
        "uid" : "4a496ee60771c680",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/4a496ee60771c680",
        "status" : "passed",
        "time" : {
          "start" : 1631491657906,
          "stop" : 1631491669224,
          "duration" : 11318
        }
      }, {
        "uid" : "628a9256f431c616",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/628a9256f431c616",
        "status" : "passed",
        "time" : {
          "start" : 1631477178157,
          "stop" : 1631477190561,
          "duration" : 12404
        }
      }, {
        "uid" : "549607f98e123431",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/549607f98e123431",
        "status" : "passed",
        "time" : {
          "start" : 1631462703240,
          "stop" : 1631462713529,
          "duration" : 10289
        }
      }, {
        "uid" : "d004647d3168d710",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/d004647d3168d710",
        "status" : "passed",
        "time" : {
          "start" : 1631448411765,
          "stop" : 1631448421770,
          "duration" : 10005
        }
      }, {
        "uid" : "4bcfd0ca4e52e911",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/4bcfd0ca4e52e911",
        "status" : "passed",
        "time" : {
          "start" : 1631434003990,
          "stop" : 1631434015557,
          "duration" : 11567
        }
      }, {
        "uid" : "dbd7c4ce7faaebe",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/dbd7c4ce7faaebe",
        "status" : "passed",
        "time" : {
          "start" : 1631419678170,
          "stop" : 1631419691164,
          "duration" : 12994
        }
      }, {
        "uid" : "2731a68d1dc2f5c8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/2731a68d1dc2f5c8",
        "status" : "passed",
        "time" : {
          "start" : 1631405300006,
          "stop" : 1631405312723,
          "duration" : 12717
        }
      } ]
    },
    "tags" : [ "Jetpack version: [object Promise]" ]
  },
  "source" : "d5a5dbefcbbcfce0.json",
  "parameterValues" : [ ]
}