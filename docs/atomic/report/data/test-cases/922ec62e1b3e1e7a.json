{
  "uid" : "922ec62e1b3e1e7a",
  "name" : "Pinterest block",
  "fullName" : "Pinterest block",
  "historyId" : "bf919c5c1253559f0d007402decf47af",
  "time" : {
    "start" : 1630354251406,
    "stop" : 1630354264781,
    "duration" : 13375
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _reporter.testStep)(\"Add a Pinterest block\", async () => {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const pinId = _config.default.get(&quot;blocks.pinterest.pinId&quot;);\n\n  await (0, _reporter.testStep)(&quot;Add a Pinterest block&quot;, async () =&gt; {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    &quot;Publish a post with a Pinterest block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can assert that Pinterest block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1630354244835,
        "stop" : 1630354251403,
        "duration" : 6568
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1630354264967,
        "stop" : 1630354269439,
        "duration" : 4472
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _reporter.testStep)(\"Add a Pinterest block\", async () => {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Add a Pinterest block",
      "time" : {
        "start" : 1630354251464,
        "stop" : 1630354257734,
        "duration" : 6270
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Pinterest",
        "time" : {
          "start" : 1630354251465,
          "stop" : 1630354255190,
          "duration" : 3725
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: pinterest",
        "time" : {
          "start" : 1630354255197,
          "stop" : 1630354256103,
          "duration" : 906
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Publish a post with a Pinterest block",
      "time" : {
        "start" : 1630354257744,
        "stop" : 1630354260489,
        "duration" : 2745
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Publish post",
        "time" : {
          "start" : 1630354257957,
          "stop" : 1630354259925,
          "duration" : 1968
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "View post",
        "time" : {
          "start" : 1630354259928,
          "stop" : 1630354260489,
          "duration" : 561
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Can assert that Pinterest block is rendered",
      "time" : {
        "start" : 1630354260491,
        "stop" : 1630354264701,
        "duration" : 4210
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 10,
        "unknown" : 0,
        "total" : 10
      },
      "items" : [ {
        "uid" : "326729df75b63158",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/326729df75b63158",
        "status" : "passed",
        "time" : {
          "start" : 1630339843341,
          "stop" : 1630339855916,
          "duration" : 12575
        }
      }, {
        "uid" : "9f82db7f12222ea2",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/9f82db7f12222ea2",
        "status" : "passed",
        "time" : {
          "start" : 1630325444047,
          "stop" : 1630325454483,
          "duration" : 10436
        }
      }, {
        "uid" : "fce4a88d8aa3eae6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/fce4a88d8aa3eae6",
        "status" : "passed",
        "time" : {
          "start" : 1630311049109,
          "stop" : 1630311059379,
          "duration" : 10270
        }
      }, {
        "uid" : "e49df1b80e3614e1",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/e49df1b80e3614e1",
        "status" : "passed",
        "time" : {
          "start" : 1630148898534,
          "stop" : 1630148909385,
          "duration" : 10851
        }
      }, {
        "uid" : "7bddb4dca03898bc",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/7bddb4dca03898bc",
        "status" : "passed",
        "time" : {
          "start" : 1630147143419,
          "stop" : 1630147154334,
          "duration" : 10915
        }
      }, {
        "uid" : "1dd2bb2d8eac4a5a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/1dd2bb2d8eac4a5a",
        "status" : "passed",
        "time" : {
          "start" : 1630146796976,
          "stop" : 1630146809174,
          "duration" : 12198
        }
      }, {
        "uid" : "e2de98d367ad8450",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/e2de98d367ad8450",
        "status" : "passed",
        "time" : {
          "start" : 1630146264424,
          "stop" : 1630146273157,
          "duration" : 8733
        }
      }, {
        "uid" : "ede5dcf1fbf16fde",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/ede5dcf1fbf16fde",
        "status" : "passed",
        "time" : {
          "start" : 1630066270262,
          "stop" : 1630066278623,
          "duration" : 8361
        }
      }, {
        "uid" : "d6e1d3b3b52d3ec5",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/d6e1d3b3b52d3ec5",
        "status" : "passed",
        "time" : {
          "start" : 1630060324732,
          "stop" : 1630060336783,
          "duration" : 12051
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "922ec62e1b3e1e7a.json",
  "parameterValues" : [ ]
}