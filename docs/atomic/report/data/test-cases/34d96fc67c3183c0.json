{
  "uid" : "34d96fc67c3183c0",
  "name" : "Eventbrite block",
  "fullName" : "Eventbrite block",
  "historyId" : "0b4a15ebb314cfb213eb3e305bfce89d",
  "time" : {
    "start" : 1631528491427,
    "stop" : 1631528506401,
    "duration" : 14974
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const eventId = \"112691417062\";\n  await (0, _reporter.testStep)(\n    \"Can visit the block editor and add a Eventbrite block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _eventbrite.default.name(),\n        _eventbrite.default.title()\n      );\n      const eventbriteBlock = new _eventbrite.default(blockId, page, eventId);\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can publish a post with a Eventbrite block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Eventbrite block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_eventbrite.default, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const eventId = &quot;112691417062&quot;;\n  await (0, _reporter.testStep)(\n    &quot;Can visit the block editor and add a Eventbrite block&quot;,\n    async () =&gt; {\n      const blockId = await blockEditor.insertBlock(\n        _eventbrite.default.name(),\n        _eventbrite.default.title()\n      );\n      const eventbriteBlock = new _eventbrite.default(blockId, page, eventId);\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can publish a post with a Eventbrite block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can assert that Eventbrite block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_eventbrite.default, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1631528468063,
        "stop" : 1631528474143,
        "duration" : 6080
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1631528486932,
        "stop" : 1631528491424,
        "duration" : 4492
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  const eventId = \"112691417062\";\n  await (0, _reporter.testStep)(\n    \"Can visit the block editor and add a Eventbrite block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _eventbrite.default.name(),\n        _eventbrite.default.title()\n      );\n      const eventbriteBlock = new _eventbrite.default(blockId, page, eventId);\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can publish a post with a Eventbrite block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Eventbrite block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_eventbrite.default, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Can visit the block editor and add a Eventbrite block",
      "time" : {
        "start" : 1631528491470,
        "stop" : 1631528500976,
        "duration" : 9506
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Eventbrite",
        "time" : {
          "start" : 1631528491471,
          "stop" : 1631528494798,
          "duration" : 3327
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: eventbrite",
        "time" : {
          "start" : 1631528494800,
          "stop" : 1631528495747,
          "duration" : 947
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Can publish a post with a Eventbrite block",
      "time" : {
        "start" : 1631528500978,
        "stop" : 1631528503938,
        "duration" : 2960
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Publish post",
        "time" : {
          "start" : 1631528501416,
          "stop" : 1631528503388,
          "duration" : 1972
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "View post",
        "time" : {
          "start" : 1631528503396,
          "stop" : 1631528503938,
          "duration" : 542
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Can assert that Eventbrite block is rendered",
      "time" : {
        "start" : 1631528503951,
        "stop" : 1631528506318,
        "duration" : 2367
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "tag",
    "value" : "Jetpack version: [object Promise]"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 91,
        "unknown" : 0,
        "total" : 91
      },
      "items" : [ {
        "uid" : "6103d7c2a6402e74",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/6103d7c2a6402e74",
        "status" : "passed",
        "time" : {
          "start" : 1631520343570,
          "stop" : 1631520356573,
          "duration" : 13003
        }
      }, {
        "uid" : "be4c84eb73223812",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/be4c84eb73223812",
        "status" : "passed",
        "time" : {
          "start" : 1631506141953,
          "stop" : 1631506155529,
          "duration" : 13576
        }
      }, {
        "uid" : "c5317f613da7ac77",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/c5317f613da7ac77",
        "status" : "passed",
        "time" : {
          "start" : 1631491673250,
          "stop" : 1631491686190,
          "duration" : 12940
        }
      }, {
        "uid" : "d95659ab6dab3d4",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/d95659ab6dab3d4",
        "status" : "passed",
        "time" : {
          "start" : 1631477195149,
          "stop" : 1631477209047,
          "duration" : 13898
        }
      }, {
        "uid" : "7e426aaa51d8e35a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/7e426aaa51d8e35a",
        "status" : "passed",
        "time" : {
          "start" : 1631462717626,
          "stop" : 1631462730050,
          "duration" : 12424
        }
      }, {
        "uid" : "9dfdf7476814be14",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/9dfdf7476814be14",
        "status" : "passed",
        "time" : {
          "start" : 1631448425715,
          "stop" : 1631448438002,
          "duration" : 12287
        }
      }, {
        "uid" : "8a41140bfce07bb3",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/8a41140bfce07bb3",
        "status" : "passed",
        "time" : {
          "start" : 1631434019947,
          "stop" : 1631434033884,
          "duration" : 13937
        }
      }, {
        "uid" : "172657003d6e4ac6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/172657003d6e4ac6",
        "status" : "passed",
        "time" : {
          "start" : 1631419695877,
          "stop" : 1631419710100,
          "duration" : 14223
        }
      }, {
        "uid" : "7526cb2fd1f670c7",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/7526cb2fd1f670c7",
        "status" : "passed",
        "time" : {
          "start" : 1631405317155,
          "stop" : 1631405331683,
          "duration" : 14528
        }
      }, {
        "uid" : "83c8774cad2c6937",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/83c8774cad2c6937",
        "status" : "passed",
        "time" : {
          "start" : 1631390740014,
          "stop" : 1631390762699,
          "duration" : 22685
        }
      }, {
        "uid" : "855e87a9483a71bd",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/855e87a9483a71bd",
        "status" : "passed",
        "time" : {
          "start" : 1631376366382,
          "stop" : 1631376378986,
          "duration" : 12604
        }
      }, {
        "uid" : "6d81e6dc91f43a4c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/6d81e6dc91f43a4c",
        "status" : "passed",
        "time" : {
          "start" : 1631362069767,
          "stop" : 1631362081239,
          "duration" : 11472
        }
      }, {
        "uid" : "56c7c30453b3ba2f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/56c7c30453b3ba2f",
        "status" : "passed",
        "time" : {
          "start" : 1631347548032,
          "stop" : 1631347561970,
          "duration" : 13938
        }
      }, {
        "uid" : "10d7b378192188d5",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/10d7b378192188d5",
        "status" : "passed",
        "time" : {
          "start" : 1631333125168,
          "stop" : 1631333137653,
          "duration" : 12485
        }
      }, {
        "uid" : "c5254ff9287ddee3",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/c5254ff9287ddee3",
        "status" : "passed",
        "time" : {
          "start" : 1631318871495,
          "stop" : 1631318885499,
          "duration" : 14004
        }
      }, {
        "uid" : "d5f1c3e53bb9dba2",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/d5f1c3e53bb9dba2",
        "status" : "passed",
        "time" : {
          "start" : 1631304363654,
          "stop" : 1631304376748,
          "duration" : 13094
        }
      }, {
        "uid" : "a0607186532e83f6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/a0607186532e83f6",
        "status" : "passed",
        "time" : {
          "start" : 1631290165867,
          "stop" : 1631290180440,
          "duration" : 14573
        }
      }, {
        "uid" : "283068cb001ccdd7",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/283068cb001ccdd7",
        "status" : "passed",
        "time" : {
          "start" : 1631275561914,
          "stop" : 1631275577090,
          "duration" : 15176
        }
      }, {
        "uid" : "a857a46a5de87584",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/a857a46a5de87584",
        "status" : "passed",
        "time" : {
          "start" : 1631261342321,
          "stop" : 1631261357186,
          "duration" : 14865
        }
      }, {
        "uid" : "6ba3c8bc1a7fce76",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/6ba3c8bc1a7fce76",
        "status" : "passed",
        "time" : {
          "start" : 1631246716442,
          "stop" : 1631246728299,
          "duration" : 11857
        }
      } ]
    },
    "tags" : [ "Jetpack version: [object Promise]" ]
  },
  "source" : "34d96fc67c3183c0.json",
  "parameterValues" : [ ]
}