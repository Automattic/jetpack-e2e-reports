{
  "uid" : "9739838ce56a4085",
  "name" : "Pinterest block",
  "fullName" : "Pinterest block",
  "historyId" : "bf919c5c1253559f0d007402decf47af",
  "time" : {
    "start" : 1633306108988,
    "stop" : 1633306116865,
    "duration" : 7877
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _reporter.testStep)(\"Add a Pinterest block\", async () => {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const pinId = _config.default.get(&quot;blocks.pinterest.pinId&quot;);\n\n  await (0, _reporter.testStep)(&quot;Add a Pinterest block&quot;, async () =&gt; {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    &quot;Publish a post with a Pinterest block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can assert that Pinterest block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1633306100262,
        "stop" : 1633306108984,
        "duration" : 8722
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1633306117073,
        "stop" : 1633306120740,
        "duration" : 3667
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _reporter.testStep)(\"Add a Pinterest block\", async () => {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Add a Pinterest block",
      "time" : {
        "start" : 1633306109014,
        "stop" : 1633306113702,
        "duration" : 4688
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Pinterest",
        "time" : {
          "start" : 1633306109015,
          "stop" : 1633306111474,
          "duration" : 2459
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: pinterest",
        "time" : {
          "start" : 1633306111477,
          "stop" : 1633306112045,
          "duration" : 568
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Publish a post with a Pinterest block",
      "time" : {
        "start" : 1633306113706,
        "stop" : 1633306115924,
        "duration" : 2218
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Publish post",
        "time" : {
          "start" : 1633306113895,
          "stop" : 1633306115491,
          "duration" : 1596
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "View post",
        "time" : {
          "start" : 1633306115499,
          "stop" : 1633306115924,
          "duration" : 425
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Can assert that Pinterest block is rendered",
      "time" : {
        "start" : 1633306115927,
        "stop" : 1633306116824,
        "duration" : 897
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "tag",
    "value" : "Jetpack version: 10.3-alpha-1296610169-g57f2c2f"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 216,
        "unknown" : 0,
        "total" : 216
      },
      "items" : [ {
        "uid" : "5ff12badf0c63a4c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/5ff12badf0c63a4c",
        "status" : "passed",
        "time" : {
          "start" : 1633291520373,
          "stop" : 1633291528151,
          "duration" : 7778
        }
      }, {
        "uid" : "4e79a7181c093b7f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/4e79a7181c093b7f",
        "status" : "passed",
        "time" : {
          "start" : 1633277109218,
          "stop" : 1633277115511,
          "duration" : 6293
        }
      }, {
        "uid" : "eec873b0b76f181e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/eec873b0b76f181e",
        "status" : "passed",
        "time" : {
          "start" : 1633262711100,
          "stop" : 1633262719081,
          "duration" : 7981
        }
      }, {
        "uid" : "b591f24e17f2c50d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/b591f24e17f2c50d",
        "status" : "passed",
        "time" : {
          "start" : 1633248388535,
          "stop" : 1633248397035,
          "duration" : 8500
        }
      }, {
        "uid" : "e87594ea659eafa1",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/e87594ea659eafa1",
        "status" : "passed",
        "time" : {
          "start" : 1633219726868,
          "stop" : 1633219735768,
          "duration" : 8900
        }
      }, {
        "uid" : "fb878758928af4fe",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/fb878758928af4fe",
        "status" : "passed",
        "time" : {
          "start" : 1633205304857,
          "stop" : 1633205313838,
          "duration" : 8981
        }
      }, {
        "uid" : "52323ebf837c19fc",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/52323ebf837c19fc",
        "status" : "passed",
        "time" : {
          "start" : 1633176314788,
          "stop" : 1633176323362,
          "duration" : 8574
        }
      }, {
        "uid" : "5e8c75c795f411bc",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/5e8c75c795f411bc",
        "status" : "passed",
        "time" : {
          "start" : 1633161943446,
          "stop" : 1633161950349,
          "duration" : 6903
        }
      }, {
        "uid" : "8950b6d4ce34de00",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/8950b6d4ce34de00",
        "status" : "passed",
        "time" : {
          "start" : 1633147531782,
          "stop" : 1633147539855,
          "duration" : 8073
        }
      }, {
        "uid" : "2c122ed9708b4b2e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/2c122ed9708b4b2e",
        "status" : "passed",
        "time" : {
          "start" : 1633133319899,
          "stop" : 1633133328742,
          "duration" : 8843
        }
      }, {
        "uid" : "7e5dbe464f2e773e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/7e5dbe464f2e773e",
        "status" : "passed",
        "time" : {
          "start" : 1633118727894,
          "stop" : 1633118735516,
          "duration" : 7622
        }
      }, {
        "uid" : "b0762b2192edc780",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/b0762b2192edc780",
        "status" : "passed",
        "time" : {
          "start" : 1633104296184,
          "stop" : 1633104302351,
          "duration" : 6167
        }
      }, {
        "uid" : "a1303807bb11ed10",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/a1303807bb11ed10",
        "status" : "passed",
        "time" : {
          "start" : 1633089942934,
          "stop" : 1633089950924,
          "duration" : 7990
        }
      }, {
        "uid" : "7ef03454c8b92676",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/7ef03454c8b92676",
        "status" : "passed",
        "time" : {
          "start" : 1633075500077,
          "stop" : 1633075506073,
          "duration" : 5996
        }
      }, {
        "uid" : "871b8224c3798003",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/871b8224c3798003",
        "status" : "passed",
        "time" : {
          "start" : 1633061288902,
          "stop" : 1633061295995,
          "duration" : 7093
        }
      }, {
        "uid" : "7ff69cb09cb3d2fc",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/7ff69cb09cb3d2fc",
        "status" : "passed",
        "time" : {
          "start" : 1633046895194,
          "stop" : 1633046901907,
          "duration" : 6713
        }
      }, {
        "uid" : "b16a26688489c1ed",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/b16a26688489c1ed",
        "status" : "passed",
        "time" : {
          "start" : 1633032529393,
          "stop" : 1633032535646,
          "duration" : 6253
        }
      }, {
        "uid" : "f6d121bd31a9899a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/f6d121bd31a9899a",
        "status" : "passed",
        "time" : {
          "start" : 1633003839731,
          "stop" : 1633003848085,
          "duration" : 8354
        }
      }, {
        "uid" : "ee10688d5611023d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/ee10688d5611023d",
        "status" : "passed",
        "time" : {
          "start" : 1632989096238,
          "stop" : 1632989103120,
          "duration" : 6882
        }
      }, {
        "uid" : "d12d06e7c527e4e8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/d12d06e7c527e4e8",
        "status" : "passed",
        "time" : {
          "start" : 1632974727287,
          "stop" : 1632974735764,
          "duration" : 8477
        }
      } ]
    },
    "tags" : [ "Jetpack version: 10.3-alpha-1296610169-g57f2c2f" ]
  },
  "source" : "9739838ce56a4085.json",
  "parameterValues" : [ ]
}