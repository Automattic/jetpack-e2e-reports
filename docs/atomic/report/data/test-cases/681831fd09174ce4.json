{
  "uid" : "681831fd09174ce4",
  "name" : "Pinterest block",
  "fullName" : "Pinterest block",
  "historyId" : "bf919c5c1253559f0d007402decf47af",
  "time" : {
    "start" : 1634040343627,
    "stop" : 1634040351780,
    "duration" : 8153
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _reporter.testStep)(\"Add a Pinterest block\", async () => {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const pinId = _config.default.get(&quot;blocks.pinterest.pinId&quot;);\n\n  await (0, _reporter.testStep)(&quot;Add a Pinterest block&quot;, async () =&gt; {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    &quot;Publish a post with a Pinterest block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can assert that Pinterest block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1634040339412,
        "stop" : 1634040343616,
        "duration" : 4204
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1634040352032,
        "stop" : 1634040357545,
        "duration" : 5513
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _reporter.testStep)(\"Add a Pinterest block\", async () => {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Add a Pinterest block",
      "time" : {
        "start" : 1634040343660,
        "stop" : 1634040348866,
        "duration" : 5206
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Pinterest",
        "time" : {
          "start" : 1634040343663,
          "stop" : 1634040346640,
          "duration" : 2977
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: pinterest",
        "time" : {
          "start" : 1634040346643,
          "stop" : 1634040347174,
          "duration" : 531
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Publish a post with a Pinterest block",
      "time" : {
        "start" : 1634040348871,
        "stop" : 1634040350789,
        "duration" : 1918
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Publish post",
        "time" : {
          "start" : 1634040349005,
          "stop" : 1634040350329,
          "duration" : 1324
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "View post",
        "time" : {
          "start" : 1634040350333,
          "stop" : 1634040350789,
          "duration" : 456
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Can assert that Pinterest block is rendered",
      "time" : {
        "start" : 1634040350793,
        "stop" : 1634040351742,
        "duration" : 949
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "tag",
    "value" : "Jetpack version: 10.3-alpha-1332499258-ge44b2fa"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 265,
        "unknown" : 0,
        "total" : 265
      },
      "items" : [ {
        "uid" : "cceac5cc38e62cdc",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/cceac5cc38e62cdc",
        "status" : "passed",
        "time" : {
          "start" : 1634025959817,
          "stop" : 1634025969274,
          "duration" : 9457
        }
      }, {
        "uid" : "6ae1c80bb81fc2d2",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/6ae1c80bb81fc2d2",
        "status" : "passed",
        "time" : {
          "start" : 1634011505661,
          "stop" : 1634011512980,
          "duration" : 7319
        }
      }, {
        "uid" : "3d83e5ad5e2c7923",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/3d83e5ad5e2c7923",
        "status" : "passed",
        "time" : {
          "start" : 1633997303566,
          "stop" : 1633997311283,
          "duration" : 7717
        }
      }, {
        "uid" : "87c452efca0247f4",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/87c452efca0247f4",
        "status" : "passed",
        "time" : {
          "start" : 1633983675621,
          "stop" : 1633983682775,
          "duration" : 7154
        }
      }, {
        "uid" : "242aa69dafcbedd8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/242aa69dafcbedd8",
        "status" : "passed",
        "time" : {
          "start" : 1633968618785,
          "stop" : 1633968627997,
          "duration" : 9212
        }
      }, {
        "uid" : "ab6b169b2ffa9b78",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/ab6b169b2ffa9b78",
        "status" : "passed",
        "time" : {
          "start" : 1633953932569,
          "stop" : 1633953940574,
          "duration" : 8005
        }
      }, {
        "uid" : "60071ec24c43318d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/60071ec24c43318d",
        "status" : "passed",
        "time" : {
          "start" : 1633939541520,
          "stop" : 1633939549998,
          "duration" : 8478
        }
      }, {
        "uid" : "84834463a647bc4d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/84834463a647bc4d",
        "status" : "passed",
        "time" : {
          "start" : 1633925273350,
          "stop" : 1633925280250,
          "duration" : 6900
        }
      }, {
        "uid" : "8967cacb53994c65",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/8967cacb53994c65",
        "status" : "passed",
        "time" : {
          "start" : 1633910875596,
          "stop" : 1633910882572,
          "duration" : 6976
        }
      }, {
        "uid" : "f0d637e044f7ef6d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/f0d637e044f7ef6d",
        "status" : "passed",
        "time" : {
          "start" : 1633896329330,
          "stop" : 1633896335728,
          "duration" : 6398
        }
      }, {
        "uid" : "f6780e9add31f86c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/f6780e9add31f86c",
        "status" : "passed",
        "time" : {
          "start" : 1633881905071,
          "stop" : 1633881911930,
          "duration" : 6859
        }
      }, {
        "uid" : "c0a92e96175853b3",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/c0a92e96175853b3",
        "status" : "passed",
        "time" : {
          "start" : 1633867541075,
          "stop" : 1633867549996,
          "duration" : 8921
        }
      }, {
        "uid" : "3ea3afde4c009b8b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/3ea3afde4c009b8b",
        "status" : "passed",
        "time" : {
          "start" : 1633853141411,
          "stop" : 1633853148868,
          "duration" : 7457
        }
      }, {
        "uid" : "70be0c1316fd68be",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/70be0c1316fd68be",
        "status" : "passed",
        "time" : {
          "start" : 1633838762531,
          "stop" : 1633838770234,
          "duration" : 7703
        }
      }, {
        "uid" : "55e36e79240b35d0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/55e36e79240b35d0",
        "status" : "passed",
        "time" : {
          "start" : 1633824494350,
          "stop" : 1633824500572,
          "duration" : 6222
        }
      }, {
        "uid" : "9721f5786982039a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/9721f5786982039a",
        "status" : "passed",
        "time" : {
          "start" : 1633809916639,
          "stop" : 1633809923692,
          "duration" : 7053
        }
      }, {
        "uid" : "fb867adf6a51995a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/fb867adf6a51995a",
        "status" : "passed",
        "time" : {
          "start" : 1633795542396,
          "stop" : 1633795551091,
          "duration" : 8695
        }
      }, {
        "uid" : "31940032bcbca243",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/31940032bcbca243",
        "status" : "passed",
        "time" : {
          "start" : 1633781121937,
          "stop" : 1633781129367,
          "duration" : 7430
        }
      }, {
        "uid" : "34a8c13371216387",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/34a8c13371216387",
        "status" : "passed",
        "time" : {
          "start" : 1633766708210,
          "stop" : 1633766714913,
          "duration" : 6703
        }
      }, {
        "uid" : "d7763be0f805d3c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/d7763be0f805d3c",
        "status" : "passed",
        "time" : {
          "start" : 1633752440678,
          "stop" : 1633752449941,
          "duration" : 9263
        }
      } ]
    },
    "tags" : [ "Jetpack version: 10.3-alpha-1332499258-ge44b2fa" ]
  },
  "source" : "681831fd09174ce4.json",
  "parameterValues" : [ ]
}