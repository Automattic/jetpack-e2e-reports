{
  "uid" : "fc8f48f4ea3c4d1f",
  "name" : "Pay with PayPal",
  "fullName" : "Pay with PayPal",
  "historyId" : "2b956f1af1e91da7ea3b442b8c2cddca",
  "time" : {
    "start" : 1630440575525,
    "stop" : 1630440575612,
    "duration" : 87
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _reporter.testStep)(\"Add a Pay with PayPal block\", async () => {\n    blockId = await blockEditor.insertBlock(\n      _simplePayments.default.name(),\n      _simplePayments.default.title()\n    );\n  });\n  await (0, _reporter.testStep)(\n    \"Fill details of Pay with PayPal block\",\n    async () => {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Publish a post and assert that Pay with PayPal block is rendered\",\n    async () => {\n      await blockEditor.setTitle(\"Pay with PayPal block\");\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _reporter.testStep)(&quot;Add a Pay with PayPal block&quot;, async () =&gt; {\n    blockId = await blockEditor.insertBlock(\n      _simplePayments.default.name(),\n      _simplePayments.default.title()\n    );\n  });\n  await (0, _reporter.testStep)(\n    &quot;Fill details of Pay with PayPal block&quot;,\n    async () =&gt; {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Publish a post and assert that Pay with PayPal block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.setTitle(&quot;Pay with PayPal block&quot;);\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "TimeoutError",
  "statusTrace" : "page.fill: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"#user_login\"\n============================================================\nNote: use DEBUG=pw:api environment variable to capture Playwright logs.",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "broken",
    "statusMessage" : "TimeoutError",
    "statusTrace" : "page.fill: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"#user_login\"\n============================================================\nNote: use DEBUG=pw:api environment variable to capture Playwright logs.",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "e9bf70b31bf83b8",
      "name" : "beforeAll - Paid blocks",
      "source" : "e9bf70b31bf83b8.png",
      "type" : "image/png",
      "size" : 69950
    }, {
      "uid" : "bc4a8a9c21dd82d0",
      "name" : "1630440575015_beforeAll___Paid_blocks.webm",
      "source" : "bc4a8a9c21dd82d0.webm",
      "type" : "video/webm",
      "size" : 1191037
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _reporter.testStep)(\"Add a Pay with PayPal block\", async () => {\n    blockId = await blockEditor.insertBlock(\n      _simplePayments.default.name(),\n      _simplePayments.default.title()\n    );\n  });\n  await (0, _reporter.testStep)(\n    \"Fill details of Pay with PayPal block\",\n    async () => {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Publish a post and assert that Pay with PayPal block is rendered\",\n    async () => {\n      await blockEditor.setTitle(\"Pay with PayPal block\");\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "broken",
    "statusMessage" : "TimeoutError",
    "statusTrace" : "page.fill: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"#user_login\"\n============================================================\nNote: use DEBUG=pw:api environment variable to capture Playwright logs.",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "1ae96d014b5e85b8",
      "name" : "1630440575577_Paid_blocks___Pay_with_PayPal.webm",
      "source" : "1ae96d014b5e85b8.webm",
      "type" : "video/webm",
      "size" : 1409
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 15,
        "unknown" : 0,
        "total" : 16
      },
      "items" : [ {
        "uid" : "5cf38da43f7d4e3d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/5cf38da43f7d4e3d",
        "status" : "passed",
        "time" : {
          "start" : 1630426173177,
          "stop" : 1630426182365,
          "duration" : 9188
        }
      }, {
        "uid" : "1440daa790cf7c0a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/1440daa790cf7c0a",
        "status" : "passed",
        "time" : {
          "start" : 1630411817480,
          "stop" : 1630411827396,
          "duration" : 9916
        }
      }, {
        "uid" : "b201871a9d560b9d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/b201871a9d560b9d",
        "status" : "passed",
        "time" : {
          "start" : 1630397428447,
          "stop" : 1630397440486,
          "duration" : 12039
        }
      }, {
        "uid" : "a3bdbb292cd32f64",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/a3bdbb292cd32f64",
        "status" : "passed",
        "time" : {
          "start" : 1630382703161,
          "stop" : 1630382712439,
          "duration" : 9278
        }
      }, {
        "uid" : "4cc78f26a053168c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/4cc78f26a053168c",
        "status" : "passed",
        "time" : {
          "start" : 1630368639914,
          "stop" : 1630368649816,
          "duration" : 9902
        }
      }, {
        "uid" : "69e1b5463cd54421",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/69e1b5463cd54421",
        "status" : "passed",
        "time" : {
          "start" : 1630354226608,
          "stop" : 1630354238813,
          "duration" : 12205
        }
      }, {
        "uid" : "b455b304947487a0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/b455b304947487a0",
        "status" : "passed",
        "time" : {
          "start" : 1630339821637,
          "stop" : 1630339832949,
          "duration" : 11312
        }
      }, {
        "uid" : "db61cbe4ef7cb080",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/db61cbe4ef7cb080",
        "status" : "passed",
        "time" : {
          "start" : 1630325425725,
          "stop" : 1630325435168,
          "duration" : 9443
        }
      }, {
        "uid" : "f34afc4fc45dcc93",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/f34afc4fc45dcc93",
        "status" : "passed",
        "time" : {
          "start" : 1630311031245,
          "stop" : 1630311039218,
          "duration" : 7973
        }
      }, {
        "uid" : "ca5269b6083e85ec",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/ca5269b6083e85ec",
        "status" : "passed",
        "time" : {
          "start" : 1630148879013,
          "stop" : 1630148888820,
          "duration" : 9807
        }
      }, {
        "uid" : "be67a3aa18a3d63d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/be67a3aa18a3d63d",
        "status" : "passed",
        "time" : {
          "start" : 1630147124638,
          "stop" : 1630147133832,
          "duration" : 9194
        }
      }, {
        "uid" : "dca374c3f9524eed",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/dca374c3f9524eed",
        "status" : "passed",
        "time" : {
          "start" : 1630146777648,
          "stop" : 1630146787408,
          "duration" : 9760
        }
      }, {
        "uid" : "6f122f8f54232bea",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/6f122f8f54232bea",
        "status" : "passed",
        "time" : {
          "start" : 1630146195565,
          "stop" : 1630146204707,
          "duration" : 9142
        }
      }, {
        "uid" : "213df69246e7f234",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/213df69246e7f234",
        "status" : "passed",
        "time" : {
          "start" : 1630066196105,
          "stop" : 1630066206292,
          "duration" : 10187
        }
      }, {
        "uid" : "e82751f72948999d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/e82751f72948999d",
        "status" : "passed",
        "time" : {
          "start" : 1630060288981,
          "stop" : 1630060299801,
          "duration" : 10820
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "fc8f48f4ea3c4d1f.json",
  "parameterValues" : [ ]
}