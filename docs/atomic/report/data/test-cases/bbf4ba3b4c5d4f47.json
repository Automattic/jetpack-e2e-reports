{
  "uid" : "bbf4ba3b4c5d4f47",
  "name" : "Eventbrite block",
  "fullName" : "Eventbrite block",
  "historyId" : "0b4a15ebb314cfb213eb3e305bfce89d",
  "time" : {
    "start" : 1637525132092,
    "stop" : 1637525143969,
    "duration" : 11877
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const eventId = \"112691417062\";\n  await (0, _reporters.testStep)(\n    \"Can visit the block editor and add a Eventbrite block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _wpAdmin.EventbriteBlock.name(),\n        _wpAdmin.EventbriteBlock.title()\n      );\n      const eventbriteBlock = new _wpAdmin.EventbriteBlock(\n        blockId,\n        page,\n        eventId\n      );\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _reporters.testStep)(\n    \"Can publish a post with a Eventbrite block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporters.testStep)(\n    \"Can assert that Eventbrite block is rendered\",\n    async () => {\n      const frontend = await _pages.PostFrontendPage.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wpAdmin.EventbriteBlock, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const eventId = &quot;112691417062&quot;;\n  await (0, _reporters.testStep)(\n    &quot;Can visit the block editor and add a Eventbrite block&quot;,\n    async () =&gt; {\n      const blockId = await blockEditor.insertBlock(\n        _wpAdmin.EventbriteBlock.name(),\n        _wpAdmin.EventbriteBlock.title()\n      );\n      const eventbriteBlock = new _wpAdmin.EventbriteBlock(\n        blockId,\n        page,\n        eventId\n      );\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _reporters.testStep)(\n    &quot;Can publish a post with a Eventbrite block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporters.testStep)(\n    &quot;Can assert that Eventbrite block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _pages.PostFrontendPage.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wpAdmin.EventbriteBlock, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1637525112951,
        "stop" : 1637525117876,
        "duration" : 4925
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1637525127773,
        "stop" : 1637525132078,
        "duration" : 4305
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  const eventId = \"112691417062\";\n  await (0, _reporters.testStep)(\n    \"Can visit the block editor and add a Eventbrite block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _wpAdmin.EventbriteBlock.name(),\n        _wpAdmin.EventbriteBlock.title()\n      );\n      const eventbriteBlock = new _wpAdmin.EventbriteBlock(\n        blockId,\n        page,\n        eventId\n      );\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _reporters.testStep)(\n    \"Can publish a post with a Eventbrite block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporters.testStep)(\n    \"Can assert that Eventbrite block is rendered\",\n    async () => {\n      const frontend = await _pages.PostFrontendPage.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wpAdmin.EventbriteBlock, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Can visit the block editor and add a Eventbrite block",
      "time" : {
        "start" : 1637525132129,
        "stop" : 1637525140182,
        "duration" : 8053
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Eventbrite",
        "time" : {
          "start" : 1637525132132,
          "stop" : 1637525135477,
          "duration" : 3345
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: eventbrite",
        "time" : {
          "start" : 1637525135495,
          "stop" : 1637525136156,
          "duration" : 661
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Can publish a post with a Eventbrite block",
      "time" : {
        "start" : 1637525140190,
        "stop" : 1637525142386,
        "duration" : 2196
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Publish post",
        "time" : {
          "start" : 1637525140440,
          "stop" : 1637525141953,
          "duration" : 1513
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "View post",
        "time" : {
          "start" : 1637525141958,
          "stop" : 1637525142386,
          "duration" : 428
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Can assert that Eventbrite block is rendered",
      "time" : {
        "start" : 1637525142390,
        "stop" : 1637525143919,
        "duration" : 1529
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "tag",
    "value" : "Jetpack version: 10.4-a.8-1485123682-g2d9a5f9"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 494,
        "unknown" : 0,
        "total" : 494
      },
      "items" : [ {
        "uid" : "bb0b1abcf847017c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/bb0b1abcf847017c",
        "status" : "passed",
        "time" : {
          "start" : 1637510707898,
          "stop" : 1637510719213,
          "duration" : 11315
        }
      }, {
        "uid" : "e54f84f3b4c676df",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/e54f84f3b4c676df",
        "status" : "passed",
        "time" : {
          "start" : 1637496384137,
          "stop" : 1637496394664,
          "duration" : 10527
        }
      }, {
        "uid" : "95e423d4a31eaac8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/95e423d4a31eaac8",
        "status" : "passed",
        "time" : {
          "start" : 1637482069222,
          "stop" : 1637482082389,
          "duration" : 13167
        }
      }, {
        "uid" : "47bd90131a147472",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/47bd90131a147472",
        "status" : "passed",
        "time" : {
          "start" : 1637467666218,
          "stop" : 1637467676608,
          "duration" : 10390
        }
      }, {
        "uid" : "de3cdb3d346aae55",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/de3cdb3d346aae55",
        "status" : "passed",
        "time" : {
          "start" : 1637453352989,
          "stop" : 1637453364835,
          "duration" : 11846
        }
      }, {
        "uid" : "1e6fa5cc26ba78d0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/1e6fa5cc26ba78d0",
        "status" : "passed",
        "time" : {
          "start" : 1637438718589,
          "stop" : 1637438728957,
          "duration" : 10368
        }
      }, {
        "uid" : "9f0c089e25cf2eb7",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/9f0c089e25cf2eb7",
        "status" : "passed",
        "time" : {
          "start" : 1637424389626,
          "stop" : 1637424401005,
          "duration" : 11379
        }
      }, {
        "uid" : "2e55a3d9ba0d56bc",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/2e55a3d9ba0d56bc",
        "status" : "passed",
        "time" : {
          "start" : 1637410138660,
          "stop" : 1637410150747,
          "duration" : 12087
        }
      }, {
        "uid" : "ff39a46273d06edf",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/ff39a46273d06edf",
        "status" : "passed",
        "time" : {
          "start" : 1637395689453,
          "stop" : 1637395700440,
          "duration" : 10987
        }
      }, {
        "uid" : "62f42c23dd0bfb54",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/62f42c23dd0bfb54",
        "status" : "passed",
        "time" : {
          "start" : 1637381208523,
          "stop" : 1637381221748,
          "duration" : 13225
        }
      }, {
        "uid" : "2e8a2cb641d3cb79",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/2e8a2cb641d3cb79",
        "status" : "passed",
        "time" : {
          "start" : 1637366867590,
          "stop" : 1637366877788,
          "duration" : 10198
        }
      }, {
        "uid" : "bab738bc0165ed26",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/bab738bc0165ed26",
        "status" : "passed",
        "time" : {
          "start" : 1637352339208,
          "stop" : 1637352350221,
          "duration" : 11013
        }
      }, {
        "uid" : "899b139c56ec1a36",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/899b139c56ec1a36",
        "status" : "passed",
        "time" : {
          "start" : 1637338216468,
          "stop" : 1637338229452,
          "duration" : 12984
        }
      }, {
        "uid" : "48f729e56b716d4f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/48f729e56b716d4f",
        "status" : "passed",
        "time" : {
          "start" : 1637323530033,
          "stop" : 1637323540317,
          "duration" : 10284
        }
      }, {
        "uid" : "e9753a550fca81cb",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/e9753a550fca81cb",
        "status" : "passed",
        "time" : {
          "start" : 1637309136159,
          "stop" : 1637309146216,
          "duration" : 10057
        }
      }, {
        "uid" : "7e7b25259dd9a259",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/7e7b25259dd9a259",
        "status" : "passed",
        "time" : {
          "start" : 1637294742202,
          "stop" : 1637294755540,
          "duration" : 13338
        }
      }, {
        "uid" : "cca2bf6e469943fa",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/cca2bf6e469943fa",
        "status" : "passed",
        "time" : {
          "start" : 1637265921546,
          "stop" : 1637265934757,
          "duration" : 13211
        }
      }, {
        "uid" : "c149189b73f6d6a7",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/c149189b73f6d6a7",
        "status" : "passed",
        "time" : {
          "start" : 1637251804295,
          "stop" : 1637251817752,
          "duration" : 13457
        }
      }, {
        "uid" : "29ebcfb9348ca1d4",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/29ebcfb9348ca1d4",
        "status" : "passed",
        "time" : {
          "start" : 1637237139065,
          "stop" : 1637237149460,
          "duration" : 10395
        }
      }, {
        "uid" : "2ab5b7e985d4306d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/atomic/report/#testresult/2ab5b7e985d4306d",
        "status" : "passed",
        "time" : {
          "start" : 1637222738032,
          "stop" : 1637222751028,
          "duration" : 12996
        }
      } ]
    },
    "tags" : [ "Jetpack version: 10.4-a.8-1485123682-g2d9a5f9" ]
  },
  "source" : "bbf4ba3b4c5d4f47.json",
  "parameterValues" : [ ]
}