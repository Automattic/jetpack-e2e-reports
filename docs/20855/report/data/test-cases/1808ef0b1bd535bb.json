{
  "uid" : "1808ef0b1bd535bb",
  "name" : "WordAds block",
  "fullName" : "WordAds block",
  "historyId" : "18efccdb8f3fb33e445e77a8ef2cffa3",
  "time" : {
    "start" : 1630403610267,
    "stop" : 1630403629102,
    "duration" : 18835
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _prerequisites.prerequisitesBuilder)()\n    .withActiveModules([\"wordads\"])\n    .build();\n  let blockId;\n  await (0, _reporter.testStep)(\"Add a WordAds block\", async () => {\n    await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n    blockId = await blockEditor.insertBlock(\n      _wordAds.default.name(),\n      _wordAds.default.title()\n    );\n    await blockEditor.selectPostTitle();\n  });\n  await (0, _reporter.testStep)(\n    \"Switch to Wide Skyscraper ad format\",\n    async () => {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Publish a post and assert that WordAds block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  await (0, _prerequisites.prerequisitesBuilder)()\n    .withActiveModules([&quot;wordads&quot;])\n    .build();\n  let blockId;\n  await (0, _reporter.testStep)(&quot;Add a WordAds block&quot;, async () =&gt; {\n    await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n    blockId = await blockEditor.insertBlock(\n      _wordAds.default.name(),\n      _wordAds.default.title()\n    );\n    await blockEditor.selectPostTitle();\n  });\n  await (0, _reporter.testStep)(\n    &quot;Switch to Wide Skyscraper ad format&quot;,\n    async () =&gt; {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Publish a post and assert that WordAds block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1630403569826,
        "stop" : 1630403576666,
        "duration" : 6840
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1630403596592,
        "stop" : 1630403600048,
        "duration" : 3456
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1630403607644,
        "stop" : 1630403610265,
        "duration" : 2621
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _prerequisites.prerequisitesBuilder)()\n    .withActiveModules([\"wordads\"])\n    .build();\n  let blockId;\n  await (0, _reporter.testStep)(\"Add a WordAds block\", async () => {\n    await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n    blockId = await blockEditor.insertBlock(\n      _wordAds.default.name(),\n      _wordAds.default.title()\n    );\n    await blockEditor.selectPostTitle();\n  });\n  await (0, _reporter.testStep)(\n    \"Switch to Wide Skyscraper ad format\",\n    async () => {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Publish a post and assert that WordAds block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Add a WordAds block",
      "time" : {
        "start" : 1630403616844,
        "stop" : 1630403623675,
        "duration" : 6831
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Ad",
        "time" : {
          "start" : 1630403620924,
          "stop" : 1630403622332,
          "duration" : 1408
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: wordads",
        "time" : {
          "start" : 1630403622339,
          "stop" : 1630403623274,
          "duration" : 935
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Switch to Wide Skyscraper ad format",
      "time" : {
        "start" : 1630403623680,
        "stop" : 1630403624369,
        "duration" : 689
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Publish a post and assert that WordAds block is rendered",
      "time" : {
        "start" : 1630403624375,
        "stop" : 1630403629043,
        "duration" : 4668
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Publish post",
        "time" : {
          "start" : 1630403624529,
          "stop" : 1630403625711,
          "duration" : 1182
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "View post",
        "time" : {
          "start" : 1630403625715,
          "stop" : 1630403626211,
          "duration" : 496
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 11,
        "unknown" : 0,
        "total" : 11
      },
      "items" : [ {
        "uid" : "e83fd77f46a6b938",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20855/report/#testresult/e83fd77f46a6b938",
        "status" : "passed",
        "time" : {
          "start" : 1630331036995,
          "stop" : 1630331061252,
          "duration" : 24257
        }
      }, {
        "uid" : "761d48dacc02cfda",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20855/report/#testresult/761d48dacc02cfda",
        "status" : "passed",
        "time" : {
          "start" : 1630329786916,
          "stop" : 1630329806727,
          "duration" : 19811
        }
      }, {
        "uid" : "c790c54b774694ca",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20855/report/#testresult/c790c54b774694ca",
        "status" : "passed",
        "time" : {
          "start" : 1630328738723,
          "stop" : 1630328756715,
          "duration" : 17992
        }
      }, {
        "uid" : "8e263d4006daad99",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20855/report/#testresult/8e263d4006daad99",
        "status" : "passed",
        "time" : {
          "start" : 1630322682395,
          "stop" : 1630322698794,
          "duration" : 16399
        }
      }, {
        "uid" : "7f086f9df3af60d6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20855/report/#testresult/7f086f9df3af60d6",
        "status" : "passed",
        "time" : {
          "start" : 1630311540736,
          "stop" : 1630311557874,
          "duration" : 17138
        }
      }, {
        "uid" : "cf081399afc195b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20855/report/#testresult/cf081399afc195b",
        "status" : "passed",
        "time" : {
          "start" : 1630310749410,
          "stop" : 1630310763573,
          "duration" : 14163
        }
      }, {
        "uid" : "fdb7e3045b5f888e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20855/report/#testresult/fdb7e3045b5f888e",
        "status" : "passed",
        "time" : {
          "start" : 1630309338707,
          "stop" : 1630309351822,
          "duration" : 13115
        }
      }, {
        "uid" : "bfaf8ca800cc4318",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20855/report/#testresult/bfaf8ca800cc4318",
        "status" : "passed",
        "time" : {
          "start" : 1630071193044,
          "stop" : 1630071209862,
          "duration" : 16818
        }
      }, {
        "uid" : "e70154167772985d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20855/report/#testresult/e70154167772985d",
        "status" : "passed",
        "time" : {
          "start" : 1630068379055,
          "stop" : 1630068400705,
          "duration" : 21650
        }
      }, {
        "uid" : "6728464311141b9a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20855/report/#testresult/6728464311141b9a",
        "status" : "passed",
        "time" : {
          "start" : 1630067106244,
          "stop" : 1630067125072,
          "duration" : 18828
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "1808ef0b1bd535bb.json",
  "parameterValues" : [ ]
}