{
  "uid" : "23a6b92f6a92da65",
  "name" : "Eventbrite block",
  "fullName" : "Eventbrite block",
  "historyId" : "0b4a15ebb314cfb213eb3e305bfce89d",
  "time" : {
    "start" : 1630405990669,
    "stop" : 1630406003176,
    "duration" : 12507
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const eventId = \"112691417062\";\n  await (0, _reporter.testStep)(\n    \"Can visit the block editor and add a Eventbrite block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _eventbrite.default.name(),\n        _eventbrite.default.title()\n      );\n      const eventbriteBlock = new _eventbrite.default(blockId, page, eventId);\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can publish a post with a Eventbrite block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Eventbrite block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_eventbrite.default, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const eventId = &quot;112691417062&quot;;\n  await (0, _reporter.testStep)(\n    &quot;Can visit the block editor and add a Eventbrite block&quot;,\n    async () =&gt; {\n      const blockId = await blockEditor.insertBlock(\n        _eventbrite.default.name(),\n        _eventbrite.default.title()\n      );\n      const eventbriteBlock = new _eventbrite.default(blockId, page, eventId);\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can publish a post with a Eventbrite block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can assert that Eventbrite block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_eventbrite.default, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1630405961095,
        "stop" : 1630405971940,
        "duration" : 10845
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1630405987428,
        "stop" : 1630405990660,
        "duration" : 3232
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  const eventId = \"112691417062\";\n  await (0, _reporter.testStep)(\n    \"Can visit the block editor and add a Eventbrite block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _eventbrite.default.name(),\n        _eventbrite.default.title()\n      );\n      const eventbriteBlock = new _eventbrite.default(blockId, page, eventId);\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can publish a post with a Eventbrite block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Eventbrite block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_eventbrite.default, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Can visit the block editor and add a Eventbrite block",
      "time" : {
        "start" : 1630405990721,
        "stop" : 1630405997668,
        "duration" : 6947
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Eventbrite",
        "time" : {
          "start" : 1630405990724,
          "stop" : 1630405992262,
          "duration" : 1538
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: eventbrite",
        "time" : {
          "start" : 1630405992265,
          "stop" : 1630405992798,
          "duration" : 533
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Can publish a post with a Eventbrite block",
      "time" : {
        "start" : 1630405997669,
        "stop" : 1630406002056,
        "duration" : 4387
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Publish post",
        "time" : {
          "start" : 1630405997972,
          "stop" : 1630406001461,
          "duration" : 3489
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "View post",
        "time" : {
          "start" : 1630406001467,
          "stop" : 1630406002056,
          "duration" : 589
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Can assert that Eventbrite block is rendered",
      "time" : {
        "start" : 1630406002059,
        "stop" : 1630406003139,
        "duration" : 1080
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 13,
        "unknown" : 0,
        "total" : 13
      },
      "items" : [ {
        "uid" : "3199a8c172327ba6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20855/report/#testresult/3199a8c172327ba6",
        "status" : "passed",
        "time" : {
          "start" : 1630404213791,
          "stop" : 1630404220090,
          "duration" : 6299
        }
      }, {
        "uid" : "d3e4424b396b7d83",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20855/report/#testresult/d3e4424b396b7d83",
        "status" : "passed",
        "time" : {
          "start" : 1630403678871,
          "stop" : 1630403688529,
          "duration" : 9658
        }
      }, {
        "uid" : "5b5d2133d7ede7b9",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20855/report/#testresult/5b5d2133d7ede7b9",
        "status" : "passed",
        "time" : {
          "start" : 1630331101165,
          "stop" : 1630331110780,
          "duration" : 9615
        }
      }, {
        "uid" : "16efb7b4e1be5ff8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20855/report/#testresult/16efb7b4e1be5ff8",
        "status" : "passed",
        "time" : {
          "start" : 1630329856655,
          "stop" : 1630329866582,
          "duration" : 9927
        }
      }, {
        "uid" : "719d6281bafa8e93",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20855/report/#testresult/719d6281bafa8e93",
        "status" : "passed",
        "time" : {
          "start" : 1630328803295,
          "stop" : 1630328813294,
          "duration" : 9999
        }
      }, {
        "uid" : "7708a5f0cc4ddd8f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20855/report/#testresult/7708a5f0cc4ddd8f",
        "status" : "passed",
        "time" : {
          "start" : 1630322741849,
          "stop" : 1630322752384,
          "duration" : 10535
        }
      }, {
        "uid" : "ca4187b95b2010bd",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20855/report/#testresult/ca4187b95b2010bd",
        "status" : "passed",
        "time" : {
          "start" : 1630311608904,
          "stop" : 1630311619260,
          "duration" : 10356
        }
      }, {
        "uid" : "13479c7a03b795f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20855/report/#testresult/13479c7a03b795f",
        "status" : "passed",
        "time" : {
          "start" : 1630310796377,
          "stop" : 1630310803780,
          "duration" : 7403
        }
      }, {
        "uid" : "5c6aed09dcd0edac",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20855/report/#testresult/5c6aed09dcd0edac",
        "status" : "passed",
        "time" : {
          "start" : 1630309390300,
          "stop" : 1630309399937,
          "duration" : 9637
        }
      }, {
        "uid" : "6d8d70438b11dc0d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20855/report/#testresult/6d8d70438b11dc0d",
        "status" : "passed",
        "time" : {
          "start" : 1630071253493,
          "stop" : 1630071264599,
          "duration" : 11106
        }
      }, {
        "uid" : "d0c586db34de9fd1",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20855/report/#testresult/d0c586db34de9fd1",
        "status" : "passed",
        "time" : {
          "start" : 1630068455382,
          "stop" : 1630068464986,
          "duration" : 9604
        }
      }, {
        "uid" : "f19cd7b8b83298b7",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20855/report/#testresult/f19cd7b8b83298b7",
        "status" : "passed",
        "time" : {
          "start" : 1630067173837,
          "stop" : 1630067184354,
          "duration" : 10517
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "23a6b92f6a92da65.json",
  "parameterValues" : [ ]
}