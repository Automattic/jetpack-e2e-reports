{
  "uid" : "1e3bc82bdedb5025",
  "name" : "Pay with PayPal",
  "fullName" : "Pay with PayPal",
  "historyId" : "2b956f1af1e91da7ea3b442b8c2cddca",
  "time" : {
    "start" : 1625530057491,
    "stop" : 1625530066658,
    "duration" : 9167
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pay with PayPal block\",\n    async () => {\n      await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n      blockId = await blockEditor.insertBlock(\n        _simplePayments.default.name(),\n        _simplePayments.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can fill details of Pay with PayPal block\",\n    async () => {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that Pay with PayPal block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a Pay with PayPal block&quot;,\n    async () =&gt; {\n      await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n      blockId = await blockEditor.insertBlock(\n        _simplePayments.default.name(),\n        _simplePayments.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can fill details of Pay with PayPal block&quot;,\n    async () =&gt; {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that Pay with PayPal block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 9,
        "unknown" : 0,
        "total" : 9
      },
      "items" : [ {
        "uid" : "271240a9964b1bbf",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20224/report/#testresult/271240a9964b1bbf",
        "status" : "passed",
        "time" : {
          "start" : 1625452724246,
          "stop" : 1625452731368,
          "duration" : 7122
        }
      }, {
        "uid" : "92ccad73a1dcce",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20224/report/#testresult/92ccad73a1dcce",
        "status" : "passed",
        "time" : {
          "start" : 1625443375752,
          "stop" : 1625443382455,
          "duration" : 6703
        }
      }, {
        "uid" : "8ab529953914685",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20224/report/#testresult/8ab529953914685",
        "status" : "passed",
        "time" : {
          "start" : 1625191951778,
          "stop" : 1625191960315,
          "duration" : 8537
        }
      }, {
        "uid" : "f9e0c7dafdd90c05",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20224/report/#testresult/f9e0c7dafdd90c05",
        "status" : "passed",
        "time" : {
          "start" : 1625191232345,
          "stop" : 1625191239267,
          "duration" : 6922
        }
      }, {
        "uid" : "da170388e5fb1173",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20224/report/#testresult/da170388e5fb1173",
        "status" : "passed",
        "time" : {
          "start" : 1625179858509,
          "stop" : 1625179864871,
          "duration" : 6362
        }
      }, {
        "uid" : "848fc34a87bcb277",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20224/report/#testresult/848fc34a87bcb277",
        "status" : "passed",
        "time" : {
          "start" : 1625176443716,
          "stop" : 1625176449729,
          "duration" : 6013
        }
      }, {
        "uid" : "da0f10c2b939f160",
        "status" : "passed",
        "time" : {
          "start" : 1625093954150,
          "stop" : 1625093960037,
          "duration" : 5887
        }
      }, {
        "uid" : "5a69c94175e3d9b8",
        "status" : "passed",
        "time" : {
          "start" : 1625050273215,
          "stop" : 1625050282698,
          "duration" : 9483
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "1e3bc82bdedb5025.json",
  "parameterValues" : [ ]
}