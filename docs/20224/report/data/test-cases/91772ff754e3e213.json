{
  "uid" : "91772ff754e3e213",
  "name" : "WordAds block",
  "fullName" : "WordAds block",
  "historyId" : "18efccdb8f3fb33e445e77a8ef2cffa3",
  "time" : {
    "start" : 1625548594713,
    "stop" : 1625548599930,
    "duration" : 5217
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a WordAds block\",\n    async () => {\n      await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n      blockId = await blockEditor.insertBlock(\n        _wordAds.default.name(),\n        _wordAds.default.title()\n      );\n      await blockEditor.selectPostTitle();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can switch to Wide Skyscraper ad format\",\n    async () => {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that WordAds block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a WordAds block&quot;,\n    async () =&gt; {\n      await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n      blockId = await blockEditor.insertBlock(\n        _wordAds.default.name(),\n        _wordAds.default.title()\n      );\n      await blockEditor.selectPostTitle();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can switch to Wide Skyscraper ad format&quot;,\n    async () =&gt; {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that WordAds block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 11,
        "unknown" : 0,
        "total" : 11
      },
      "items" : [ {
        "uid" : "f8c2d354641c1b1d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20224/report/#testresult/f8c2d354641c1b1d",
        "status" : "passed",
        "time" : {
          "start" : 1625532675071,
          "stop" : 1625532680126,
          "duration" : 5055
        }
      }, {
        "uid" : "ed098fbe4b163443",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20224/report/#testresult/ed098fbe4b163443",
        "status" : "passed",
        "time" : {
          "start" : 1625530070266,
          "stop" : 1625530076900,
          "duration" : 6634
        }
      }, {
        "uid" : "8d8a57af5caf7675",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20224/report/#testresult/8d8a57af5caf7675",
        "status" : "passed",
        "time" : {
          "start" : 1625452733672,
          "stop" : 1625452738195,
          "duration" : 4523
        }
      }, {
        "uid" : "60cce4b282d3d8ee",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20224/report/#testresult/60cce4b282d3d8ee",
        "status" : "passed",
        "time" : {
          "start" : 1625443384839,
          "stop" : 1625443389329,
          "duration" : 4490
        }
      }, {
        "uid" : "7f06483a59680600",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20224/report/#testresult/7f06483a59680600",
        "status" : "passed",
        "time" : {
          "start" : 1625191963122,
          "stop" : 1625191968670,
          "duration" : 5548
        }
      }, {
        "uid" : "b1b49b4e02a94c80",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20224/report/#testresult/b1b49b4e02a94c80",
        "status" : "passed",
        "time" : {
          "start" : 1625191241240,
          "stop" : 1625191245195,
          "duration" : 3955
        }
      }, {
        "uid" : "704441aac126e53f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20224/report/#testresult/704441aac126e53f",
        "status" : "passed",
        "time" : {
          "start" : 1625179866855,
          "stop" : 1625179870896,
          "duration" : 4041
        }
      }, {
        "uid" : "47f73f79e737a6a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20224/report/#testresult/47f73f79e737a6a",
        "status" : "passed",
        "time" : {
          "start" : 1625176451702,
          "stop" : 1625176455538,
          "duration" : 3836
        }
      }, {
        "uid" : "5f81486aacd1b31f",
        "status" : "passed",
        "time" : {
          "start" : 1625093962190,
          "stop" : 1625093966302,
          "duration" : 4112
        }
      }, {
        "uid" : "406b79c4e284fd4b",
        "status" : "passed",
        "time" : {
          "start" : 1625050285894,
          "stop" : 1625050292382,
          "duration" : 6488
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "91772ff754e3e213.json",
  "parameterValues" : [ ]
}