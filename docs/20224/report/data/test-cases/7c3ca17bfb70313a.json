{
  "uid" : "7c3ca17bfb70313a",
  "name" : "MailChimp Block",
  "fullName" : "MailChimp Block",
  "historyId" : "1e0e5667b8c419e68fc1ae6a0d73dd61",
  "time" : {
    "start" : 1625548563582,
    "stop" : 1625548581570,
    "duration" : 17988
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a MailChimp block\",\n    async () => {\n      blockId = await blockEditor.insertBlock(\n        _mailchimp.default.name(),\n        _mailchimp.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\"Can connect to a MailChimp\", async () => {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that MailChimp block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a MailChimp block&quot;,\n    async () =&gt; {\n      blockId = await blockEditor.insertBlock(\n        _mailchimp.default.name(),\n        _mailchimp.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(&quot;Can connect to a MailChimp&quot;, async () =&gt; {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that MailChimp block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 11,
        "unknown" : 0,
        "total" : 11
      },
      "items" : [ {
        "uid" : "deb3295fa021840a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20224/report/#testresult/deb3295fa021840a",
        "status" : "passed",
        "time" : {
          "start" : 1625532646252,
          "stop" : 1625532662601,
          "duration" : 16349
        }
      }, {
        "uid" : "d49c65d2cb35273e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20224/report/#testresult/d49c65d2cb35273e",
        "status" : "passed",
        "time" : {
          "start" : 1625530032772,
          "stop" : 1625530053962,
          "duration" : 21190
        }
      }, {
        "uid" : "69fe8c0d648d0bee",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20224/report/#testresult/69fe8c0d648d0bee",
        "status" : "passed",
        "time" : {
          "start" : 1625452706113,
          "stop" : 1625452721850,
          "duration" : 15737
        }
      }, {
        "uid" : "79f724b99f7c3138",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20224/report/#testresult/79f724b99f7c3138",
        "status" : "passed",
        "time" : {
          "start" : 1625443359019,
          "stop" : 1625443373407,
          "duration" : 14388
        }
      }, {
        "uid" : "4157e026d0eab692",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20224/report/#testresult/4157e026d0eab692",
        "status" : "passed",
        "time" : {
          "start" : 1625191932659,
          "stop" : 1625191949133,
          "duration" : 16474
        }
      }, {
        "uid" : "84304d2a8542949c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20224/report/#testresult/84304d2a8542949c",
        "status" : "passed",
        "time" : {
          "start" : 1625191215816,
          "stop" : 1625191230249,
          "duration" : 14433
        }
      }, {
        "uid" : "445bc29dbdf01c82",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20224/report/#testresult/445bc29dbdf01c82",
        "status" : "passed",
        "time" : {
          "start" : 1625179841786,
          "stop" : 1625179856284,
          "duration" : 14498
        }
      }, {
        "uid" : "4eb76be685b495c4",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20224/report/#testresult/4eb76be685b495c4",
        "status" : "passed",
        "time" : {
          "start" : 1625176427979,
          "stop" : 1625176441557,
          "duration" : 13578
        }
      }, {
        "uid" : "7f99cc9d1a58f00",
        "status" : "passed",
        "time" : {
          "start" : 1625093936926,
          "stop" : 1625093951182,
          "duration" : 14256
        }
      }, {
        "uid" : "9cabe74a52683456",
        "status" : "passed",
        "time" : {
          "start" : 1625050247488,
          "stop" : 1625050270327,
          "duration" : 22839
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "7c3ca17bfb70313a.json",
  "parameterValues" : [ ]
}