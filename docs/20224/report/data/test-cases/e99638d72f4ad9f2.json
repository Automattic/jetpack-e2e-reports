{
  "uid" : "e99638d72f4ad9f2",
  "name" : "Pinterest block",
  "fullName" : "Pinterest block",
  "historyId" : "bf919c5c1253559f0d007402decf47af",
  "time" : {
    "start" : 1625532717094,
    "stop" : 1625532723838,
    "duration" : 6744
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pinterest block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _pinterest.default.name(),\n        _pinterest.default.title()\n      );\n      const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n      await pinterestBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const pinId = _config.default.get(&quot;blocks.pinterest.pinId&quot;);\n\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a Pinterest block&quot;,\n    async () =&gt; {\n      const blockId = await blockEditor.insertBlock(\n        _pinterest.default.name(),\n        _pinterest.default.title()\n      );\n      const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n      await pinterestBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post with a Pinterest block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can assert that Pinterest block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 10,
        "unknown" : 0,
        "total" : 10
      },
      "items" : [ {
        "uid" : "8a63a5b46e11c617",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20224/report/#testresult/8a63a5b46e11c617",
        "status" : "passed",
        "time" : {
          "start" : 1625530128327,
          "stop" : 1625530137861,
          "duration" : 9534
        }
      }, {
        "uid" : "ce9092780cbafd85",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20224/report/#testresult/ce9092780cbafd85",
        "status" : "passed",
        "time" : {
          "start" : 1625452778140,
          "stop" : 1625452784924,
          "duration" : 6784
        }
      }, {
        "uid" : "7945fe5f072dba9a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20224/report/#testresult/7945fe5f072dba9a",
        "status" : "passed",
        "time" : {
          "start" : 1625443428050,
          "stop" : 1625443435769,
          "duration" : 7719
        }
      }, {
        "uid" : "ff6a8a73a0aae9e5",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20224/report/#testresult/ff6a8a73a0aae9e5",
        "status" : "passed",
        "time" : {
          "start" : 1625192011022,
          "stop" : 1625192016568,
          "duration" : 5546
        }
      }, {
        "uid" : "cc74992c4093d942",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20224/report/#testresult/cc74992c4093d942",
        "status" : "passed",
        "time" : {
          "start" : 1625191276222,
          "stop" : 1625191281610,
          "duration" : 5388
        }
      }, {
        "uid" : "4703ac86da4a7eed",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20224/report/#testresult/4703ac86da4a7eed",
        "status" : "passed",
        "time" : {
          "start" : 1625179904783,
          "stop" : 1625179910968,
          "duration" : 6185
        }
      }, {
        "uid" : "7423804082b93bc7",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20224/report/#testresult/7423804082b93bc7",
        "status" : "passed",
        "time" : {
          "start" : 1625176487373,
          "stop" : 1625176491973,
          "duration" : 4600
        }
      }, {
        "uid" : "a027f3b33b9a8993",
        "status" : "passed",
        "time" : {
          "start" : 1625093999563,
          "stop" : 1625094005806,
          "duration" : 6243
        }
      }, {
        "uid" : "d3f5ea23e9f6ca12",
        "status" : "passed",
        "time" : {
          "start" : 1625050342286,
          "stop" : 1625050350987,
          "duration" : 8701
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "e99638d72f4ad9f2.json",
  "parameterValues" : [ ]
}