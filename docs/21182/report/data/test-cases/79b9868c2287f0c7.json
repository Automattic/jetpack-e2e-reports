{
  "uid" : "79b9868c2287f0c7",
  "name" : "Pinterest block",
  "fullName" : "Pinterest block",
  "historyId" : "bf919c5c1253559f0d007402decf47af",
  "time" : {
    "start" : 1633086859358,
    "stop" : 1633086867012,
    "duration" : 7654
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _reporter.testStep)(\"Add a Pinterest block\", async () => {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const pinId = _config.default.get(&quot;blocks.pinterest.pinId&quot;);\n\n  await (0, _reporter.testStep)(&quot;Add a Pinterest block&quot;, async () =&gt; {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    &quot;Publish a post with a Pinterest block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can assert that Pinterest block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1633086853853,
        "stop" : 1633086859351,
        "duration" : 5498
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1633086867141,
        "stop" : 1633086869192,
        "duration" : 2051
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _reporter.testStep)(\"Add a Pinterest block\", async () => {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Add a Pinterest block",
      "time" : {
        "start" : 1633086859391,
        "stop" : 1633086861969,
        "duration" : 2578
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Pinterest",
        "time" : {
          "start" : 1633086859398,
          "stop" : 1633086860536,
          "duration" : 1138
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: pinterest",
        "time" : {
          "start" : 1633086860538,
          "stop" : 1633086860846,
          "duration" : 308
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Publish a post with a Pinterest block",
      "time" : {
        "start" : 1633086861970,
        "stop" : 1633086866277,
        "duration" : 4307
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Publish post",
        "time" : {
          "start" : 1633086862064,
          "stop" : 1633086865099,
          "duration" : 3035
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "View post",
        "time" : {
          "start" : 1633086865100,
          "stop" : 1633086866277,
          "duration" : 1177
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Can assert that Pinterest block is rendered",
      "time" : {
        "start" : 1633086866279,
        "stop" : 1633086866994,
        "duration" : 715
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "tag",
    "value" : "Jetpack version: 10.3-alpha-d266ff597addd9db1e0af6fced126c673cfd4303"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 9,
        "unknown" : 0,
        "total" : 9
      },
      "items" : [ {
        "uid" : "43a235dc05a41aef",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21182/report/#testresult/43a235dc05a41aef",
        "status" : "passed",
        "time" : {
          "start" : 1633076161948,
          "stop" : 1633076168974,
          "duration" : 7026
        }
      }, {
        "uid" : "c14161561337fd08",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21182/report/#testresult/c14161561337fd08",
        "status" : "passed",
        "time" : {
          "start" : 1633074787546,
          "stop" : 1633074794839,
          "duration" : 7293
        }
      }, {
        "uid" : "ae8dfbef4a6b750d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21182/report/#testresult/ae8dfbef4a6b750d",
        "status" : "passed",
        "time" : {
          "start" : 1632985372144,
          "stop" : 1632985380868,
          "duration" : 8724
        }
      }, {
        "uid" : "8b6a8e12e209deb7",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21182/report/#testresult/8b6a8e12e209deb7",
        "status" : "passed",
        "time" : {
          "start" : 1632907194154,
          "stop" : 1632907201390,
          "duration" : 7236
        }
      }, {
        "uid" : "d0fe1b99a18624fc",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21182/report/#testresult/d0fe1b99a18624fc",
        "status" : "passed",
        "time" : {
          "start" : 1632812218353,
          "stop" : 1632812226724,
          "duration" : 8371
        }
      }, {
        "uid" : "2000f465ad592114",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21182/report/#testresult/2000f465ad592114",
        "status" : "passed",
        "time" : {
          "start" : 1632810111185,
          "stop" : 1632810119567,
          "duration" : 8382
        }
      }, {
        "uid" : "3f43e57345479773",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21182/report/#testresult/3f43e57345479773",
        "status" : "passed",
        "time" : {
          "start" : 1632807828407,
          "stop" : 1632807835189,
          "duration" : 6782
        }
      }, {
        "uid" : "1ca0a6f3f1903c00",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21182/report/#testresult/1ca0a6f3f1903c00",
        "status" : "passed",
        "time" : {
          "start" : 1632463781583,
          "stop" : 1632463787950,
          "duration" : 6367
        }
      } ]
    },
    "tags" : [ "Jetpack version: 10.3-alpha-d266ff597addd9db1e0af6fced126c673cfd4303" ]
  },
  "source" : "79b9868c2287f0c7.json",
  "parameterValues" : [ ]
}