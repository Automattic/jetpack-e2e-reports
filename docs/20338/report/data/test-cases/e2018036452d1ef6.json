{
  "uid" : "e2018036452d1ef6",
  "name" : "MailChimp Block",
  "fullName" : "MailChimp Block",
  "historyId" : "1e0e5667b8c419e68fc1ae6a0d73dd61",
  "time" : {
    "start" : 1628021368480,
    "stop" : 1628021387027,
    "duration" : 18547
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a MailChimp block\",\n    async () => {\n      blockId = await blockEditor.insertBlock(\n        _mailchimp.default.name(),\n        _mailchimp.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\"Can connect to a MailChimp\", async () => {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that MailChimp block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a MailChimp block&quot;,\n    async () =&gt; {\n      blockId = await blockEditor.insertBlock(\n        _mailchimp.default.name(),\n        _mailchimp.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(&quot;Can connect to a MailChimp&quot;, async () =&gt; {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that MailChimp block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 7,
        "unknown" : 0,
        "total" : 8
      },
      "items" : [ {
        "uid" : "c655fee5d34b7fad",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20338/report/#testresult/c655fee5d34b7fad",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1627927058370,
          "stop" : 1627927117156,
          "duration" : 58786
        }
      }, {
        "uid" : "cda22454d0921855",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20338/report/#testresult/cda22454d0921855",
        "status" : "passed",
        "time" : {
          "start" : 1626991388297,
          "stop" : 1626991412088,
          "duration" : 23791
        }
      }, {
        "uid" : "818a373b414d45cf",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20338/report/#testresult/818a373b414d45cf",
        "status" : "passed",
        "time" : {
          "start" : 1626448070605,
          "stop" : 1626448088274,
          "duration" : 17669
        }
      }, {
        "uid" : "95af2485cf1ef8e5",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20338/report/#testresult/95af2485cf1ef8e5",
        "status" : "passed",
        "time" : {
          "start" : 1626204219548,
          "stop" : 1626204236456,
          "duration" : 16908
        }
      }, {
        "uid" : "46a64b5fed8e0bc2",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20338/report/#testresult/46a64b5fed8e0bc2",
        "status" : "passed",
        "time" : {
          "start" : 1626126005489,
          "stop" : 1626126018636,
          "duration" : 13147
        }
      }, {
        "uid" : "4585d52b64c99ace",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20338/report/#testresult/4585d52b64c99ace",
        "status" : "passed",
        "time" : {
          "start" : 1626120899910,
          "stop" : 1626120916040,
          "duration" : 16130
        }
      }, {
        "uid" : "1ffbc6eefa62691a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20338/report/#testresult/1ffbc6eefa62691a",
        "status" : "passed",
        "time" : {
          "start" : 1626119549961,
          "stop" : 1626119565150,
          "duration" : 15189
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "e2018036452d1ef6.json",
  "parameterValues" : [ ]
}