{
  "uid" : "95a78969a70020ce",
  "name" : "Plugin updater",
  "fullName" : "Plugin updater",
  "historyId" : "852b81330bf593f57dd55d00e7a2eb83",
  "time" : {
    "start" : 1628615890911,
    "stop" : 1628615930696,
    "duration" : 39785
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _reporter.testStep)(\n    \"Can login and navigate to Plugins page\",\n    async () => {\n      await (await _sidebar.default.init(page)).selectInstalledPlugins();\n      await _plugins.default.init(page);\n    }\n  );\n  await (0, _reporter.testStep)(\"Can update Jetpack\", async () => {\n    const pluginsPage = await _plugins.default.init(page);\n    const versionBefore = await pluginsPage.getJetpackVersion();\n    await pluginsPage.updateJetpack();\n    const versionAfter = await pluginsPage.getJetpackVersion();\n\n    expect(versionBefore).not.toBe(versionAfter);\n  });\n  await (0, _reporter.testStep)(\"Can connect Jetpack\", async () => {\n    await (await _sidebar.default.init(page)).selectJetpack();\n    await (0, _jetpackConnect.doInPlaceConnection)();\n    const jetpackPage = await _jetpack.default.init(page);\n    expect(await jetpackPage.isConnected()).toBeTruthy();\n  });\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  await (0, _reporter.testStep)(\n    &quot;Can login and navigate to Plugins page&quot;,\n    async () =&gt; {\n      await (await _sidebar.default.init(page)).selectInstalledPlugins();\n      await _plugins.default.init(page);\n    }\n  );\n  await (0, _reporter.testStep)(&quot;Can update Jetpack&quot;, async () =&gt; {\n    const pluginsPage = await _plugins.default.init(page);\n    const versionBefore = await pluginsPage.getJetpackVersion();\n    await pluginsPage.updateJetpack();\n    const versionAfter = await pluginsPage.getJetpackVersion();\n\n    expect(versionBefore).not.toBe(versionAfter);\n  });\n  await (0, _reporter.testStep)(&quot;Can connect Jetpack&quot;, async () =&gt; {\n    await (await _sidebar.default.init(page)).selectJetpack();\n    await (0, _jetpackConnect.doInPlaceConnection)();\n    const jetpackPage = await _jetpack.default.init(page);\n    expect(await jetpackPage.isConnected()).toBeTruthy();\n  });\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _reporter.testStep)(\n    \"Can login and navigate to Plugins page\",\n    async () => {\n      await (await _sidebar.default.init(page)).selectInstalledPlugins();\n      await _plugins.default.init(page);\n    }\n  );\n  await (0, _reporter.testStep)(\"Can update Jetpack\", async () => {\n    const pluginsPage = await _plugins.default.init(page);\n    const versionBefore = await pluginsPage.getJetpackVersion();\n    await pluginsPage.updateJetpack();\n    const versionAfter = await pluginsPage.getJetpackVersion();\n\n    expect(versionBefore).not.toBe(versionAfter);\n  });\n  await (0, _reporter.testStep)(\"Can connect Jetpack\", async () => {\n    await (await _sidebar.default.init(page)).selectJetpack();\n    await (0, _jetpackConnect.doInPlaceConnection)();\n    const jetpackPage = await _jetpack.default.init(page);\n    expect(await jetpackPage.isConnected()).toBeTruthy();\n  });\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Can login and navigate to Plugins page",
      "time" : {
        "start" : 1628615891053,
        "stop" : 1628615892926,
        "duration" : 1873
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can update Jetpack",
      "time" : {
        "start" : 1628615892928,
        "stop" : 1628615897484,
        "duration" : 4556
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can connect Jetpack",
      "time" : {
        "start" : 1628615897486,
        "stop" : 1628615930678,
        "duration" : 33192
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "plugin-updater.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 9,
        "unknown" : 0,
        "total" : 9
      },
      "items" : [ {
        "uid" : "66ccc721d8194036",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20338/report/#testresult/66ccc721d8194036",
        "status" : "passed",
        "time" : {
          "start" : 1628021182222,
          "stop" : 1628021228109,
          "duration" : 45887
        }
      }, {
        "uid" : "841e86f2de9970f2",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20338/report/#testresult/841e86f2de9970f2",
        "status" : "passed",
        "time" : {
          "start" : 1627926939602,
          "stop" : 1627926981090,
          "duration" : 41488
        }
      }, {
        "uid" : "23746f020ab53248",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20338/report/#testresult/23746f020ab53248",
        "status" : "passed",
        "time" : {
          "start" : 1626991090864,
          "stop" : 1626991122917,
          "duration" : 32053
        }
      }, {
        "uid" : "a3e07777d7a9e874",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20338/report/#testresult/a3e07777d7a9e874",
        "status" : "passed",
        "time" : {
          "start" : 1626447809340,
          "stop" : 1626447851387,
          "duration" : 42047
        }
      }, {
        "uid" : "78703a1647b2b1b6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20338/report/#testresult/78703a1647b2b1b6",
        "status" : "passed",
        "time" : {
          "start" : 1626204063264,
          "stop" : 1626204111199,
          "duration" : 47935
        }
      }, {
        "uid" : "b7edbe173af20aac",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20338/report/#testresult/b7edbe173af20aac",
        "status" : "passed",
        "time" : {
          "start" : 1626125906096,
          "stop" : 1626125950868,
          "duration" : 44772
        }
      }, {
        "uid" : "76e8918ebe3d91cf",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20338/report/#testresult/76e8918ebe3d91cf",
        "status" : "passed",
        "time" : {
          "start" : 1626120778974,
          "stop" : 1626120822459,
          "duration" : 43485
        }
      }, {
        "uid" : "868a3f66a58d201f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20338/report/#testresult/868a3f66a58d201f",
        "status" : "passed",
        "time" : {
          "start" : 1626119424436,
          "stop" : 1626119485317,
          "duration" : 60881
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "95a78969a70020ce.json",
  "parameterValues" : [ ]
}