{
  "uid" : "99b7427f2728fc0f",
  "name" : "Pay with PayPal",
  "fullName" : "Pay with PayPal",
  "historyId" : "2b956f1af1e91da7ea3b442b8c2cddca",
  "time" : {
    "start" : 1628021389873,
    "stop" : 1628021400873,
    "duration" : 11000
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pay with PayPal block\",\n    async () => {\n      await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n      blockId = await blockEditor.insertBlock(\n        _simplePayments.default.name(),\n        _simplePayments.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can fill details of Pay with PayPal block\",\n    async () => {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that Pay with PayPal block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a Pay with PayPal block&quot;,\n    async () =&gt; {\n      await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n      blockId = await blockEditor.insertBlock(\n        _simplePayments.default.name(),\n        _simplePayments.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can fill details of Pay with PayPal block&quot;,\n    async () =&gt; {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that Pay with PayPal block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 8,
        "unknown" : 0,
        "total" : 8
      },
      "items" : [ {
        "uid" : "3f2334bea71246db",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20338/report/#testresult/3f2334bea71246db",
        "status" : "passed",
        "time" : {
          "start" : 1627927119532,
          "stop" : 1627927127676,
          "duration" : 8144
        }
      }, {
        "uid" : "741dbf9f451722dc",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20338/report/#testresult/741dbf9f451722dc",
        "status" : "passed",
        "time" : {
          "start" : 1626991415542,
          "stop" : 1626991430958,
          "duration" : 15416
        }
      }, {
        "uid" : "4d698e63149218a8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20338/report/#testresult/4d698e63149218a8",
        "status" : "passed",
        "time" : {
          "start" : 1626448091100,
          "stop" : 1626448100021,
          "duration" : 8921
        }
      }, {
        "uid" : "f168dc0f1f173baa",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20338/report/#testresult/f168dc0f1f173baa",
        "status" : "passed",
        "time" : {
          "start" : 1626204239202,
          "stop" : 1626204246400,
          "duration" : 7198
        }
      }, {
        "uid" : "ecdeed5a10789142",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20338/report/#testresult/ecdeed5a10789142",
        "status" : "passed",
        "time" : {
          "start" : 1626126020956,
          "stop" : 1626126027860,
          "duration" : 6904
        }
      }, {
        "uid" : "9fe6bb8c930410e3",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20338/report/#testresult/9fe6bb8c930410e3",
        "status" : "passed",
        "time" : {
          "start" : 1626120918553,
          "stop" : 1626120926018,
          "duration" : 7465
        }
      }, {
        "uid" : "f14a8a30d7f4cd8f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20338/report/#testresult/f14a8a30d7f4cd8f",
        "status" : "passed",
        "time" : {
          "start" : 1626119567814,
          "stop" : 1626119575602,
          "duration" : 7788
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "99b7427f2728fc0f.json",
  "parameterValues" : [ ]
}