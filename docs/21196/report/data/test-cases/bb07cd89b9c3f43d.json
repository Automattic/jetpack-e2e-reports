{
  "uid" : "bb07cd89b9c3f43d",
  "name" : "WordAds block",
  "fullName" : "WordAds block",
  "historyId" : "18efccdb8f3fb33e445e77a8ef2cffa3",
  "time" : {
    "start" : 1633970004801,
    "stop" : 1633970018801,
    "duration" : 14000
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _prerequisites.prerequisitesBuilder)()\n    .withActiveModules([\"wordads\"])\n    .build();\n  let blockId;\n  await (0, _reporter.testStep)(\"Add a WordAds block\", async () => {\n    await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n    blockId = await blockEditor.insertBlock(\n      _wordAds.default.name(),\n      _wordAds.default.title()\n    );\n    await blockEditor.selectPostTitle();\n  });\n  await (0, _reporter.testStep)(\n    \"Switch to Wide Skyscraper ad format\",\n    async () => {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Publish a post and assert that WordAds block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  await (0, _prerequisites.prerequisitesBuilder)()\n    .withActiveModules([&quot;wordads&quot;])\n    .build();\n  let blockId;\n  await (0, _reporter.testStep)(&quot;Add a WordAds block&quot;, async () =&gt; {\n    await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n    blockId = await blockEditor.insertBlock(\n      _wordAds.default.name(),\n      _wordAds.default.title()\n    );\n    await blockEditor.selectPostTitle();\n  });\n  await (0, _reporter.testStep)(\n    &quot;Switch to Wide Skyscraper ad format&quot;,\n    async () =&gt; {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Publish a post and assert that WordAds block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1633969972192,
        "stop" : 1633969978987,
        "duration" : 6795
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1633969993463,
        "stop" : 1633969996309,
        "duration" : 2846
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1633970001772,
        "stop" : 1633970004777,
        "duration" : 3005
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _prerequisites.prerequisitesBuilder)()\n    .withActiveModules([\"wordads\"])\n    .build();\n  let blockId;\n  await (0, _reporter.testStep)(\"Add a WordAds block\", async () => {\n    await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n    blockId = await blockEditor.insertBlock(\n      _wordAds.default.name(),\n      _wordAds.default.title()\n    );\n    await blockEditor.selectPostTitle();\n  });\n  await (0, _reporter.testStep)(\n    \"Switch to Wide Skyscraper ad format\",\n    async () => {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Publish a post and assert that WordAds block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Add a WordAds block",
      "time" : {
        "start" : 1633970007903,
        "stop" : 1633970014175,
        "duration" : 6272
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Ad",
        "time" : {
          "start" : 1633970011854,
          "stop" : 1633970012688,
          "duration" : 834
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: wordads",
        "time" : {
          "start" : 1633970012691,
          "stop" : 1633970013329,
          "duration" : 638
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Switch to Wide Skyscraper ad format",
      "time" : {
        "start" : 1633970014178,
        "stop" : 1633970014701,
        "duration" : 523
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Publish a post and assert that WordAds block is rendered",
      "time" : {
        "start" : 1633970014706,
        "stop" : 1633970018752,
        "duration" : 4046
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Publish post",
        "time" : {
          "start" : 1633970014832,
          "stop" : 1633970015771,
          "duration" : 939
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "View post",
        "time" : {
          "start" : 1633970015775,
          "stop" : 1633970016262,
          "duration" : 487
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "tag",
    "value" : "Jetpack version: 10.3-alpha-4568bd601c51fbec886809029002fcd60a3ecec1"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 12,
        "unknown" : 0,
        "total" : 12
      },
      "items" : [ {
        "uid" : "5d1b31095c0088ae",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21196/report/#testresult/5d1b31095c0088ae",
        "status" : "passed",
        "time" : {
          "start" : 1633967437777,
          "stop" : 1633967452643,
          "duration" : 14866
        }
      }, {
        "uid" : "1d16276a8fc60007",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21196/report/#testresult/1d16276a8fc60007",
        "status" : "passed",
        "time" : {
          "start" : 1633622062475,
          "stop" : 1633622079817,
          "duration" : 17342
        }
      }, {
        "uid" : "d006835d82540384",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21196/report/#testresult/d006835d82540384",
        "status" : "passed",
        "time" : {
          "start" : 1633390437657,
          "stop" : 1633390455542,
          "duration" : 17885
        }
      }, {
        "uid" : "1f82a3593c342568",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21196/report/#testresult/1f82a3593c342568",
        "status" : "passed",
        "time" : {
          "start" : 1633386906263,
          "stop" : 1633386930022,
          "duration" : 23759
        }
      }, {
        "uid" : "ff9b9c2f1cb1eb58",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21196/report/#testresult/ff9b9c2f1cb1eb58",
        "status" : "passed",
        "time" : {
          "start" : 1633361225970,
          "stop" : 1633361237659,
          "duration" : 11689
        }
      }, {
        "uid" : "a68558e8e69fcecf",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21196/report/#testresult/a68558e8e69fcecf",
        "status" : "passed",
        "time" : {
          "start" : 1633356359653,
          "stop" : 1633356381169,
          "duration" : 21516
        }
      }, {
        "uid" : "d47694f9969882e0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21196/report/#testresult/d47694f9969882e0",
        "status" : "passed",
        "time" : {
          "start" : 1632760175184,
          "stop" : 1632760188737,
          "duration" : 13553
        }
      }, {
        "uid" : "460328dce579662f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21196/report/#testresult/460328dce579662f",
        "status" : "passed",
        "time" : {
          "start" : 1632757151895,
          "stop" : 1632757167312,
          "duration" : 15417
        }
      }, {
        "uid" : "973b5f80ed43c01e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21196/report/#testresult/973b5f80ed43c01e",
        "status" : "passed",
        "time" : {
          "start" : 1632753750684,
          "stop" : 1632753771628,
          "duration" : 20944
        }
      }, {
        "uid" : "459d50db8ce95065",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21196/report/#testresult/459d50db8ce95065",
        "status" : "passed",
        "time" : {
          "start" : 1632752700402,
          "stop" : 1632752720175,
          "duration" : 19773
        }
      }, {
        "uid" : "958b4a0e3c9d6a71",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21196/report/#testresult/958b4a0e3c9d6a71",
        "status" : "passed",
        "time" : {
          "start" : 1632747757998,
          "stop" : 1632747776175,
          "duration" : 18177
        }
      } ]
    },
    "tags" : [ "Jetpack version: 10.3-alpha-4568bd601c51fbec886809029002fcd60a3ecec1" ]
  },
  "source" : "bb07cd89b9c3f43d.json",
  "parameterValues" : [ ]
}