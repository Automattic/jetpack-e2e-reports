{"uuid":"78556b06-9c54-4811-bf18-3c5342ac8eef","historyId":"0b4a15ebb314cfb213eb3e305bfce89d","status":"passed","statusDetails":{},"stage":"finished","steps":[],"attachments":[{"name":"1624401849081_Free_blocks___Eventbrite_block.webm","type":"video/webm","source":"95619984-10ab-4c92-86f1-13d1ed3e8d60-attachment.webm"}],"parameters":[],"labels":[{"name":"thread","value":"1"},{"name":"parentSuite","value":"specs"},{"name":"package","value":"specs"},{"name":"subSuite","value":"free-blocks.test.js"}],"links":[],"start":1624401838820,"name":"Eventbrite block","fullName":"Eventbrite block","description":"\n### Test\n```typescript\nasync () => {\n  const eventId = \"112691417062\";\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Eventbrite block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _eventbrite.default.name(),\n        _eventbrite.default.title()\n      );\n      const eventbriteBlock = new _eventbrite.default(blockId, page, eventId);\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post with a Eventbrite block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can assert that Eventbrite block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_eventbrite.default, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n","stop":1624401849203}