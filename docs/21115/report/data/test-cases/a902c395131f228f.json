{
  "uid" : "a902c395131f228f",
  "name" : "Eventbrite block",
  "fullName" : "Eventbrite block",
  "historyId" : "0b4a15ebb314cfb213eb3e305bfce89d",
  "time" : {
    "start" : 1632507711092,
    "stop" : 1632507721001,
    "duration" : 9909
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const eventId = \"112691417062\";\n  await (0, _reporter.testStep)(\n    \"Can visit the block editor and add a Eventbrite block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _eventbrite.default.name(),\n        _eventbrite.default.title()\n      );\n      const eventbriteBlock = new _eventbrite.default(blockId, page, eventId);\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can publish a post with a Eventbrite block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Eventbrite block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_eventbrite.default, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const eventId = &quot;112691417062&quot;;\n  await (0, _reporter.testStep)(\n    &quot;Can visit the block editor and add a Eventbrite block&quot;,\n    async () =&gt; {\n      const blockId = await blockEditor.insertBlock(\n        _eventbrite.default.name(),\n        _eventbrite.default.title()\n      );\n      const eventbriteBlock = new _eventbrite.default(blockId, page, eventId);\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can publish a post with a Eventbrite block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can assert that Eventbrite block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_eventbrite.default, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1632507694322,
        "stop" : 1632507700718,
        "duration" : 6396
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1632507708717,
        "stop" : 1632507711090,
        "duration" : 2373
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  const eventId = \"112691417062\";\n  await (0, _reporter.testStep)(\n    \"Can visit the block editor and add a Eventbrite block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _eventbrite.default.name(),\n        _eventbrite.default.title()\n      );\n      const eventbriteBlock = new _eventbrite.default(blockId, page, eventId);\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can publish a post with a Eventbrite block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Eventbrite block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_eventbrite.default, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Can visit the block editor and add a Eventbrite block",
      "time" : {
        "start" : 1632507711117,
        "stop" : 1632507716159,
        "duration" : 5042
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Eventbrite",
        "time" : {
          "start" : 1632507711118,
          "stop" : 1632507712080,
          "duration" : 962
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: eventbrite",
        "time" : {
          "start" : 1632507712082,
          "stop" : 1632507712395,
          "duration" : 313
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Can publish a post with a Eventbrite block",
      "time" : {
        "start" : 1632507716170,
        "stop" : 1632507720207,
        "duration" : 4037
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Publish post",
        "time" : {
          "start" : 1632507716393,
          "stop" : 1632507719686,
          "duration" : 3293
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "View post",
        "time" : {
          "start" : 1632507719688,
          "stop" : 1632507720207,
          "duration" : 519
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Can assert that Eventbrite block is rendered",
      "time" : {
        "start" : 1632507720226,
        "stop" : 1632507720918,
        "duration" : 692
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "tag",
    "value" : "Jetpack version: 10.2-alpha-640e4e42b54d8f1e46695c852b6e17bc60849083"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 13,
        "unknown" : 0,
        "total" : 14
      },
      "items" : [ {
        "uid" : "d387a08cf0916e31",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21115/report/#testresult/d387a08cf0916e31",
        "status" : "passed",
        "time" : {
          "start" : 1632486091925,
          "stop" : 1632486102010,
          "duration" : 10085
        }
      }, {
        "uid" : "3c61ba34050634c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21115/report/#testresult/3c61ba34050634c",
        "status" : "passed",
        "time" : {
          "start" : 1632484342682,
          "stop" : 1632484352107,
          "duration" : 9425
        }
      }, {
        "uid" : "347d5613179bf8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21115/report/#testresult/347d5613179bf8",
        "status" : "passed",
        "time" : {
          "start" : 1632482711516,
          "stop" : 1632482721036,
          "duration" : 9520
        }
      }, {
        "uid" : "481734282211703e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21115/report/#testresult/481734282211703e",
        "status" : "passed",
        "time" : {
          "start" : 1632309142768,
          "stop" : 1632309157239,
          "duration" : 14471
        }
      }, {
        "uid" : "6f19bf48f615195c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21115/report/#testresult/6f19bf48f615195c",
        "status" : "passed",
        "time" : {
          "start" : 1632242259239,
          "stop" : 1632242270008,
          "duration" : 10769
        }
      }, {
        "uid" : "9ca1364ce4bb659",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21115/report/#testresult/9ca1364ce4bb659",
        "status" : "passed",
        "time" : {
          "start" : 1632233480625,
          "stop" : 1632233492377,
          "duration" : 11752
        }
      }, {
        "uid" : "551d6ff1e389fd3c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21115/report/#testresult/551d6ff1e389fd3c",
        "status" : "passed",
        "time" : {
          "start" : 1632152999829,
          "stop" : 1632153014649,
          "duration" : 14820
        }
      }, {
        "uid" : "e6ee7799db012068",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21115/report/#testresult/e6ee7799db012068",
        "status" : "passed",
        "time" : {
          "start" : 1632150585028,
          "stop" : 1632150595725,
          "duration" : 10697
        }
      }, {
        "uid" : "d00f6ea608b7f341",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21115/report/#testresult/d00f6ea608b7f341",
        "status" : "passed",
        "time" : {
          "start" : 1632137281786,
          "stop" : 1632137291779,
          "duration" : 9993
        }
      }, {
        "uid" : "50c79ba28b6a9fc7",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21115/report/#testresult/50c79ba28b6a9fc7",
        "status" : "broken",
        "statusDetails" : "TypeError",
        "time" : {
          "start" : 1631879443440,
          "stop" : 1631879443462,
          "duration" : 22
        }
      }, {
        "uid" : "91736986a42ae79c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21115/report/#testresult/91736986a42ae79c",
        "status" : "passed",
        "time" : {
          "start" : 1631878562060,
          "stop" : 1631878572126,
          "duration" : 10066
        }
      }, {
        "uid" : "135d43ca19b71b33",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21115/report/#testresult/135d43ca19b71b33",
        "status" : "passed",
        "time" : {
          "start" : 1631808936500,
          "stop" : 1631808947007,
          "duration" : 10507
        }
      }, {
        "uid" : "8347f9654bc41b5e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21115/report/#testresult/8347f9654bc41b5e",
        "status" : "passed",
        "time" : {
          "start" : 1631807327864,
          "stop" : 1631807336613,
          "duration" : 8749
        }
      } ]
    },
    "tags" : [ "Jetpack version: 10.2-alpha-640e4e42b54d8f1e46695c852b6e17bc60849083" ]
  },
  "source" : "a902c395131f228f.json",
  "parameterValues" : [ ]
}