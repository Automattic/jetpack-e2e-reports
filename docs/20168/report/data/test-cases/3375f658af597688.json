{
  "uid" : "3375f658af597688",
  "name" : "Pinterest block",
  "fullName" : "Pinterest block",
  "historyId" : "bf919c5c1253559f0d007402decf47af",
  "time" : {
    "start" : 1625862128389,
    "stop" : 1625862135738,
    "duration" : 7349
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pinterest block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _pinterest.default.name(),\n        _pinterest.default.title()\n      );\n      const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n      await pinterestBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const pinId = _config.default.get(&quot;blocks.pinterest.pinId&quot;);\n\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a Pinterest block&quot;,\n    async () =&gt; {\n      const blockId = await blockEditor.insertBlock(\n        _pinterest.default.name(),\n        _pinterest.default.title()\n      );\n      const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n      await pinterestBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post with a Pinterest block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can assert that Pinterest block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 12,
        "unknown" : 0,
        "total" : 12
      },
      "items" : [ {
        "uid" : "7b289678d7af1eda",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20168/report/#testresult/7b289678d7af1eda",
        "status" : "passed",
        "time" : {
          "start" : 1625682719741,
          "stop" : 1625682726852,
          "duration" : 7111
        }
      }, {
        "uid" : "d6036fe586de9e0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20168/report/#testresult/d6036fe586de9e0",
        "status" : "passed",
        "time" : {
          "start" : 1625681428199,
          "stop" : 1625681433907,
          "duration" : 5708
        }
      }, {
        "uid" : "48d59f2c2e3e8137",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20168/report/#testresult/48d59f2c2e3e8137",
        "status" : "passed",
        "time" : {
          "start" : 1625677743260,
          "stop" : 1625677749442,
          "duration" : 6182
        }
      }, {
        "uid" : "a3b7fcb44669fec0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20168/report/#testresult/a3b7fcb44669fec0",
        "status" : "passed",
        "time" : {
          "start" : 1625601342134,
          "stop" : 1625601349145,
          "duration" : 7011
        }
      }, {
        "uid" : "5b7cd0490d7c137b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20168/report/#testresult/5b7cd0490d7c137b",
        "status" : "passed",
        "time" : {
          "start" : 1625599661017,
          "stop" : 1625599667908,
          "duration" : 6891
        }
      }, {
        "uid" : "4729ca66e97722ee",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20168/report/#testresult/4729ca66e97722ee",
        "status" : "passed",
        "time" : {
          "start" : 1625261969618,
          "stop" : 1625261976983,
          "duration" : 7365
        }
      }, {
        "uid" : "171b9788e4f46969",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20168/report/#testresult/171b9788e4f46969",
        "status" : "passed",
        "time" : {
          "start" : 1625167732824,
          "stop" : 1625167740269,
          "duration" : 7445
        }
      }, {
        "uid" : "7b4cd48c16420ddc",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20168/report/#testresult/7b4cd48c16420ddc",
        "status" : "passed",
        "time" : {
          "start" : 1625160883821,
          "stop" : 1625160891189,
          "duration" : 7368
        }
      }, {
        "uid" : "cd3f03fd4852b11",
        "status" : "passed",
        "time" : {
          "start" : 1625079155728,
          "stop" : 1625079161216,
          "duration" : 5488
        }
      }, {
        "uid" : "6a000d6e811e1f79",
        "status" : "passed",
        "time" : {
          "start" : 1625076333853,
          "stop" : 1625076341386,
          "duration" : 7533
        }
      }, {
        "uid" : "ae9522f77f5e71bf",
        "status" : "passed",
        "time" : {
          "start" : 1624993848427,
          "stop" : 1624993854887,
          "duration" : 6460
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "3375f658af597688.json",
  "parameterValues" : [ ]
}