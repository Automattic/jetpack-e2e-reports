{
  "uid" : "f4be88cabb24cfda",
  "name" : "MailChimp Block",
  "fullName" : "MailChimp Block",
  "historyId" : "1e0e5667b8c419e68fc1ae6a0d73dd61",
  "time" : {
    "start" : 1624539178521,
    "stop" : 1624539198909,
    "duration" : 20388
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a MailChimp block\",\n    async () => {\n      blockId = await blockEditor.insertBlock(\n        _mailchimp.default.name(),\n        _mailchimp.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\"Can connect to a MailChimp\", async () => {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that MailChimp block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a MailChimp block&quot;,\n    async () =&gt; {\n      blockId = await blockEditor.insertBlock(\n        _mailchimp.default.name(),\n        _mailchimp.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(&quot;Can connect to a MailChimp&quot;, async () =&gt; {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that MailChimp block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "648ee66de476aefc",
      "name" : "1624539170124_beforeAll___Paid_blocks.webm",
      "source" : "648ee66de476aefc.webm",
      "type" : "video/webm",
      "size" : 1246949
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "c3a08597dd3d04ca",
      "name" : "1624539129565_beforeAll___ROOT_DESCRIBE_BLOCK.webm",
      "source" : "c3a08597dd3d04ca.webm",
      "type" : "video/webm",
      "size" : 420259
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a MailChimp block\",\n    async () => {\n      blockId = await blockEditor.insertBlock(\n        _mailchimp.default.name(),\n        _mailchimp.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\"Can connect to a MailChimp\", async () => {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that MailChimp block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8ab3a43c7aa2886",
      "name" : "1624539198407_Paid_blocks___MailChimp_Block.webm",
      "source" : "8ab3a43c7aa2886.webm",
      "type" : "video/webm",
      "size" : 679291
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "b0139924d0e65a29",
      "status" : "passed",
      "time" : {
        "start" : 1624520882146,
        "stop" : 1624520906581,
        "duration" : 24435
      }
    }, {
      "uid" : "8827a4e7c004c296",
      "status" : "passed",
      "time" : {
        "start" : 1624436221231,
        "stop" : 1624436240849,
        "duration" : 19618
      }
    }, {
      "uid" : "3d5c28f627dde008",
      "status" : "passed",
      "time" : {
        "start" : 1624430554233,
        "stop" : 1624430569026,
        "duration" : 14793
      }
    }, {
      "uid" : "3b32cb2ff0fd9e76",
      "status" : "passed",
      "time" : {
        "start" : 1624361003729,
        "stop" : 1624361021062,
        "duration" : 17333
      }
    }, {
      "uid" : "ae5b91cbca525fbe",
      "status" : "passed",
      "time" : {
        "start" : 1624353657913,
        "stop" : 1624353677522,
        "duration" : 19609
      }
    }, {
      "uid" : "869627d7337f172b",
      "status" : "passed",
      "time" : {
        "start" : 1623669066899,
        "stop" : 1623669083312,
        "duration" : 16413
      }
    }, {
      "uid" : "73ce9d05128f935f",
      "status" : "passed",
      "time" : {
        "start" : 1623405363054,
        "stop" : 1623405376283,
        "duration" : 13229
      }
    }, {
      "uid" : "cb78a3e26109e220",
      "status" : "passed",
      "time" : {
        "start" : 1623358685266,
        "stop" : 1623358699325,
        "duration" : 14059
      }
    }, {
      "uid" : "7a47d452891463d2",
      "status" : "passed",
      "time" : {
        "start" : 1623325830966,
        "stop" : 1623325851192,
        "duration" : 20226
      }
    }, {
      "uid" : "aa67d4fcf30d3121",
      "status" : "passed",
      "time" : {
        "start" : 1623321286623,
        "stop" : 1623321298753,
        "duration" : 12130
      }
    }, {
      "uid" : "428b9791247a5209",
      "status" : "passed",
      "time" : {
        "start" : 1623318996181,
        "stop" : 1623319010009,
        "duration" : 13828
      }
    }, {
      "uid" : "a3e402422b4621ed",
      "status" : "passed",
      "time" : {
        "start" : 1623238146882,
        "stop" : 1623238163639,
        "duration" : 16757
      }
    } ],
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "f4be88cabb24cfda.json",
  "parameterValues" : [ ]
}