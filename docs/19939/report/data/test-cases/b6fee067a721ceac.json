{
  "uid" : "b6fee067a721ceac",
  "name" : "WordAds block",
  "fullName" : "WordAds block",
  "historyId" : "18efccdb8f3fb33e445e77a8ef2cffa3",
  "time" : {
    "start" : 1624539212020,
    "stop" : 1624539217700,
    "duration" : 5680
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a WordAds block\",\n    async () => {\n      await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n      blockId = await blockEditor.insertBlock(\n        _wordAds.default.name(),\n        _wordAds.default.title()\n      );\n      await blockEditor.selectPostTitle();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can switch to Wide Skyscraper ad format\",\n    async () => {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that WordAds block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a WordAds block&quot;,\n    async () =&gt; {\n      await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n      blockId = await blockEditor.insertBlock(\n        _wordAds.default.name(),\n        _wordAds.default.title()\n      );\n      await blockEditor.selectPostTitle();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can switch to Wide Skyscraper ad format&quot;,\n    async () =&gt; {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that WordAds block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "648ee66de476aefc",
      "name" : "1624539170124_beforeAll___Paid_blocks.webm",
      "source" : "648ee66de476aefc.webm",
      "type" : "video/webm",
      "size" : 1246949
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "c3a08597dd3d04ca",
      "name" : "1624539129565_beforeAll___ROOT_DESCRIBE_BLOCK.webm",
      "source" : "c3a08597dd3d04ca.webm",
      "type" : "video/webm",
      "size" : 420259
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a WordAds block\",\n    async () => {\n      await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n      blockId = await blockEditor.insertBlock(\n        _wordAds.default.name(),\n        _wordAds.default.title()\n      );\n      await blockEditor.selectPostTitle();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can switch to Wide Skyscraper ad format\",\n    async () => {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that WordAds block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "ad8811154d278a5e",
      "name" : "1624539217529_Paid_blocks___WordAds_block.webm",
      "source" : "ad8811154d278a5e.webm",
      "type" : "video/webm",
      "size" : 215264
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "2dbeb445e9e172b9",
      "status" : "passed",
      "time" : {
        "start" : 1624520923232,
        "stop" : 1624520930342,
        "duration" : 7110
      }
    }, {
      "uid" : "643b6a581aba37b7",
      "status" : "passed",
      "time" : {
        "start" : 1624436255651,
        "stop" : 1624436261725,
        "duration" : 6074
      }
    }, {
      "uid" : "f5c1d9df017cd43c",
      "status" : "passed",
      "time" : {
        "start" : 1624430580825,
        "stop" : 1624430585252,
        "duration" : 4427
      }
    }, {
      "uid" : "7a2be6fc4e1c6229",
      "status" : "passed",
      "time" : {
        "start" : 1624361032372,
        "stop" : 1624361036729,
        "duration" : 4357
      }
    }, {
      "uid" : "4c0648ae3e06f888",
      "status" : "passed",
      "time" : {
        "start" : 1624353691962,
        "stop" : 1624353697243,
        "duration" : 5281
      }
    }, {
      "uid" : "95e58f6365bfa06b",
      "status" : "passed",
      "time" : {
        "start" : 1623669097030,
        "stop" : 1623669102710,
        "duration" : 5680
      }
    }, {
      "uid" : "4f93518410c65160",
      "status" : "passed",
      "time" : {
        "start" : 1623405387374,
        "stop" : 1623405391545,
        "duration" : 4171
      }
    }, {
      "uid" : "e464ba03a611c6",
      "status" : "passed",
      "time" : {
        "start" : 1623358710009,
        "stop" : 1623358718578,
        "duration" : 8569
      }
    }, {
      "uid" : "e219dd048a017174",
      "status" : "passed",
      "time" : {
        "start" : 1623325868659,
        "stop" : 1623325875173,
        "duration" : 6514
      }
    }, {
      "uid" : "44ac1aefe81f64b7",
      "status" : "passed",
      "time" : {
        "start" : 1623321309338,
        "stop" : 1623321313446,
        "duration" : 4108
      }
    }, {
      "uid" : "f41c2eeb575d8ca8",
      "status" : "passed",
      "time" : {
        "start" : 1623319020845,
        "stop" : 1623319028799,
        "duration" : 7954
      }
    }, {
      "uid" : "9a7dc8a46832fbd7",
      "status" : "passed",
      "time" : {
        "start" : 1623238176595,
        "stop" : 1623238181726,
        "duration" : 5131
      }
    } ],
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "b6fee067a721ceac.json",
  "parameterValues" : [ ]
}