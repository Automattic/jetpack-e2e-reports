{
  "uid" : "2e816b767c555504",
  "name" : "Pinterest block",
  "fullName" : "Pinterest block",
  "historyId" : "bf919c5c1253559f0d007402decf47af",
  "time" : {
    "start" : 1624605813568,
    "stop" : 1624605820822,
    "duration" : 7254
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pinterest block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _pinterest.default.name(),\n        _pinterest.default.title()\n      );\n      const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n      await pinterestBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const pinId = _config.default.get(&quot;blocks.pinterest.pinId&quot;);\n\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a Pinterest block&quot;,\n    async () =&gt; {\n      const blockId = await blockEditor.insertBlock(\n        _pinterest.default.name(),\n        _pinterest.default.title()\n      );\n      const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n      await pinterestBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post with a Pinterest block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can assert that Pinterest block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "e8cb829c3e1cd010",
      "name" : "1624605807813_beforeAll___Free_blocks.webm",
      "source" : "e8cb829c3e1cd010.webm",
      "type" : "video/webm",
      "size" : 548562
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "b47f85841359f756",
      "name" : "1624605790003_beforeAll___ROOT_DESCRIBE_BLOCK.webm",
      "source" : "b47f85841359f756.webm",
      "type" : "video/webm",
      "size" : 253969
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pinterest block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _pinterest.default.name(),\n        _pinterest.default.title()\n      );\n      const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n      await pinterestBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "12f3ebacf1e286d4",
      "name" : "1624605820703_Free_blocks___Pinterest_block.webm",
      "source" : "12f3ebacf1e286d4.webm",
      "type" : "video/webm",
      "size" : 517758
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "5dcfc4c87361dc4c",
      "status" : "passed",
      "time" : {
        "start" : 1624539261222,
        "stop" : 1624539267747,
        "duration" : 6525
      }
    }, {
      "uid" : "7711a911dd9963a4",
      "status" : "passed",
      "time" : {
        "start" : 1624520983171,
        "stop" : 1624520990080,
        "duration" : 6909
      }
    }, {
      "uid" : "97cbf436dbc7ee11",
      "status" : "passed",
      "time" : {
        "start" : 1624436306760,
        "stop" : 1624436312911,
        "duration" : 6151
      }
    }, {
      "uid" : "6560adbc952a5642",
      "status" : "passed",
      "time" : {
        "start" : 1624430619729,
        "stop" : 1624430625243,
        "duration" : 5514
      }
    }, {
      "uid" : "9996dd76b20d7f9b",
      "status" : "passed",
      "time" : {
        "start" : 1624361078557,
        "stop" : 1624361083884,
        "duration" : 5327
      }
    }, {
      "uid" : "9e963282fd42a07f",
      "status" : "passed",
      "time" : {
        "start" : 1624353741438,
        "stop" : 1624353747582,
        "duration" : 6144
      }
    }, {
      "uid" : "e06c68a5c2c5c679",
      "status" : "passed",
      "time" : {
        "start" : 1623669144574,
        "stop" : 1623669151503,
        "duration" : 6929
      }
    }, {
      "uid" : "c030bb56dd89c35b",
      "status" : "passed",
      "time" : {
        "start" : 1623405425346,
        "stop" : 1623405430611,
        "duration" : 5265
      }
    }, {
      "uid" : "9559df1d6919bd87",
      "status" : "passed",
      "time" : {
        "start" : 1623358755565,
        "stop" : 1623358761235,
        "duration" : 5670
      }
    }, {
      "uid" : "c17b039e7fcca418",
      "status" : "passed",
      "time" : {
        "start" : 1623325925938,
        "stop" : 1623325932067,
        "duration" : 6129
      }
    }, {
      "uid" : "b16b816812c0f79e",
      "status" : "passed",
      "time" : {
        "start" : 1623321349924,
        "stop" : 1623321355937,
        "duration" : 6013
      }
    }, {
      "uid" : "8fe4a38936a6111b",
      "status" : "passed",
      "time" : {
        "start" : 1623319061279,
        "stop" : 1623319066576,
        "duration" : 5297
      }
    }, {
      "uid" : "4474ff808010ced7",
      "status" : "passed",
      "time" : {
        "start" : 1623238218355,
        "stop" : 1623238224428,
        "duration" : 6073
      }
    } ],
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "2e816b767c555504.json",
  "parameterValues" : [ ]
}