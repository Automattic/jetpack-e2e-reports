{
  "uid" : "c4a65cee9ae91ee4",
  "name" : "Eventbrite block",
  "fullName" : "Eventbrite block",
  "historyId" : "0b4a15ebb314cfb213eb3e305bfce89d",
  "time" : {
    "start" : 1634295025151,
    "stop" : 1634295035566,
    "duration" : 10415
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const eventId = \"112691417062\";\n  await (0, _reporters.testStep)(\n    \"Can visit the block editor and add a Eventbrite block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _wpAdmin.EventbriteBlock.name(),\n        _wpAdmin.EventbriteBlock.title()\n      );\n      const eventbriteBlock = new _wpAdmin.EventbriteBlock(\n        blockId,\n        page,\n        eventId\n      );\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _reporters.testStep)(\n    \"Can publish a post with a Eventbrite block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporters.testStep)(\n    \"Can assert that Eventbrite block is rendered\",\n    async () => {\n      const frontend = await _pages.PostFrontendPage.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wpAdmin.EventbriteBlock, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const eventId = &quot;112691417062&quot;;\n  await (0, _reporters.testStep)(\n    &quot;Can visit the block editor and add a Eventbrite block&quot;,\n    async () =&gt; {\n      const blockId = await blockEditor.insertBlock(\n        _wpAdmin.EventbriteBlock.name(),\n        _wpAdmin.EventbriteBlock.title()\n      );\n      const eventbriteBlock = new _wpAdmin.EventbriteBlock(\n        blockId,\n        page,\n        eventId\n      );\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _reporters.testStep)(\n    &quot;Can publish a post with a Eventbrite block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporters.testStep)(\n    &quot;Can assert that Eventbrite block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _pages.PostFrontendPage.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wpAdmin.EventbriteBlock, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1634295006156,
        "stop" : 1634295014084,
        "duration" : 7928
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1634295022106,
        "stop" : 1634295025136,
        "duration" : 3030
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  const eventId = \"112691417062\";\n  await (0, _reporters.testStep)(\n    \"Can visit the block editor and add a Eventbrite block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _wpAdmin.EventbriteBlock.name(),\n        _wpAdmin.EventbriteBlock.title()\n      );\n      const eventbriteBlock = new _wpAdmin.EventbriteBlock(\n        blockId,\n        page,\n        eventId\n      );\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _reporters.testStep)(\n    \"Can publish a post with a Eventbrite block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporters.testStep)(\n    \"Can assert that Eventbrite block is rendered\",\n    async () => {\n      const frontend = await _pages.PostFrontendPage.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wpAdmin.EventbriteBlock, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Can visit the block editor and add a Eventbrite block",
      "time" : {
        "start" : 1634295025177,
        "stop" : 1634295030636,
        "duration" : 5459
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Eventbrite",
        "time" : {
          "start" : 1634295025180,
          "stop" : 1634295026177,
          "duration" : 997
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: eventbrite",
        "time" : {
          "start" : 1634295026201,
          "stop" : 1634295026646,
          "duration" : 445
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Can publish a post with a Eventbrite block",
      "time" : {
        "start" : 1634295030640,
        "stop" : 1634295034581,
        "duration" : 3941
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Publish post",
        "time" : {
          "start" : 1634295030900,
          "stop" : 1634295034044,
          "duration" : 3144
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "View post",
        "time" : {
          "start" : 1634295034057,
          "stop" : 1634295034581,
          "duration" : 524
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Can assert that Eventbrite block is rendered",
      "time" : {
        "start" : 1634295034593,
        "stop" : 1634295035431,
        "duration" : 838
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "tag",
    "value" : "Jetpack version: 10.3-a.2-1f78c6f9624987536f4d8950f5d1db2da8079b0e"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 8,
        "unknown" : 0,
        "total" : 9
      },
      "items" : [ {
        "uid" : "4ab13e3b170b2e77",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21394/report/#testresult/4ab13e3b170b2e77",
        "status" : "passed",
        "time" : {
          "start" : 1634208896603,
          "stop" : 1634208907307,
          "duration" : 10704
        }
      }, {
        "uid" : "32244d92235eb53e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21394/report/#testresult/32244d92235eb53e",
        "status" : "passed",
        "time" : {
          "start" : 1634206347543,
          "stop" : 1634206358615,
          "duration" : 11072
        }
      }, {
        "uid" : "fe9b124b8247471f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21394/report/#testresult/fe9b124b8247471f",
        "status" : "passed",
        "time" : {
          "start" : 1634140281579,
          "stop" : 1634140291658,
          "duration" : 10079
        }
      }, {
        "uid" : "28e40c4aad80a955",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21394/report/#testresult/28e40c4aad80a955",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1634139152971,
          "stop" : 1634139177302,
          "duration" : 24331
        }
      }, {
        "uid" : "f9c1059573abb8af",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21394/report/#testresult/f9c1059573abb8af",
        "status" : "passed",
        "time" : {
          "start" : 1634133904214,
          "stop" : 1634133914651,
          "duration" : 10437
        }
      }, {
        "uid" : "ef8b3ef8cbaf5f13",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21394/report/#testresult/ef8b3ef8cbaf5f13",
        "status" : "passed",
        "time" : {
          "start" : 1634130759019,
          "stop" : 1634130768393,
          "duration" : 9374
        }
      }, {
        "uid" : "53358e7405d176c9",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21394/report/#testresult/53358e7405d176c9",
        "status" : "passed",
        "time" : {
          "start" : 1634122057228,
          "stop" : 1634122066430,
          "duration" : 9202
        }
      }, {
        "uid" : "39b1d3c07ed377e6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21394/report/#testresult/39b1d3c07ed377e6",
        "status" : "passed",
        "time" : {
          "start" : 1634119105487,
          "stop" : 1634119116198,
          "duration" : 10711
        }
      } ]
    },
    "tags" : [ "Jetpack version: 10.3-a.2-1f78c6f9624987536f4d8950f5d1db2da8079b0e" ]
  },
  "source" : "c4a65cee9ae91ee4.json",
  "parameterValues" : [ ]
}