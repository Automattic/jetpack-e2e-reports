{
  "uid" : "4ac07aea9ac835af",
  "name" : "WordAds block",
  "fullName" : "WordAds block",
  "historyId" : "18efccdb8f3fb33e445e77a8ef2cffa3",
  "time" : {
    "start" : 1632414560089,
    "stop" : 1632414571784,
    "duration" : 11695
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _prerequisites.prerequisitesBuilder)()\n    .withActiveModules([\"wordads\"])\n    .build();\n  let blockId;\n  await (0, _reporter.testStep)(\"Add a WordAds block\", async () => {\n    await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n    blockId = await blockEditor.insertBlock(\n      _wordAds.default.name(),\n      _wordAds.default.title()\n    );\n    await blockEditor.selectPostTitle();\n  });\n  await (0, _reporter.testStep)(\n    \"Switch to Wide Skyscraper ad format\",\n    async () => {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Publish a post and assert that WordAds block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  await (0, _prerequisites.prerequisitesBuilder)()\n    .withActiveModules([&quot;wordads&quot;])\n    .build();\n  let blockId;\n  await (0, _reporter.testStep)(&quot;Add a WordAds block&quot;, async () =&gt; {\n    await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n    blockId = await blockEditor.insertBlock(\n      _wordAds.default.name(),\n      _wordAds.default.title()\n    );\n    await blockEditor.selectPostTitle();\n  });\n  await (0, _reporter.testStep)(\n    &quot;Switch to Wide Skyscraper ad format&quot;,\n    async () =&gt; {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Publish a post and assert that WordAds block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1632414529711,
        "stop" : 1632414536003,
        "duration" : 6292
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1632414549128,
        "stop" : 1632414551973,
        "duration" : 2845
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1632414557834,
        "stop" : 1632414560087,
        "duration" : 2253
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _prerequisites.prerequisitesBuilder)()\n    .withActiveModules([\"wordads\"])\n    .build();\n  let blockId;\n  await (0, _reporter.testStep)(\"Add a WordAds block\", async () => {\n    await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n    blockId = await blockEditor.insertBlock(\n      _wordAds.default.name(),\n      _wordAds.default.title()\n    );\n    await blockEditor.selectPostTitle();\n  });\n  await (0, _reporter.testStep)(\n    \"Switch to Wide Skyscraper ad format\",\n    async () => {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Publish a post and assert that WordAds block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Add a WordAds block",
      "time" : {
        "start" : 1632414562494,
        "stop" : 1632414567327,
        "duration" : 4833
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Ad",
        "time" : {
          "start" : 1632414565652,
          "stop" : 1632414566641,
          "duration" : 989
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: wordads",
        "time" : {
          "start" : 1632414566642,
          "stop" : 1632414567012,
          "duration" : 370
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Switch to Wide Skyscraper ad format",
      "time" : {
        "start" : 1632414567334,
        "stop" : 1632414567846,
        "duration" : 512
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Publish a post and assert that WordAds block is rendered",
      "time" : {
        "start" : 1632414567848,
        "stop" : 1632414571730,
        "duration" : 3882
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Publish post",
        "time" : {
          "start" : 1632414567974,
          "stop" : 1632414569145,
          "duration" : 1171
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "View post",
        "time" : {
          "start" : 1632414569152,
          "stop" : 1632414569850,
          "duration" : 698
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "tag",
    "value" : "Jetpack version: 10.2-alpha-9701b813ad6dacb46fca0b48f54fd1616cbbd944"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 12,
        "unknown" : 0,
        "total" : 12
      },
      "items" : [ {
        "uid" : "12cdfe5778266999",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21107/report/#testresult/12cdfe5778266999",
        "status" : "passed",
        "time" : {
          "start" : 1632343967214,
          "stop" : 1632343980948,
          "duration" : 13734
        }
      }, {
        "uid" : "cf32f6cd14428ce0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21107/report/#testresult/cf32f6cd14428ce0",
        "status" : "passed",
        "time" : {
          "start" : 1632339598638,
          "stop" : 1632339609494,
          "duration" : 10856
        }
      }, {
        "uid" : "c3365926e1498489",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21107/report/#testresult/c3365926e1498489",
        "status" : "passed",
        "time" : {
          "start" : 1632335906466,
          "stop" : 1632335926739,
          "duration" : 20273
        }
      }, {
        "uid" : "d9166183976ddec3",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21107/report/#testresult/d9166183976ddec3",
        "status" : "passed",
        "time" : {
          "start" : 1632315288517,
          "stop" : 1632315303430,
          "duration" : 14913
        }
      }, {
        "uid" : "cd486b5ce48aad78",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21107/report/#testresult/cd486b5ce48aad78",
        "status" : "passed",
        "time" : {
          "start" : 1632306344429,
          "stop" : 1632306367625,
          "duration" : 23196
        }
      }, {
        "uid" : "bb1d9f3970118424",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21107/report/#testresult/bb1d9f3970118424",
        "status" : "passed",
        "time" : {
          "start" : 1632264338320,
          "stop" : 1632264354559,
          "duration" : 16239
        }
      }, {
        "uid" : "1118109004572a6f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21107/report/#testresult/1118109004572a6f",
        "status" : "passed",
        "time" : {
          "start" : 1632253762482,
          "stop" : 1632253774305,
          "duration" : 11823
        }
      }, {
        "uid" : "279a83dc1bfa4141",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21107/report/#testresult/279a83dc1bfa4141",
        "status" : "passed",
        "time" : {
          "start" : 1632252994416,
          "stop" : 1632253013715,
          "duration" : 19299
        }
      }, {
        "uid" : "b99f58f59d1a2b1",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21107/report/#testresult/b99f58f59d1a2b1",
        "status" : "passed",
        "time" : {
          "start" : 1632241500643,
          "stop" : 1632241511962,
          "duration" : 11319
        }
      }, {
        "uid" : "d6fcbf1fa4b8d9d9",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21107/report/#testresult/d6fcbf1fa4b8d9d9",
        "status" : "passed",
        "time" : {
          "start" : 1631784167724,
          "stop" : 1631784180266,
          "duration" : 12542
        }
      }, {
        "uid" : "efa72fc88d5c4f32",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21107/report/#testresult/efa72fc88d5c4f32",
        "status" : "passed",
        "time" : {
          "start" : 1631743756156,
          "stop" : 1631743767903,
          "duration" : 11747
        }
      } ]
    },
    "tags" : [ "Jetpack version: 10.2-alpha-9701b813ad6dacb46fca0b48f54fd1616cbbd944" ]
  },
  "source" : "4ac07aea9ac835af.json",
  "parameterValues" : [ ]
}