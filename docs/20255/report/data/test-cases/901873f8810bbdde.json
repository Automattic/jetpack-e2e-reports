{
  "uid" : "901873f8810bbdde",
  "name" : "Pay with PayPal",
  "fullName" : "Pay with PayPal",
  "historyId" : "2b956f1af1e91da7ea3b442b8c2cddca",
  "time" : {
    "start" : 1625649666826,
    "stop" : 1625649673750,
    "duration" : 6924
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pay with PayPal block\",\n    async () => {\n      await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n      blockId = await blockEditor.insertBlock(\n        _simplePayments.default.name(),\n        _simplePayments.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can fill details of Pay with PayPal block\",\n    async () => {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that Pay with PayPal block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a Pay with PayPal block&quot;,\n    async () =&gt; {\n      await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n      blockId = await blockEditor.insertBlock(\n        _simplePayments.default.name(),\n        _simplePayments.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can fill details of Pay with PayPal block&quot;,\n    async () =&gt; {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that Pay with PayPal block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 9,
        "unknown" : 0,
        "total" : 9
      },
      "items" : [ {
        "uid" : "4ebd56d639689f0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20255/report/#testresult/4ebd56d639689f0",
        "status" : "passed",
        "time" : {
          "start" : 1625588096624,
          "stop" : 1625588105673,
          "duration" : 9049
        }
      }, {
        "uid" : "caf9318ff9db742a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20255/report/#testresult/caf9318ff9db742a",
        "status" : "passed",
        "time" : {
          "start" : 1625582784444,
          "stop" : 1625582792253,
          "duration" : 7809
        }
      }, {
        "uid" : "a5b8185ffb2eb325",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20255/report/#testresult/a5b8185ffb2eb325",
        "status" : "passed",
        "time" : {
          "start" : 1625576384962,
          "stop" : 1625576391234,
          "duration" : 6272
        }
      }, {
        "uid" : "5d8dc7ab8382baa9",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20255/report/#testresult/5d8dc7ab8382baa9",
        "status" : "passed",
        "time" : {
          "start" : 1625568002183,
          "stop" : 1625568009383,
          "duration" : 7200
        }
      }, {
        "uid" : "9c2e5a02601a8b9d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20255/report/#testresult/9c2e5a02601a8b9d",
        "status" : "passed",
        "time" : {
          "start" : 1625502015612,
          "stop" : 1625502021832,
          "duration" : 6220
        }
      }, {
        "uid" : "431b71fbd926f9b1",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20255/report/#testresult/431b71fbd926f9b1",
        "status" : "passed",
        "time" : {
          "start" : 1625493726931,
          "stop" : 1625493733044,
          "duration" : 6113
        }
      }, {
        "uid" : "9652b2e276314897",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20255/report/#testresult/9652b2e276314897",
        "status" : "passed",
        "time" : {
          "start" : 1625240133494,
          "stop" : 1625240140905,
          "duration" : 7411
        }
      }, {
        "uid" : "2f6993a99d89c2eb",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20255/report/#testresult/2f6993a99d89c2eb",
        "status" : "passed",
        "time" : {
          "start" : 1625214516025,
          "stop" : 1625214523228,
          "duration" : 7203
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "901873f8810bbdde.json",
  "parameterValues" : [ ]
}