{
  "uid" : "4cac1da748b8a6fe",
  "name" : "Recommendations (Jetpack Assistant)",
  "fullName" : "Recommendations (Jetpack Assistant)",
  "historyId" : "6acbca09fe63fb0db4bf908821bc38aa",
  "time" : {
    "start" : 1627053225728,
    "stop" : 1627053241134,
    "duration" : 15406
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let recommendationsPage;\n  await (0, _testSetup.step)(\n    \"Navigate to the Recommendations module\",\n    async () => {\n      recommendationsPage = await _recommendations.default.visit(page);\n      const isPageVisible =\n        await recommendationsPage.areSiteTypeQuestionsVisible();\n\n      expect(isPageVisible).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"site-type\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Check Personal and Other checkboxes\",\n    async () => {\n      await recommendationsPage.checkPersonalSiteType();\n      await recommendationsPage.checkOtherSiteType();\n      expect(\n        await recommendationsPage.isPersonalSiteTypeChecked()\n      ).toBeTruthy();\n      expect(await recommendationsPage.isOtherSiteTypeChecked()).toBeTruthy();\n      expect(await recommendationsPage.isBusinessTypeUnchecked()).toBeFalsy();\n      expect(await recommendationsPage.isStoreTypeUnchecked()).toBeFalsy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Save answers and continue to the Monitor step\",\n    async () => {\n      await recommendationsPage.saveSiteTypeAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isMonitorStep =\n        await recommendationsPage.isEnableMonitoringButtonVisible();\n      expect(isMonitorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"monitor\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Enable Monitoring and continue to Related Post step\",\n    async () => {\n      await recommendationsPage.enableMonitoringAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isRelatedPostsStep =\n        await recommendationsPage.isEnableRelatedPostsButtonVisible();\n      expect(isRelatedPostsStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"related-posts\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Enable Related Posts and continue to Creative Mail step\",\n    async () => {\n      await recommendationsPage.enableRelatedPostsAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isCreativeMailStep =\n        await recommendationsPage.isInstallCreativeMailButtonVisible();\n      expect(isCreativeMailStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"creative-mail\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Skip Creative Mail and continue to Site Accelerator\",\n    async () => {\n      await recommendationsPage.skipCreativeMailAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSiteAcceleratorStep =\n        await recommendationsPage.isEnableSiteAcceleratorButtonVisible();\n      expect(isSiteAcceleratorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"site-accelerator\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Skip Site Accelerator and continue to Summary\",\n    async () => {\n      await recommendationsPage.skipSiteAcceleratorAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSummaryContent =\n        await recommendationsPage.isSummaryContentVisible();\n      const isSummarySidebar =\n        await recommendationsPage.isSummarySidebarVisible();\n      expect(isSummaryContent && isSummarySidebar).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(\"summary\")\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Verify Monitoring and Related Posts are enabled\",\n    async () => {\n      const isMonitoringFeatureEnabled =\n        await recommendationsPage.isMonitoringFeatureEnabled();\n      const isRelatedPostsFeatureEnabled =\n        await recommendationsPage.isRelatedPostsFeatureEnabled();\n      expect(\n        isMonitoringFeatureEnabled && isRelatedPostsFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Verify Creative Mail and Site Accelerator are disabled\",\n    async () => {\n      const isCreativeMailFeatureEnabled =\n        await recommendationsPage.isCreativeMailFeatureEnabled();\n      const isSiteAcceleratorFeatureEnabled =\n        await recommendationsPage.isSiteAcceleratorFeatureEnabled();\n      expect(\n        isCreativeMailFeatureEnabled && isSiteAcceleratorFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let recommendationsPage;\n  await (0, _testSetup.step)(\n    &quot;Navigate to the Recommendations module&quot;,\n    async () =&gt; {\n      recommendationsPage = await _recommendations.default.visit(page);\n      const isPageVisible =\n        await recommendationsPage.areSiteTypeQuestionsVisible();\n\n      expect(isPageVisible).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;site-type&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Check Personal and Other checkboxes&quot;,\n    async () =&gt; {\n      await recommendationsPage.checkPersonalSiteType();\n      await recommendationsPage.checkOtherSiteType();\n      expect(\n        await recommendationsPage.isPersonalSiteTypeChecked()\n      ).toBeTruthy();\n      expect(await recommendationsPage.isOtherSiteTypeChecked()).toBeTruthy();\n      expect(await recommendationsPage.isBusinessTypeUnchecked()).toBeFalsy();\n      expect(await recommendationsPage.isStoreTypeUnchecked()).toBeFalsy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Save answers and continue to the Monitor step&quot;,\n    async () =&gt; {\n      await recommendationsPage.saveSiteTypeAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isMonitorStep =\n        await recommendationsPage.isEnableMonitoringButtonVisible();\n      expect(isMonitorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;monitor&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Enable Monitoring and continue to Related Post step&quot;,\n    async () =&gt; {\n      await recommendationsPage.enableMonitoringAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isRelatedPostsStep =\n        await recommendationsPage.isEnableRelatedPostsButtonVisible();\n      expect(isRelatedPostsStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;related-posts&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Enable Related Posts and continue to Creative Mail step&quot;,\n    async () =&gt; {\n      await recommendationsPage.enableRelatedPostsAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isCreativeMailStep =\n        await recommendationsPage.isInstallCreativeMailButtonVisible();\n      expect(isCreativeMailStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;creative-mail&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Skip Creative Mail and continue to Site Accelerator&quot;,\n    async () =&gt; {\n      await recommendationsPage.skipCreativeMailAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSiteAcceleratorStep =\n        await recommendationsPage.isEnableSiteAcceleratorButtonVisible();\n      expect(isSiteAcceleratorStep).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;site-accelerator&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Skip Site Accelerator and continue to Summary&quot;,\n    async () =&gt; {\n      await recommendationsPage.skipSiteAcceleratorAndContinue();\n      await recommendationsPage.reload();\n      await recommendationsPage.waitForNetworkIdle();\n      const isSummaryContent =\n        await recommendationsPage.isSummaryContentVisible();\n      const isSummarySidebar =\n        await recommendationsPage.isSummarySidebarVisible();\n      expect(isSummaryContent &amp;&amp; isSummarySidebar).toBeTruthy();\n      expect(\n        recommendationsPage.isUrlInSyncWithStepName(&quot;summary&quot;)\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Verify Monitoring and Related Posts are enabled&quot;,\n    async () =&gt; {\n      const isMonitoringFeatureEnabled =\n        await recommendationsPage.isMonitoringFeatureEnabled();\n      const isRelatedPostsFeatureEnabled =\n        await recommendationsPage.isRelatedPostsFeatureEnabled();\n      expect(\n        isMonitoringFeatureEnabled &amp;&amp; isRelatedPostsFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Verify Creative Mail and Site Accelerator are disabled&quot;,\n    async () =&gt; {\n      const isCreativeMailFeatureEnabled =\n        await recommendationsPage.isCreativeMailFeatureEnabled();\n      const isSiteAcceleratorFeatureEnabled =\n        await recommendationsPage.isSiteAcceleratorFeatureEnabled();\n      expect(\n        isCreativeMailFeatureEnabled &amp;&amp; isSiteAcceleratorFeatureEnabled\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "recommendations.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 20,
        "unknown" : 0,
        "total" : 20
      },
      "items" : [ {
        "uid" : "18afd05d0f2e571f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20303/report/#testresult/18afd05d0f2e571f",
        "status" : "passed",
        "time" : {
          "start" : 1626989316954,
          "stop" : 1626989331865,
          "duration" : 14911
        }
      }, {
        "uid" : "449eae027ca114ec",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20303/report/#testresult/449eae027ca114ec",
        "status" : "passed",
        "time" : {
          "start" : 1626983303284,
          "stop" : 1626983315421,
          "duration" : 12137
        }
      }, {
        "uid" : "35e4cf2259cd4d9e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20303/report/#testresult/35e4cf2259cd4d9e",
        "status" : "passed",
        "time" : {
          "start" : 1626904141040,
          "stop" : 1626904153725,
          "duration" : 12685
        }
      }, {
        "uid" : "15e335a615040076",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20303/report/#testresult/15e335a615040076",
        "status" : "passed",
        "time" : {
          "start" : 1626901266993,
          "stop" : 1626901283197,
          "duration" : 16204
        }
      }, {
        "uid" : "e074f40fc6e40c05",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20303/report/#testresult/e074f40fc6e40c05",
        "status" : "passed",
        "time" : {
          "start" : 1626900098168,
          "stop" : 1626900113750,
          "duration" : 15582
        }
      }, {
        "uid" : "b238d0091fa50693",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20303/report/#testresult/b238d0091fa50693",
        "status" : "passed",
        "time" : {
          "start" : 1626897443518,
          "stop" : 1626897461796,
          "duration" : 18278
        }
      }, {
        "uid" : "b6ac044bb0008e40",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20303/report/#testresult/b6ac044bb0008e40",
        "status" : "passed",
        "time" : {
          "start" : 1626801518540,
          "stop" : 1626801530999,
          "duration" : 12459
        }
      }, {
        "uid" : "cedd6cbdca2485cc",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20303/report/#testresult/cedd6cbdca2485cc",
        "status" : "passed",
        "time" : {
          "start" : 1626730601285,
          "stop" : 1626730619868,
          "duration" : 18583
        }
      }, {
        "uid" : "271b49f48d3e9aec",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20303/report/#testresult/271b49f48d3e9aec",
        "status" : "passed",
        "time" : {
          "start" : 1626728642923,
          "stop" : 1626728656736,
          "duration" : 13813
        }
      }, {
        "uid" : "2ca2a6dc8adcb551",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20303/report/#testresult/2ca2a6dc8adcb551",
        "status" : "passed",
        "time" : {
          "start" : 1626727472243,
          "stop" : 1626727486793,
          "duration" : 14550
        }
      }, {
        "uid" : "34cd438799347522",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20303/report/#testresult/34cd438799347522",
        "status" : "passed",
        "time" : {
          "start" : 1626725664705,
          "stop" : 1626725679946,
          "duration" : 15241
        }
      }, {
        "uid" : "331f9d4dd8100ca5",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20303/report/#testresult/331f9d4dd8100ca5",
        "status" : "passed",
        "time" : {
          "start" : 1626472677899,
          "stop" : 1626472695295,
          "duration" : 17396
        }
      }, {
        "uid" : "459e62307ebaaf8f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20303/report/#testresult/459e62307ebaaf8f",
        "status" : "passed",
        "time" : {
          "start" : 1626380941570,
          "stop" : 1626380955210,
          "duration" : 13640
        }
      }, {
        "uid" : "6edb20a5c5b37e13",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20303/report/#testresult/6edb20a5c5b37e13",
        "status" : "passed",
        "time" : {
          "start" : 1626378243699,
          "stop" : 1626378260624,
          "duration" : 16925
        }
      }, {
        "uid" : "b7cdf83105ff0630",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20303/report/#testresult/b7cdf83105ff0630",
        "status" : "passed",
        "time" : {
          "start" : 1626373045499,
          "stop" : 1626373058685,
          "duration" : 13186
        }
      }, {
        "uid" : "cd9309de28085501",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20303/report/#testresult/cd9309de28085501",
        "status" : "passed",
        "time" : {
          "start" : 1625868742612,
          "stop" : 1625868756856,
          "duration" : 14244
        }
      }, {
        "uid" : "1e025303c951a9d4",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20303/report/#testresult/1e025303c951a9d4",
        "status" : "passed",
        "time" : {
          "start" : 1625866628083,
          "stop" : 1625866644244,
          "duration" : 16161
        }
      }, {
        "uid" : "4ff25fc4141a8ba1",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20303/report/#testresult/4ff25fc4141a8ba1",
        "status" : "passed",
        "time" : {
          "start" : 1625769031071,
          "stop" : 1625769044789,
          "duration" : 13718
        }
      }, {
        "uid" : "472144084592c772",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20303/report/#testresult/472144084592c772",
        "status" : "passed",
        "time" : {
          "start" : 1625691047101,
          "stop" : 1625691063048,
          "duration" : 15947
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "4cac1da748b8a6fe.json",
  "parameterValues" : [ ]
}