{
  "uid" : "9a8973c3fac27cd2",
  "name" : "Pay with PayPal",
  "fullName" : "Pay with PayPal",
  "historyId" : "2b956f1af1e91da7ea3b442b8c2cddca",
  "time" : {
    "start" : 1626199689722,
    "stop" : 1626199696061,
    "duration" : 6339
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pay with PayPal block\",\n    async () => {\n      await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n      blockId = await blockEditor.insertBlock(\n        _simplePayments.default.name(),\n        _simplePayments.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can fill details of Pay with PayPal block\",\n    async () => {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that Pay with PayPal block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a Pay with PayPal block&quot;,\n    async () =&gt; {\n      await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n      blockId = await blockEditor.insertBlock(\n        _simplePayments.default.name(),\n        _simplePayments.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can fill details of Pay with PayPal block&quot;,\n    async () =&gt; {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post and assert that Pay with PayPal block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 8,
        "unknown" : 0,
        "total" : 8
      },
      "items" : [ {
        "uid" : "cb677e1b4bf413f4",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20256/report/#testresult/cb677e1b4bf413f4",
        "status" : "passed",
        "time" : {
          "start" : 1626194983914,
          "stop" : 1626194991360,
          "duration" : 7446
        }
      }, {
        "uid" : "cd3d4cd36085c70a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20256/report/#testresult/cd3d4cd36085c70a",
        "status" : "passed",
        "time" : {
          "start" : 1626178447415,
          "stop" : 1626178454870,
          "duration" : 7455
        }
      }, {
        "uid" : "ffc7c61aefa30dfd",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20256/report/#testresult/ffc7c61aefa30dfd",
        "status" : "passed",
        "time" : {
          "start" : 1626177481337,
          "stop" : 1626177489756,
          "duration" : 8419
        }
      }, {
        "uid" : "46d545e5d4f0e97",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20256/report/#testresult/46d545e5d4f0e97",
        "status" : "passed",
        "time" : {
          "start" : 1625836553560,
          "stop" : 1625836560242,
          "duration" : 6682
        }
      }, {
        "uid" : "b87c3c7b74c06c2a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20256/report/#testresult/b87c3c7b74c06c2a",
        "status" : "passed",
        "time" : {
          "start" : 1625833385939,
          "stop" : 1625833395429,
          "duration" : 9490
        }
      }, {
        "uid" : "39e7527b9bb5aba7",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20256/report/#testresult/39e7527b9bb5aba7",
        "status" : "passed",
        "time" : {
          "start" : 1625826143457,
          "stop" : 1625826150920,
          "duration" : 7463
        }
      }, {
        "uid" : "28fd194750230d79",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20256/report/#testresult/28fd194750230d79",
        "status" : "passed",
        "time" : {
          "start" : 1625241477437,
          "stop" : 1625241485520,
          "duration" : 8083
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "9a8973c3fac27cd2.json",
  "parameterValues" : [ ]
}