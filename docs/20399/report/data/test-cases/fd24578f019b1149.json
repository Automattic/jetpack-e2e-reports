{
  "uid" : "fd24578f019b1149",
  "name" : "Pay with PayPal",
  "fullName" : "Pay with PayPal",
  "historyId" : "2b956f1af1e91da7ea3b442b8c2cddca",
  "time" : {
    "start" : 1628826998243,
    "stop" : 1628827004012,
    "duration" : 5769
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _reporter.testStep)(\"Add a Pay with PayPal block\", async () => {\n    await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n    blockId = await blockEditor.insertBlock(\n      _simplePayments.default.name(),\n      _simplePayments.default.title()\n    );\n  });\n  await (0, _reporter.testStep)(\n    \"Fill details of Pay with PayPal block\",\n    async () => {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Publish a post and assert that Pay with PayPal block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  let blockId;\n  await (0, _reporter.testStep)(&quot;Add a Pay with PayPal block&quot;, async () =&gt; {\n    await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n    blockId = await blockEditor.insertBlock(\n      _simplePayments.default.name(),\n      _simplePayments.default.title()\n    );\n  });\n  await (0, _reporter.testStep)(\n    &quot;Fill details of Pay with PayPal block&quot;,\n    async () =&gt; {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Publish a post and assert that Pay with PayPal block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1628826929614,
        "stop" : 1628826936539,
        "duration" : 6925
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1628826995695,
        "stop" : 1628826998241,
        "duration" : 2546
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1628827004183,
        "stop" : 1628827006544,
        "duration" : 2361
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _reporter.testStep)(\"Add a Pay with PayPal block\", async () => {\n    await blockEditor.waitForAvailableBlock(_simplePayments.default.name());\n    blockId = await blockEditor.insertBlock(\n      _simplePayments.default.name(),\n      _simplePayments.default.title()\n    );\n  });\n  await (0, _reporter.testStep)(\n    \"Fill details of Pay with PayPal block\",\n    async () => {\n      const spBlock = new _simplePayments.default(blockId, page);\n      await spBlock.fillDetails();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Publish a post and assert that Pay with PayPal block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_simplePayments.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Add a Pay with PayPal block",
      "time" : {
        "start" : 1628826998264,
        "stop" : 1628826999886,
        "duration" : 1622
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Pay with PayPal",
        "time" : {
          "start" : 1628826998352,
          "stop" : 1628826999215,
          "duration" : 863
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: simple-payments",
        "time" : {
          "start" : 1628826999217,
          "stop" : 1628826999755,
          "duration" : 538
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Fill details of Pay with PayPal block",
      "time" : {
        "start" : 1628826999901,
        "stop" : 1628827000525,
        "duration" : 624
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Publish a post and assert that Pay with PayPal block is rendered",
      "time" : {
        "start" : 1628827000527,
        "stop" : 1628827003984,
        "duration" : 3457
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Publish post",
        "time" : {
          "start" : 1628827000668,
          "stop" : 1628827001530,
          "duration" : 862
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "View post",
        "time" : {
          "start" : 1628827001534,
          "stop" : 1628827002546,
          "duration" : 1012
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 12,
        "unknown" : 0,
        "total" : 12
      },
      "items" : [ {
        "uid" : "90e15fae0980e0f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20399/report/#testresult/90e15fae0980e0f",
        "status" : "passed",
        "time" : {
          "start" : 1628826157597,
          "stop" : 1628826164213,
          "duration" : 6616
        }
      }, {
        "uid" : "ad9410ba4c60ede7",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20399/report/#testresult/ad9410ba4c60ede7",
        "status" : "passed",
        "time" : {
          "start" : 1628825330960,
          "stop" : 1628825336256,
          "duration" : 5296
        }
      }, {
        "uid" : "17632bebeb14aaee",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20399/report/#testresult/17632bebeb14aaee",
        "status" : "passed",
        "time" : {
          "start" : 1628808208074,
          "stop" : 1628808214234,
          "duration" : 6160
        }
      }, {
        "uid" : "54d10b07587bf9de",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20399/report/#testresult/54d10b07587bf9de",
        "status" : "passed",
        "time" : {
          "start" : 1628806201642,
          "stop" : 1628806205998,
          "duration" : 4356
        }
      }, {
        "uid" : "1e3f81985d080fc3",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20399/report/#testresult/1e3f81985d080fc3",
        "status" : "passed",
        "time" : {
          "start" : 1628803884838,
          "stop" : 1628803888765,
          "duration" : 3927
        }
      }, {
        "uid" : "e8f4b41d3d8b15ea",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20399/report/#testresult/e8f4b41d3d8b15ea",
        "status" : "passed",
        "time" : {
          "start" : 1628758684892,
          "stop" : 1628758688821,
          "duration" : 3929
        }
      }, {
        "uid" : "b4cc1cf4b481db86",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20399/report/#testresult/b4cc1cf4b481db86",
        "status" : "passed",
        "time" : {
          "start" : 1628120072104,
          "stop" : 1628120084738,
          "duration" : 12634
        }
      }, {
        "uid" : "f6724d21ce93da6f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20399/report/#testresult/f6724d21ce93da6f",
        "status" : "passed",
        "time" : {
          "start" : 1627604239496,
          "stop" : 1627604248348,
          "duration" : 8852
        }
      }, {
        "uid" : "d81d11629a58aa16",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20399/report/#testresult/d81d11629a58aa16",
        "status" : "passed",
        "time" : {
          "start" : 1627549003310,
          "stop" : 1627549015106,
          "duration" : 11796
        }
      }, {
        "uid" : "4880ab695ab726ef",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20399/report/#testresult/4880ab695ab726ef",
        "status" : "passed",
        "time" : {
          "start" : 1627364693822,
          "stop" : 1627364709479,
          "duration" : 15657
        }
      }, {
        "uid" : "9195d583e2072d06",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20399/report/#testresult/9195d583e2072d06",
        "status" : "passed",
        "time" : {
          "start" : 1626689626593,
          "stop" : 1626689637051,
          "duration" : 10458
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "fd24578f019b1149.json",
  "parameterValues" : [ ]
}