{
  "uid" : "47048dd0a37fee54",
  "name" : "Eventbrite block",
  "fullName" : "Eventbrite block",
  "historyId" : "0b4a15ebb314cfb213eb3e305bfce89d",
  "time" : {
    "start" : 1630290152427,
    "stop" : 1630290165684,
    "duration" : 13257
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const eventId = \"112691417062\";\n  await (0, _reporter.testStep)(\n    \"Can visit the block editor and add a Eventbrite block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _eventbrite.default.name(),\n        _eventbrite.default.title()\n      );\n      const eventbriteBlock = new _eventbrite.default(blockId, page, eventId);\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can publish a post with a Eventbrite block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Eventbrite block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_eventbrite.default, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const eventId = &quot;112691417062&quot;;\n  await (0, _reporter.testStep)(\n    &quot;Can visit the block editor and add a Eventbrite block&quot;,\n    async () =&gt; {\n      const blockId = await blockEditor.insertBlock(\n        _eventbrite.default.name(),\n        _eventbrite.default.title()\n      );\n      const eventbriteBlock = new _eventbrite.default(blockId, page, eventId);\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can publish a post with a Eventbrite block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can assert that Eventbrite block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_eventbrite.default, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1630290128290,
        "stop" : 1630290138335,
        "duration" : 10045
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1630290148982,
        "stop" : 1630290152425,
        "duration" : 3443
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  const eventId = \"112691417062\";\n  await (0, _reporter.testStep)(\n    \"Can visit the block editor and add a Eventbrite block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _eventbrite.default.name(),\n        _eventbrite.default.title()\n      );\n      const eventbriteBlock = new _eventbrite.default(blockId, page, eventId);\n      await eventbriteBlock.addEmbed();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can publish a post with a Eventbrite block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Eventbrite block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_eventbrite.default, {\n          eventId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Can visit the block editor and add a Eventbrite block",
      "time" : {
        "start" : 1630290152448,
        "stop" : 1630290158976,
        "duration" : 6528
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Eventbrite",
        "time" : {
          "start" : 1630290152449,
          "stop" : 1630290153517,
          "duration" : 1068
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: eventbrite",
        "time" : {
          "start" : 1630290153519,
          "stop" : 1630290153839,
          "duration" : 320
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Can publish a post with a Eventbrite block",
      "time" : {
        "start" : 1630290158978,
        "stop" : 1630290164657,
        "duration" : 5679
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Publish post",
        "time" : {
          "start" : 1630290159260,
          "stop" : 1630290163047,
          "duration" : 3787
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "View post",
        "time" : {
          "start" : 1630290163049,
          "stop" : 1630290164657,
          "duration" : 1608
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Can assert that Eventbrite block is rendered",
      "time" : {
        "start" : 1630290164658,
        "stop" : 1630290165630,
        "duration" : 972
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 9,
        "unknown" : 0,
        "total" : 9
      },
      "items" : [ {
        "uid" : "14eab3234f0b12b6",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20733/report/#testresult/14eab3234f0b12b6",
        "status" : "passed",
        "time" : {
          "start" : 1630277114924,
          "stop" : 1630277124242,
          "duration" : 9318
        }
      }, {
        "uid" : "5981575d71525827",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20733/report/#testresult/5981575d71525827",
        "status" : "passed",
        "time" : {
          "start" : 1630275936830,
          "stop" : 1630275949514,
          "duration" : 12684
        }
      }, {
        "uid" : "316bf43f044b63ad",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20733/report/#testresult/316bf43f044b63ad",
        "status" : "passed",
        "time" : {
          "start" : 1629756725993,
          "stop" : 1629756735896,
          "duration" : 9903
        }
      }, {
        "uid" : "2966b2f82cf41443",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20733/report/#testresult/2966b2f82cf41443",
        "status" : "passed",
        "time" : {
          "start" : 1629678040730,
          "stop" : 1629678050211,
          "duration" : 9481
        }
      }, {
        "uid" : "898a9c0ad3ff36e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20733/report/#testresult/898a9c0ad3ff36e",
        "status" : "passed",
        "time" : {
          "start" : 1629675860870,
          "stop" : 1629675871105,
          "duration" : 10235
        }
      }, {
        "uid" : "658c3080efac7ad5",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20733/report/#testresult/658c3080efac7ad5",
        "status" : "passed",
        "time" : {
          "start" : 1629343169823,
          "stop" : 1629343178870,
          "duration" : 9047
        }
      }, {
        "uid" : "f05163c745523f99",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20733/report/#testresult/f05163c745523f99",
        "status" : "passed",
        "time" : {
          "start" : 1629268558502,
          "stop" : 1629268568289,
          "duration" : 9787
        }
      }, {
        "uid" : "127f5a329441f2ea",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20733/report/#testresult/127f5a329441f2ea",
        "status" : "passed",
        "time" : {
          "start" : 1629242890743,
          "stop" : 1629242896705,
          "duration" : 5962
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "47048dd0a37fee54.json",
  "parameterValues" : [ ]
}