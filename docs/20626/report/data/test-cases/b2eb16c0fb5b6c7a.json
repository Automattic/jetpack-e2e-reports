{
  "uid" : "b2eb16c0fb5b6c7a",
  "name" : "WordAds block",
  "fullName" : "WordAds block",
  "historyId" : "18efccdb8f3fb33e445e77a8ef2cffa3",
  "time" : {
    "start" : 1630441098303,
    "stop" : 1630441112610,
    "duration" : 14307
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _prerequisites.prerequisitesBuilder)()\n    .withActiveModules([\"wordads\"])\n    .build();\n  let blockId;\n  await (0, _reporter.testStep)(\"Add a WordAds block\", async () => {\n    await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n    blockId = await blockEditor.insertBlock(\n      _wordAds.default.name(),\n      _wordAds.default.title()\n    );\n    await blockEditor.selectPostTitle();\n  });\n  await (0, _reporter.testStep)(\n    \"Switch to Wide Skyscraper ad format\",\n    async () => {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Publish a post and assert that WordAds block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  await (0, _prerequisites.prerequisitesBuilder)()\n    .withActiveModules([&quot;wordads&quot;])\n    .build();\n  let blockId;\n  await (0, _reporter.testStep)(&quot;Add a WordAds block&quot;, async () =&gt; {\n    await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n    blockId = await blockEditor.insertBlock(\n      _wordAds.default.name(),\n      _wordAds.default.title()\n    );\n    await blockEditor.selectPostTitle();\n  });\n  await (0, _reporter.testStep)(\n    &quot;Switch to Wide Skyscraper ad format&quot;,\n    async () =&gt; {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Publish a post and assert that WordAds block is rendered&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1630441012796,
        "stop" : 1630441020665,
        "duration" : 7869
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1630441083633,
        "stop" : 1630441087345,
        "duration" : 3712
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1630441095555,
        "stop" : 1630441098293,
        "duration" : 2738
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _prerequisites.prerequisitesBuilder)()\n    .withActiveModules([\"wordads\"])\n    .build();\n  let blockId;\n  await (0, _reporter.testStep)(\"Add a WordAds block\", async () => {\n    await blockEditor.waitForAvailableBlock(_wordAds.default.name());\n    blockId = await blockEditor.insertBlock(\n      _wordAds.default.name(),\n      _wordAds.default.title()\n    );\n    await blockEditor.selectPostTitle();\n  });\n  await (0, _reporter.testStep)(\n    \"Switch to Wide Skyscraper ad format\",\n    async () => {\n      const adBlock = new _wordAds.default(blockId, page);\n      await adBlock.focus();\n      await adBlock.switchFormat(4); // switch to Wide Skyscraper ad format\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Publish a post and assert that WordAds block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_wordAds.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Add a WordAds block",
      "time" : {
        "start" : 1630441101239,
        "stop" : 1630441107314,
        "duration" : 6075
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Ad",
        "time" : {
          "start" : 1630441104735,
          "stop" : 1630441106024,
          "duration" : 1289
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: wordads",
        "time" : {
          "start" : 1630441106027,
          "stop" : 1630441106959,
          "duration" : 932
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Switch to Wide Skyscraper ad format",
      "time" : {
        "start" : 1630441107316,
        "stop" : 1630441107946,
        "duration" : 630
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Publish a post and assert that WordAds block is rendered",
      "time" : {
        "start" : 1630441107949,
        "stop" : 1630441112572,
        "duration" : 4623
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Publish post",
        "time" : {
          "start" : 1630441108115,
          "stop" : 1630441109435,
          "duration" : 1320
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "View post",
        "time" : {
          "start" : 1630441109436,
          "stop" : 1630441109945,
          "duration" : 509
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "pro-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 10,
        "unknown" : 0,
        "total" : 10
      },
      "items" : [ {
        "uid" : "86bc741da8126da0",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20626/report/#testresult/86bc741da8126da0",
        "status" : "passed",
        "time" : {
          "start" : 1630439370478,
          "stop" : 1630439382343,
          "duration" : 11865
        }
      }, {
        "uid" : "7c4a7b3f0e89385",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20626/report/#testresult/7c4a7b3f0e89385",
        "status" : "passed",
        "time" : {
          "start" : 1630432431943,
          "stop" : 1630432447268,
          "duration" : 15325
        }
      }, {
        "uid" : "73c384f6b72c00db",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20626/report/#testresult/73c384f6b72c00db",
        "status" : "passed",
        "time" : {
          "start" : 1630429966150,
          "stop" : 1630429978832,
          "duration" : 12682
        }
      }, {
        "uid" : "5b9676c5c2d4672",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20626/report/#testresult/5b9676c5c2d4672",
        "status" : "passed",
        "time" : {
          "start" : 1628796696881,
          "stop" : 1628796710945,
          "duration" : 14064
        }
      }, {
        "uid" : "5411c67a87b7c09c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20626/report/#testresult/5411c67a87b7c09c",
        "status" : "passed",
        "time" : {
          "start" : 1628784550276,
          "stop" : 1628784561574,
          "duration" : 11298
        }
      }, {
        "uid" : "7a1c7084cc1b7d79",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20626/report/#testresult/7a1c7084cc1b7d79",
        "status" : "passed",
        "time" : {
          "start" : 1628782378926,
          "stop" : 1628782391156,
          "duration" : 12230
        }
      }, {
        "uid" : "1a8a820dac588989",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20626/report/#testresult/1a8a820dac588989",
        "status" : "passed",
        "time" : {
          "start" : 1628695996701,
          "stop" : 1628696010648,
          "duration" : 13947
        }
      }, {
        "uid" : "342c27de8cc4e61e",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20626/report/#testresult/342c27de8cc4e61e",
        "status" : "passed",
        "time" : {
          "start" : 1628694435993,
          "stop" : 1628694451847,
          "duration" : 15854
        }
      }, {
        "uid" : "8dd4a9abd5b2684f",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20626/report/#testresult/8dd4a9abd5b2684f",
        "status" : "passed",
        "time" : {
          "start" : 1628618557366,
          "stop" : 1628618569509,
          "duration" : 12143
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "b2eb16c0fb5b6c7a.json",
  "parameterValues" : [ ]
}