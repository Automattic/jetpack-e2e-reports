{
  "uid" : "2ff43ef43f6d20b0",
  "name" : "Pinterest block",
  "fullName" : "Pinterest block",
  "historyId" : "bf919c5c1253559f0d007402decf47af",
  "time" : {
    "start" : 1623706029041,
    "stop" : 1623706036285,
    "duration" : 7244
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a Pinterest block\",\n    async () => {\n      const blockId = await blockEditor.insertBlock(\n        _pinterest.default.name(),\n        _pinterest.default.title()\n      );\n      const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n      await pinterestBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const pinId = _config.default.get(&quot;blocks.pinterest.pinId&quot;);\n\n  await (0, _testSetup.step)(\n    &quot;Can visit the block editor and add a Pinterest block&quot;,\n    async () =&gt; {\n      const blockId = await blockEditor.insertBlock(\n        _pinterest.default.name(),\n        _pinterest.default.title()\n      );\n      const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n      await pinterestBlock.addEmbed();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can publish a post with a Pinterest block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _testSetup.step)(\n    &quot;Can assert that Pinterest block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "948a1136ef112289",
      "status" : "passed",
      "time" : {
        "start" : 1623704668083,
        "stop" : 1623704675257,
        "duration" : 7174
      }
    }, {
      "uid" : "400830acc2ee702c",
      "status" : "passed",
      "time" : {
        "start" : 1623700944493,
        "stop" : 1623700952494,
        "duration" : 8001
      }
    }, {
      "uid" : "a6a7c25042adeeb1",
      "status" : "passed",
      "time" : {
        "start" : 1623446556709,
        "stop" : 1623446564755,
        "duration" : 8046
      }
    }, {
      "uid" : "27be533e4518b332",
      "status" : "passed",
      "time" : {
        "start" : 1623435034498,
        "stop" : 1623435041850,
        "duration" : 7352
      }
    }, {
      "uid" : "5cdfb6c9e9948777",
      "status" : "passed",
      "time" : {
        "start" : 1623433242650,
        "stop" : 1623433246844,
        "duration" : 4194
      }
    }, {
      "uid" : "33105d0f6d0d22e1",
      "status" : "passed",
      "time" : {
        "start" : 1623365068028,
        "stop" : 1623365076684,
        "duration" : 8656
      }
    }, {
      "uid" : "a0686777512fc7cb",
      "status" : "passed",
      "time" : {
        "start" : 1623363834471,
        "stop" : 1623363840862,
        "duration" : 6391
      }
    }, {
      "uid" : "5ac3aae0b2463515",
      "status" : "passed",
      "time" : {
        "start" : 1623357375294,
        "stop" : 1623357380234,
        "duration" : 4940
      }
    }, {
      "uid" : "4419a9275eeb2b58",
      "status" : "passed",
      "time" : {
        "start" : 1623356417008,
        "stop" : 1623356425082,
        "duration" : 8074
      }
    } ],
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "2ff43ef43f6d20b0.json",
  "parameterValues" : [ ]
}