{
  "uid" : "2251f3e4f1268218",
  "name" : "Pinterest block",
  "fullName" : "Pinterest block",
  "historyId" : "bf919c5c1253559f0d007402decf47af",
  "time" : {
    "start" : 1633607199376,
    "stop" : 1633607207182,
    "duration" : 7806
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _reporter.testStep)(\"Add a Pinterest block\", async () => {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const pinId = _config.default.get(&quot;blocks.pinterest.pinId&quot;);\n\n  await (0, _reporter.testStep)(&quot;Add a Pinterest block&quot;, async () =&gt; {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    &quot;Publish a post with a Pinterest block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can assert that Pinterest block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1633607191870,
        "stop" : 1633607199368,
        "duration" : 7498
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1633607207298,
        "stop" : 1633607210487,
        "duration" : 3189
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _reporter.testStep)(\"Add a Pinterest block\", async () => {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Add a Pinterest block",
      "time" : {
        "start" : 1633607199405,
        "stop" : 1633607202815,
        "duration" : 3410
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Pinterest",
        "time" : {
          "start" : 1633607199412,
          "stop" : 1633607200380,
          "duration" : 968
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: pinterest",
        "time" : {
          "start" : 1633607200384,
          "stop" : 1633607200843,
          "duration" : 459
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Publish a post with a Pinterest block",
      "time" : {
        "start" : 1633607202819,
        "stop" : 1633607206327,
        "duration" : 3508
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Publish post",
        "time" : {
          "start" : 1633607202975,
          "stop" : 1633607204710,
          "duration" : 1735
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "View post",
        "time" : {
          "start" : 1633607204726,
          "stop" : 1633607206327,
          "duration" : 1601
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Can assert that Pinterest block is rendered",
      "time" : {
        "start" : 1633607206331,
        "stop" : 1633607207154,
        "duration" : 823
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "tag",
    "value" : "Jetpack version: 10.3-alpha-25d31973885bb8622b28d7c043b6ec729d4a6e2a"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 9,
        "unknown" : 0,
        "total" : 9
      },
      "items" : [ {
        "uid" : "2d5b36c4872ed631",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21234/report/#testresult/2d5b36c4872ed631",
        "status" : "passed",
        "time" : {
          "start" : 1633545975754,
          "stop" : 1633545984473,
          "duration" : 8719
        }
      }, {
        "uid" : "3f37f2ceea4041fd",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21234/report/#testresult/3f37f2ceea4041fd",
        "status" : "passed",
        "time" : {
          "start" : 1633541672747,
          "stop" : 1633541680620,
          "duration" : 7873
        }
      }, {
        "uid" : "6c663ceb71b06024",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21234/report/#testresult/6c663ceb71b06024",
        "status" : "passed",
        "time" : {
          "start" : 1633359383521,
          "stop" : 1633359393052,
          "duration" : 9531
        }
      }, {
        "uid" : "7a1a32240424b842",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21234/report/#testresult/7a1a32240424b842",
        "status" : "passed",
        "time" : {
          "start" : 1633120440668,
          "stop" : 1633120449015,
          "duration" : 8347
        }
      }, {
        "uid" : "11c59dbe609107f4",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21234/report/#testresult/11c59dbe609107f4",
        "status" : "passed",
        "time" : {
          "start" : 1633094001369,
          "stop" : 1633094008184,
          "duration" : 6815
        }
      }, {
        "uid" : "57b633f21417321b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21234/report/#testresult/57b633f21417321b",
        "status" : "passed",
        "time" : {
          "start" : 1633090416223,
          "stop" : 1633090426462,
          "duration" : 10239
        }
      }, {
        "uid" : "8705082683a91ed5",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21234/report/#testresult/8705082683a91ed5",
        "status" : "passed",
        "time" : {
          "start" : 1633088306573,
          "stop" : 1633088315252,
          "duration" : 8679
        }
      }, {
        "uid" : "f212010b419cee35",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/21234/report/#testresult/f212010b419cee35",
        "status" : "passed",
        "time" : {
          "start" : 1632924056986,
          "stop" : 1632924066735,
          "duration" : 9749
        }
      } ]
    },
    "tags" : [ "Jetpack version: 10.3-alpha-25d31973885bb8622b28d7c043b6ec729d4a6e2a" ]
  },
  "source" : "2251f3e4f1268218.json",
  "parameterValues" : [ ]
}