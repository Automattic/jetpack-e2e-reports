{
  "uid" : "42559c1fe6cd3f8e",
  "name" : "Can display different result formats",
  "fullName" : "Can display different result formats",
  "historyId" : "e4b5ee96e0f801846ffdc3a858c32dad",
  "time" : {
    "start" : 1627350935815,
    "stop" : 1627350972851,
    "duration" : 37036
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _testSetup.step)(\"Can use minimal format\", async () => {\n    await homepage.goto(`${siteUrl}?result_format=minimal`);\n    await homepage.waitForPage();\n    await homepage.waitForNetworkIdle();\n    await homepage.focusSearchInput();\n    await homepage.enterQuery(\"random-string-1\");\n    await homepage.waitForSearchResponse();\n\n    expect(await homepage.isOverlayVisible()).toBeTruthy();\n    expect(await homepage.isResultFormat(\"is-format-minimal\")).toBeTruthy();\n  });\n  await (0, _testSetup.step)(\"Can use product format\", async () => {\n    await homepage.goto(`${siteUrl}?result_format=product`);\n    await homepage.waitForPage();\n    await homepage.waitForNetworkIdle();\n    await homepage.focusSearchInput();\n    await homepage.enterQuery(\"random-string-2\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isOverlayVisible()).toBeTruthy();\n    expect(await homepage.isResultFormat(\"is-format-product\")).toBeTruthy();\n    expect(await homepage.isProductImageVisible()).toBeTruthy();\n    expect(await homepage.isProductPriceVisible()).toBeTruthy();\n  });\n  await (0, _testSetup.step)(\"Can use expanded format\", async () => {\n    await homepage.goto(`${siteUrl}?result_format=expanded&s=random-string-3`);\n    await homepage.waitForPage();\n    await homepage.waitForNetworkIdle();\n    expect(await homepage.isOverlayVisible()).toBeTruthy();\n    expect(await homepage.isResultFormat(\"is-format-expanded\")).toBeTruthy();\n    expect(await homepage.isExpandedImageVisible()).toBeTruthy();\n  });\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  await (0, _testSetup.step)(&quot;Can use minimal format&quot;, async () =&gt; {\n    await homepage.goto(`${siteUrl}?result_format=minimal`);\n    await homepage.waitForPage();\n    await homepage.waitForNetworkIdle();\n    await homepage.focusSearchInput();\n    await homepage.enterQuery(&quot;random-string-1&quot;);\n    await homepage.waitForSearchResponse();\n\n    expect(await homepage.isOverlayVisible()).toBeTruthy();\n    expect(await homepage.isResultFormat(&quot;is-format-minimal&quot;)).toBeTruthy();\n  });\n  await (0, _testSetup.step)(&quot;Can use product format&quot;, async () =&gt; {\n    await homepage.goto(`${siteUrl}?result_format=product`);\n    await homepage.waitForPage();\n    await homepage.waitForNetworkIdle();\n    await homepage.focusSearchInput();\n    await homepage.enterQuery(&quot;random-string-2&quot;);\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isOverlayVisible()).toBeTruthy();\n    expect(await homepage.isResultFormat(&quot;is-format-product&quot;)).toBeTruthy();\n    expect(await homepage.isProductImageVisible()).toBeTruthy();\n    expect(await homepage.isProductPriceVisible()).toBeTruthy();\n  });\n  await (0, _testSetup.step)(&quot;Can use expanded format&quot;, async () =&gt; {\n    await homepage.goto(`${siteUrl}?result_format=expanded&amp;s=random-string-3`);\n    await homepage.waitForPage();\n    await homepage.waitForNetworkIdle();\n    expect(await homepage.isOverlayVisible()).toBeTruthy();\n    expect(await homepage.isResultFormat(&quot;is-format-expanded&quot;)).toBeTruthy();\n    expect(await homepage.isExpandedImageVisible()).toBeTruthy();\n  });\n};\n\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "TimeoutError",
  "statusTrace" : "page.focus: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"input.wp-block-search__input\"\n============================================================\nNote: use DEBUG=pw:api environment variable to capture Playwright logs.",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _testSetup.step)(\"Can use minimal format\", async () => {\n    await homepage.goto(`${siteUrl}?result_format=minimal`);\n    await homepage.waitForPage();\n    await homepage.waitForNetworkIdle();\n    await homepage.focusSearchInput();\n    await homepage.enterQuery(\"random-string-1\");\n    await homepage.waitForSearchResponse();\n\n    expect(await homepage.isOverlayVisible()).toBeTruthy();\n    expect(await homepage.isResultFormat(\"is-format-minimal\")).toBeTruthy();\n  });\n  await (0, _testSetup.step)(\"Can use product format\", async () => {\n    await homepage.goto(`${siteUrl}?result_format=product`);\n    await homepage.waitForPage();\n    await homepage.waitForNetworkIdle();\n    await homepage.focusSearchInput();\n    await homepage.enterQuery(\"random-string-2\");\n    await homepage.waitForSearchResponse();\n    expect(await homepage.isOverlayVisible()).toBeTruthy();\n    expect(await homepage.isResultFormat(\"is-format-product\")).toBeTruthy();\n    expect(await homepage.isProductImageVisible()).toBeTruthy();\n    expect(await homepage.isProductPriceVisible()).toBeTruthy();\n  });\n  await (0, _testSetup.step)(\"Can use expanded format\", async () => {\n    await homepage.goto(`${siteUrl}?result_format=expanded&s=random-string-3`);\n    await homepage.waitForPage();\n    await homepage.waitForNetworkIdle();\n    expect(await homepage.isOverlayVisible()).toBeTruthy();\n    expect(await homepage.isResultFormat(\"is-format-expanded\")).toBeTruthy();\n    expect(await homepage.isExpandedImageVisible()).toBeTruthy();\n  });\n};\n\n```\n",
    "status" : "broken",
    "statusMessage" : "TimeoutError",
    "statusTrace" : "page.focus: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"input.wp-block-search__input\"\n============================================================\nNote: use DEBUG=pw:api environment variable to capture Playwright logs.",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "6d4c797a17718b3e",
      "name" : "Search - Can display different result formats",
      "source" : "6d4c797a17718b3e.png",
      "type" : "image/png",
      "size" : 52630
    }, {
      "uid" : "98f1de671bbfc815",
      "name" : "1627350968196_Search___Can_display_different_result_formats.webm",
      "source" : "98f1de671bbfc815.webm",
      "type" : "video/webm",
      "size" : 559973
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "search.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 11,
        "skipped" : 0,
        "passed" : 2,
        "unknown" : 0,
        "total" : 13
      },
      "items" : [ {
        "uid" : "d9d73c5b4f22a690",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20448/report/#testresult/d9d73c5b4f22a690",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1627349614085,
          "stop" : 1627349652065,
          "duration" : 37980
        }
      }, {
        "uid" : "24dc119706bcc1dc",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20448/report/#testresult/24dc119706bcc1dc",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1627348585640,
          "stop" : 1627348622120,
          "duration" : 36480
        }
      }, {
        "uid" : "30339dd4d09fc05c",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20448/report/#testresult/30339dd4d09fc05c",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1627340899962,
          "stop" : 1627340938187,
          "duration" : 38225
        }
      }, {
        "uid" : "48120d6f93cacbbe",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20448/report/#testresult/48120d6f93cacbbe",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1627339545965,
          "stop" : 1627339546006,
          "duration" : 41
        }
      }, {
        "uid" : "70803ac9537aaac8",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20448/report/#testresult/70803ac9537aaac8",
        "status" : "passed",
        "time" : {
          "start" : 1627337317522,
          "stop" : 1627337324838,
          "duration" : 7316
        }
      }, {
        "uid" : "2d154cbd8b1dbc63",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20448/report/#testresult/2d154cbd8b1dbc63",
        "status" : "passed",
        "time" : {
          "start" : 1627335675014,
          "stop" : 1627335682253,
          "duration" : 7239
        }
      }, {
        "uid" : "3d27317b4578b4fd",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20448/report/#testresult/3d27317b4578b4fd",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1627294366402,
          "stop" : 1627294402626,
          "duration" : 36224
        }
      }, {
        "uid" : "babaa6936cf80198",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20448/report/#testresult/babaa6936cf80198",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1627292963382,
          "stop" : 1627292999372,
          "duration" : 35990
        }
      }, {
        "uid" : "b898eb46275ff063",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20448/report/#testresult/b898eb46275ff063",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1627291413698,
          "stop" : 1627291451326,
          "duration" : 37628
        }
      }, {
        "uid" : "bafb2ade649e1790",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20448/report/#testresult/bafb2ade649e1790",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1627289728962,
          "stop" : 1627289765691,
          "duration" : 36729
        }
      }, {
        "uid" : "85ea9c8a42235389",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20448/report/#testresult/85ea9c8a42235389",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1627284546940,
          "stop" : 1627284585223,
          "duration" : 38283
        }
      }, {
        "uid" : "fb93595e3b1d4bc",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20448/report/#testresult/fb93595e3b1d4bc",
        "status" : "broken",
        "statusDetails" : "TimeoutError",
        "time" : {
          "start" : 1627283332854,
          "stop" : 1627283369904,
          "duration" : 37050
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "42559c1fe6cd3f8e.json",
  "parameterValues" : [ ]
}