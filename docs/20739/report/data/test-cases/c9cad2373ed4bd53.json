{
  "uid" : "c9cad2373ed4bd53",
  "name" : "Pinterest block",
  "fullName" : "Pinterest block",
  "historyId" : "bf919c5c1253559f0d007402decf47af",
  "time" : {
    "start" : 1630107794325,
    "stop" : 1630107803405,
    "duration" : 9080
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _reporter.testStep)(\"Add a Pinterest block\", async () => {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  const pinId = _config.default.get(&quot;blocks.pinterest.pinId&quot;);\n\n  await (0, _reporter.testStep)(&quot;Add a Pinterest block&quot;, async () =&gt; {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    &quot;Publish a post with a Pinterest block&quot;,\n    async () =&gt; {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    &quot;Can assert that Pinterest block is rendered&quot;,\n    async () =&gt; {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1630107785814,
        "stop" : 1630107794322,
        "duration" : 8508
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "Visit block editor page",
      "time" : {
        "start" : 1630107803544,
        "stop" : 1630107806627,
        "duration" : 3083
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  const pinId = _config.default.get(\"blocks.pinterest.pinId\");\n\n  await (0, _reporter.testStep)(\"Add a Pinterest block\", async () => {\n    const blockId = await blockEditor.insertBlock(\n      _pinterest.default.name(),\n      _pinterest.default.title()\n    );\n    const pinterestBlock = new _pinterest.default(blockId, page, pinId);\n    await pinterestBlock.addEmbed();\n  });\n  await (0, _reporter.testStep)(\n    \"Publish a post with a Pinterest block\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n    }\n  );\n  await (0, _reporter.testStep)(\n    \"Can assert that Pinterest block is rendered\",\n    async () => {\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_pinterest.default, {\n          pinId,\n        })\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Add a Pinterest block",
      "time" : {
        "start" : 1630107794430,
        "stop" : 1630107798724,
        "duration" : 4294
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Search for block: Pinterest",
        "time" : {
          "start" : 1630107794431,
          "stop" : 1630107796479,
          "duration" : 2048
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Insert block with name: pinterest",
        "time" : {
          "start" : 1630107796480,
          "stop" : 1630107797001,
          "duration" : 521
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Publish a post with a Pinterest block",
      "time" : {
        "start" : 1630107798725,
        "stop" : 1630107802373,
        "duration" : 3648
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Publish post",
        "time" : {
          "start" : 1630107798976,
          "stop" : 1630107800857,
          "duration" : 1881
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "View post",
        "time" : {
          "start" : 1630107800861,
          "stop" : 1630107802373,
          "duration" : 1512
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Can assert that Pinterest block is rendered",
      "time" : {
        "start" : 1630107802384,
        "stop" : 1630107803365,
        "duration" : 981
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "free-blocks.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 10,
        "unknown" : 0,
        "total" : 10
      },
      "items" : [ {
        "uid" : "d8eb8db0eb73f5d1",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20739/report/#testresult/d8eb8db0eb73f5d1",
        "status" : "passed",
        "time" : {
          "start" : 1630097960416,
          "stop" : 1630097967900,
          "duration" : 7484
        }
      }, {
        "uid" : "6943cd3d468c4002",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20739/report/#testresult/6943cd3d468c4002",
        "status" : "passed",
        "time" : {
          "start" : 1630095506027,
          "stop" : 1630095515605,
          "duration" : 9578
        }
      }, {
        "uid" : "456888747a289761",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20739/report/#testresult/456888747a289761",
        "status" : "passed",
        "time" : {
          "start" : 1630082527019,
          "stop" : 1630082537033,
          "duration" : 10014
        }
      }, {
        "uid" : "d35e855d71b0032a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20739/report/#testresult/d35e855d71b0032a",
        "status" : "passed",
        "time" : {
          "start" : 1630077752439,
          "stop" : 1630077760235,
          "duration" : 7796
        }
      }, {
        "uid" : "561d71faaa4a75a",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20739/report/#testresult/561d71faaa4a75a",
        "status" : "passed",
        "time" : {
          "start" : 1630011661977,
          "stop" : 1630011667657,
          "duration" : 5680
        }
      }, {
        "uid" : "e55cb7905c8e262b",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20739/report/#testresult/e55cb7905c8e262b",
        "status" : "passed",
        "time" : {
          "start" : 1629386470460,
          "stop" : 1629386478733,
          "duration" : 8273
        }
      }, {
        "uid" : "79199964d078e9f3",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20739/report/#testresult/79199964d078e9f3",
        "status" : "passed",
        "time" : {
          "start" : 1629326464705,
          "stop" : 1629326470854,
          "duration" : 6149
        }
      }, {
        "uid" : "e326e34ec02dd47d",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20739/report/#testresult/e326e34ec02dd47d",
        "status" : "passed",
        "time" : {
          "start" : 1629317321108,
          "stop" : 1629317327004,
          "duration" : 5896
        }
      }, {
        "uid" : "5011b0e40155f9a2",
        "reportUrl" : "https://automattic.github.io/jetpack-e2e-reports/20739/report/#testresult/5011b0e40155f9a2",
        "status" : "passed",
        "time" : {
          "start" : 1629297422216,
          "stop" : 1629297427249,
          "duration" : 5033
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "c9cad2373ed4bd53.json",
  "parameterValues" : [ ]
}