{
  "uid" : "93ec6e406594f6f5",
  "name" : "Plugin updater",
  "fullName" : "Plugin updater",
  "historyId" : "852b81330bf593f57dd55d00e7a2eb83",
  "time" : {
    "start" : 1629292253922,
    "stop" : 1629292281976,
    "duration" : 28054
  },
  "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _reporter.testStep)(\n    \"Can login and navigate to Plugins page\",\n    async () => {\n      await (await _sidebar.default.init(page)).selectInstalledPlugins();\n      await _plugins.default.init(page);\n    }\n  );\n  await (0, _reporter.testStep)(\"Can update Jetpack\", async () => {\n    const pluginsPage = await _plugins.default.init(page);\n    const versionBefore = await pluginsPage.getJetpackVersion();\n    await pluginsPage.updateJetpack();\n    const versionAfter = await pluginsPage.getJetpackVersion();\n\n    expect(versionBefore).not.toBe(versionAfter);\n  });\n  await (0, _reporter.testStep)(\"Can connect Jetpack\", async () => {\n    await (await _sidebar.default.init(page)).selectJetpack();\n    await (0, _jetpackConnect.doInPlaceConnection)();\n    const jetpackPage = await _jetpack.default.init(page);\n    expect(await jetpackPage.isConnected()).toBeTruthy();\n  });\n};\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">async () =&gt; {\n  await (0, _reporter.testStep)(\n    &quot;Can login and navigate to Plugins page&quot;,\n    async () =&gt; {\n      await (await _sidebar.default.init(page)).selectInstalledPlugins();\n      await _plugins.default.init(page);\n    }\n  );\n  await (0, _reporter.testStep)(&quot;Can update Jetpack&quot;, async () =&gt; {\n    const pluginsPage = await _plugins.default.init(page);\n    const versionBefore = await pluginsPage.getJetpackVersion();\n    await pluginsPage.updateJetpack();\n    const versionAfter = await pluginsPage.getJetpackVersion();\n\n    expect(versionBefore).not.toBe(versionAfter);\n  });\n  await (0, _reporter.testStep)(&quot;Can connect Jetpack&quot;, async () =&gt; {\n    await (await _sidebar.default.init(page)).selectJetpack();\n    await (0, _jetpackConnect.doInPlaceConnection)();\n    const jetpackPage = await _jetpack.default.init(page);\n    expect(await jetpackPage.isConnected()).toBeTruthy();\n  });\n};\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\nasync () => {\n  await (0, _reporter.testStep)(\n    \"Can login and navigate to Plugins page\",\n    async () => {\n      await (await _sidebar.default.init(page)).selectInstalledPlugins();\n      await _plugins.default.init(page);\n    }\n  );\n  await (0, _reporter.testStep)(\"Can update Jetpack\", async () => {\n    const pluginsPage = await _plugins.default.init(page);\n    const versionBefore = await pluginsPage.getJetpackVersion();\n    await pluginsPage.updateJetpack();\n    const versionAfter = await pluginsPage.getJetpackVersion();\n\n    expect(versionBefore).not.toBe(versionAfter);\n  });\n  await (0, _reporter.testStep)(\"Can connect Jetpack\", async () => {\n    await (await _sidebar.default.init(page)).selectJetpack();\n    await (0, _jetpackConnect.doInPlaceConnection)();\n    const jetpackPage = await _jetpack.default.init(page);\n    expect(await jetpackPage.isConnected()).toBeTruthy();\n  });\n};\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "Can login and navigate to Plugins page",
      "time" : {
        "start" : 1629292254015,
        "stop" : 1629292255859,
        "duration" : 1844
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can update Jetpack",
      "time" : {
        "start" : 1629292255860,
        "stop" : 1629292260694,
        "duration" : 4834
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Can connect Jetpack",
      "time" : {
        "start" : 1629292260703,
        "stop" : 1629292281946,
        "duration" : 21243
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "specs"
  }, {
    "name" : "package",
    "value" : "specs"
  }, {
    "name" : "subSuite",
    "value" : "plugin-updater.test.js"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "93ec6e406594f6f5.json",
  "parameterValues" : [ ]
}