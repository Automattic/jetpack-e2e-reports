{"uuid":"80ba8204-d851-453d-9858-9702eeed348a","historyId":"1e0e5667b8c419e68fc1ae6a0d73dd61","status":"broken","statusDetails":{"message":"Error","trace":"ConnectionsPage is not available after 3rd attempt"},"stage":"finished","steps":[],"attachments":[{"name":"Paid blocks - MailChimp Block","type":"image/png","source":"8bec95e2-45ea-4868-93ed-7024929603b5-attachment.png"},{"name":"Paid blocks - MailChimp Block","type":"image/png","source":"a855db46-c9c2-45a2-839f-4aa0f4070732-attachment.png"}],"parameters":[],"labels":[{"name":"thread","value":"1"},{"name":"parentSuite","value":"specs"},{"name":"package","value":"specs"},{"name":"subSuite","value":"pro-blocks.test.js"}],"links":[],"start":1623269261758,"name":"MailChimp Block","fullName":"MailChimp Block","description":"\n### Test\n```typescript\nasync () => {\n  let blockId;\n  await (0, _testSetup.step)(\n    \"Can visit the block editor and add a MailChimp block\",\n    async () => {\n      blockId = await blockEditor.insertBlock(\n        _mailchimp.default.name(),\n        _mailchimp.default.title()\n      );\n    }\n  );\n  await (0, _testSetup.step)(\"Can connect to a MailChimp\", async () => {\n    const mcBlock = new _mailchimp.default(blockId, page);\n    await mcBlock.connect();\n  });\n  await (0, _testSetup.step)(\n    \"Can publish a post and assert that MailChimp block is rendered\",\n    async () => {\n      await blockEditor.selectPostTitle();\n      await blockEditor.publishPost();\n      await blockEditor.viewPost();\n      const frontend = await _postFrontend.default.init(page);\n\n      expect(\n        await frontend.isRenderedBlockPresent(_mailchimp.default)\n      ).toBeTruthy();\n    }\n  );\n};\n\n```\n","stop":1623269388023}